class ZCL_SEZ_INFOTYPES definition
  PUBLIC
  FINAL
  CREATE PUBLIC .

public section.
INTERFACES if_amdp_marker_hdb .
CLASS-METHODS READ_HR000
FOR TABLE FUNCTION ZSEZ_TF_ITYP_HR000.

CLASS-METHODS READ_HR002
FOR TABLE FUNCTION ZSEZ_TF_ITYP_HR002.

CLASS-METHODS READ_HR006
FOR TABLE FUNCTION ZSEZ_TF_ITYP_HR006.

CLASS-METHODS READ_HR351
FOR TABLE FUNCTION ZSEZ_TF_ITYP_HR351.

CLASS-METHODS READ_HR001
FOR TABLE FUNCTION ZSEZ_TF_ITYP_HR001.

CLASS-METHODS READ_HR105
FOR TABLE FUNCTION ZSEZ_TF_ITYP_HR105.

CLASS-METHODS READ_HR001_TEST
FOR TABLE FUNCTION ZSEZ_TF_ITYP_HR001_T.

CLASS-METHODS READ_HR008
FOR TABLE FUNCTION ZSEZ_TF_ITYP_HR008.

CLASS-METHODS READ_HR041
FOR TABLE FUNCTION ZSEZ_TF_ITYP_HR041.

CLASS-METHODS READ_HR016
FOR TABLE FUNCTION ZSEZ_TF_ITYP_HR016.

CLASS-METHODS READ_HR007
FOR TABLE FUNCTION ZSEZ_TF_ITYP_HR007.

CLASS-METHODS READ_HR032
FOR TABLE FUNCTION ZSEZ_TF_ITYP_HR032.

CLASS-METHODS READ_HR315
FOR TABLE FUNCTION ZSEZ_TF_ITYP_HR315.

CLASS-METHODS READ_HR101
FOR TABLE FUNCTION ZSEZ_TF_ITYP_HR101.

protected section.
private section.
ENDCLASS.

CLASS ZCL_SEZ_INFOTYPES IMPLEMENTATION.

METHOD READ_HR000
BY DATABASE FUNCTION FOR HDB
  LANGUAGE SQLSCRIPT
  OPTIONS READ-ONLY
  USING /BIC/AFLHR00200 /BIC/AFLHR00000 /BI0/TACTIONREAS /BI0/TACTIONTYPE /BIC/AFLHR00100
  ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE
  .
DECLARE string_list_comp_code varchar( 1333 );
string_list_comp_code = '';

cte_column_comp_code=
SELECT BASE_MEMBER AS COMP_CODE FROM "ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE"(:p_comp_code);

select STRING_AGG(COMP_CODE, ',' ORDER BY COMP_CODE) into string_list_comp_code
FROM :cte_column_comp_code;

cte_hr001=
SELECT DISTINCT
EMPLOYEE,
COMP_CODE
FROM "/BIC/AFLHR00100"
WHERE DATEFROM <= p_keydate AND DATETO >= :p_keydate
AND emplgroup <> '2'
AND COMP_CODE IN
(SELECT distinct RESULT AS COMP_CODE FROM SQLSCRIPT_STRING:SPLIT_TO_TABLE(:p_comp_code , ',', -1) )
AND EMPLOYEE IN
( SELECT DISTINCT EMPLOYEE FROM "/BIC/AFLHR00000"
WHERE "EMPLSTATUS"  in (SELECT distinct RESULT AS nodename FROM SQLSCRIPT_STRING:SPLIT_TO_TABLE('3' , ',', -1))
AND "DATEFROM" <= :p_keydate AND "DATETO" >= :p_keydate
AND EMPLOYEE IN ( SELECT DISTINCT EMPLOYEE FROM  "/BIC/AFLHR00100" WHERE "DATEFROM" <= :p_keydate AND "DATETO" >= :p_keydate
AND COMP_CODE IN ( SELECT distinct RESULT AS COMP_CODE FROM SQLSCRIPT_STRING:SPLIT_TO_TABLE(:p_comp_code , ',', -1) ) )
)
;

cte_hr002=
SELECT
EMPLOYEE
,DATETO
,DATEFROM
,"/BIC/SUBTY" AS SUBTY
,"/BIC/OBJPS" AS OBJPS
,"/BIC/SEQNR" AS SEQNR
,"/BIC/INFTY" AS INFTY
,CH_ON
,"/BIC/VORNA" AS "LEGAL_FIRST_NAME"
,"/BIC/NACHN" AS "LEGAL_LAST_NAME"
FROM "/BIC/AFLHR00200"
WHERE "DATEFROM" <= :p_keydate AND "DATETO" >= :p_keydate
;


cte_hr000_prep=
SELECT
"HR000"."EMPLOYEE"
,"HR002". "LEGAL_FIRST_NAME"
,"HR002". "LEGAL_LAST_NAME"
,"HR000"."DATETO"
,"HR000"."DATEFROM"
,"/BIC/SUBTY" AS "SUBTY"
,"/BIC/OBJPS" AS "OBJPS"
,"/BIC/SEQNR" AS "SEQNR"
,"/BIC/INFTY" AS "INFTY"
,"HR000"."CH_ON"
,"HR000"."EMPLSTATUS"
,"HR000"."ACTIONREAS"
,"HR000"."ACTIONTYPE"
,"HR000"."/BIC/UNAME" AS "UNAME"
FROM "/BIC/AFLHR00000" AS "HR000"
LEFT OUTER JOIN :cte_hr002 AS "HR002"
ON "HR000"."EMPLOYEE" = "HR002"."EMPLOYEE"
WHERE "HR000"."EMPLSTATUS" in
(SELECT distinct RESULT AS nodename FROM SQLSCRIPT_STRING:SPLIT_TO_TABLE(:p_emplstatus , ',', -1)) AND
"HR000"."DATEFROM" <= :p_keydate AND
"HR000"."DATETO" >= :p_keydate
;
cte_hr000=
SELECT
"HR000"."EMPLOYEE"

,"HR000"."SUBTY"
,"HR000"."OBJPS"
,"HR000"."DATETO"
,"HR000"."DATEFROM"
,"HR000"."SEQNR"
,"HR000"."INFTY"
,"HR000"."CH_ON"
,"HR000"."UNAME"

,"LEGAL_FIRST_NAME"
,"LEGAL_LAST_NAME"
,"HR000"."EMPLSTATUS"
,"HR000"."ACTIONREAS"
,"HR000"."ACTIONTYPE"
,"ART"."TXTMD" AS "ACTIONREAS_DESC"
,"AT"."TXTMD" AS "ACTIONTYPE_DESC"

FROM :cte_hr000_prep AS "HR000"
INNER JOIN :cte_hr001 AS "HR001"
ON "HR001"."EMPLOYEE" = "HR000"."EMPLOYEE"
LEFT OUTER JOIN "/BI0/TACTIONREAS" AS ART
ON "ART"."ACTIONREAS" = "HR000"."ACTIONREAS" AND "ART"."ACTIONTYPE" = "HR000"."ACTIONTYPE" AND "ART"."LANGU" = 'E'
LEFT OUTER JOIN "/BI0/TACTIONTYPE" AS "AT"
ON "AT"."ACTIONTYPE" = "HR000"."ACTIONTYPE" AND "AT"."LANGU" = 'E'

ORDER BY 1
;
RETURN
SELECT
   EMPLOYEE
,   LEGAL_FIRST_NAME
,   LEGAL_LAST_NAME

,   DATETO
,   DATEFROM
,   SUBTY
,   OBJPS
,   SEQNR
,   INFTY
,   CH_ON
,   UNAME

,   EMPLSTATUS
,   ACTIONREAS
,   ACTIONTYPE
,   ACTIONREAS_DESC
,   ACTIONTYPE_DESC

FROM :cte_hr000;
endmethod.


METHOD READ_HR001
BY DATABASE FUNCTION FOR HDB
  LANGUAGE SQLSCRIPT
  OPTIONS READ-ONLY
  USING /BIC/AFLHR00100
  ZCL_SEZ_INFOTYPES=>READ_HR000
  ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE  /BI0/TPERS_AREA /BI0/TPERS_SAREA /BI0/TEMPLSGROUP /BI0/TEMPLGROUP
  /BIC/AZLE_MAP7 /BI0/THRPOSITION ZCL_SEZ_INFOTYPES=>GET_EMPLOYEE_PLANIWARE_DATA
  .
DECLARE string_list_status varchar( 1333 );
DECLARE string_list_comp_code varchar( 1333 );
string_list_status = '';
string_list_comp_code = '';
cte_column_status=
SELECT BASE_MEMBER FROM "ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE"(:p_emplstatus)
;
select STRING_AGG(BASE_MEMBER, ',' ORDER BY BASE_MEMBER) into string_list_status
FROM :cte_column_status;

cte_column_comp_code=
SELECT BASE_MEMBER AS COMP_CODE FROM "ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE"(:p_comp_code)
;
select STRING_AGG(COMP_CODE, ',' ORDER BY COMP_CODE) into string_list_comp_code
FROM :cte_column_comp_code;

cte_position_prep=
SELECT HRPOSITION, TXTSH, TXTMD, LANGU
FROM "/BI0/THRPOSITION" AS "POS"
WHERE
"POS"."DATEFROM" <= :p_keydate AND
"POS"."DATETO" >= :p_keydate AND ( TXTSH <> '' OR TXTMD <> '' )
;
cte_position_j=
select DISTINCT U.HRPOSITION,
CASE WHEN E.TXTMD IS NULL THEN U.TXTMD ELSE E.TXTMD END AS POSITION_TEXT,
COUNT(*)
from :cte_position_prep as U
LEFT OUTER JOIN :cte_position_prep as E
ON E.HRPOSITION = U.HRPOSITION AND E.LANGU = 'E'
GROUP BY
U.HRPOSITION,
E.TXTMD,
U.TXTMD
;
cte_position=
SELECT DISTINCT HRPOSITION, POSITION_TEXT, COUNT(HRPOSITION) AS CTR
FROM :cte_position_j
WHERE POSITION_TEXT <> ''
GROUP BY HRPOSITION, POSITION_TEXT
ORDER BY 1
;

cte_planisw=
SELECT * FROM "ZCL_SEZ_INFOTYPES=>GET_EMPLOYEE_PLANIWARE_DATA"();

cte_hr000=
SELECT *
FROM "ZCL_SEZ_INFOTYPES=>READ_HR000"
( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :string_list_status, P_COMP_CODE => :string_list_comp_code );

cte_hr001_prep=
SELECT
row_number() over
(partition by "HR001_P"."EMPLOYEE","HR001_P"."/BIC/SUBTY","HR001_P"."DATETO","HR001_P"."DATEFROM","HR001_P"."/BIC/SEQNR"
ORDER BY "HR001_P"."CH_ON" DESC) as rownumber,
"HR001_P"."EMPLOYEE"
,"HR000"."LEGAL_FIRST_NAME"
,"HR000"."LEGAL_LAST_NAME"
,"HR001_P"."COMP_CODE"
,"HR001_P"."PERS_AREA"
--,"HR001_P"."PERS_AREA_DESC"
,"HR001_P"."PERS_SAREA"
--,"HR001_P"."PERS_SAREA_DESC"
,"HR001_P"."EMPLGROUP"
-- GLOBAL_EMPLOYEE_LEVEL as "HR001_P"."EMPLSGROUP_TEXT"
,"HR001_P"."EMPLSGROUP"
,"HR001_P"."JOB"
--,"HR001_P"."LEGALENTITY"
--,"HR001_P"."LEGAL_ENTITY_TXT"
,"HR001_P"."BUS_AREA"
,"HR001_P"."PAYRL_AREA"
,"HR001_P"."EMPLCNTRCT"
,"HR001_P"."MAST_CCTR"
,"HR001_P"."ORGUNIT"
,"HR001_P"."HRPOSITION"

,"HR001_P"."DATETO"
,"HR001_P"."DATEFROM"
,"HR001_P"."/BIC/SUBTY" AS "SUBTY"
,"HR001_P"."/BIC/OBJPS" AS "OBJPS"
,"HR001_P"."/BIC/SEQNR" AS "SEQNR"
,"HR001_P"."/BIC/INFTY" AS "INFTY"
,"HR001_P"."CH_ON"
,"HR001_P"."/BIC/UNAME" AS "UNAME"

,"HR001_P"."EE_SNAME"
,"HR001_P"."CO_MST_AR"
,"HR001_P"."COUNTRY_ID"
,"HR001_P"."HR_OBJTYPE"
,"HR001_P"."/BIC/SBMOD" AS "SBMOD"

FROM "/BIC/AFLHR00100" AS "HR001_P"
INNER JOIN :cte_hr000 AS "HR000" ON
"HR001_P"."EMPLOYEE" = "HR000"."EMPLOYEE" AND
"HR001_P"."DATEFROM" <= :p_keydate AND
"HR001_P"."DATETO" >= :p_keydate

GROUP BY
"HR001_P"."EMPLOYEE"
,"HR000"."LEGAL_FIRST_NAME"
,"HR000"."LEGAL_LAST_NAME"
,"HR001_P"."COMP_CODE"
,"HR001_P"."PERS_AREA"
,"HR001_P"."PERS_SAREA"
,"HR001_P"."EMPLGROUP"
,"HR001_P"."EMPLSGROUP"
,"HR001_P"."JOB"
,"HR001_P"."BUS_AREA"
,"HR001_P"."PAYRL_AREA"
,"HR001_P"."EMPLCNTRCT"
,"HR001_P"."MAST_CCTR"
,"HR001_P"."ORGUNIT"
,"HR001_P"."HRPOSITION"
,"HR001_P"."DATETO"
,"HR001_P"."DATEFROM"
,"HR001_P"."/BIC/SUBTY"
,"HR001_P"."/BIC/OBJPS"
,"HR001_P"."/BIC/SEQNR"
,"HR001_P"."/BIC/INFTY"
,"HR001_P"."CH_ON"
,"HR001_P"."/BIC/UNAME"
,"HR001_P"."EE_SNAME"
,"HR001_P"."CO_MST_AR"
,"HR001_P"."COUNTRY_ID"
,"HR001_P"."HR_OBJTYPE"
,"HR001_P"."/BIC/SBMOD"
;
cte_hr001=
SELECT
"HR001_P"."EMPLOYEE"
,"HR001_P"."LEGAL_FIRST_NAME"
,"HR001_P"."LEGAL_LAST_NAME"
,"HR001_P"."COMP_CODE"
,"HR001_P"."PERS_AREA"
,"PAT"."TXTMD" AS "PERS_AREA_DESC"
,"HR001_P"."PERS_SAREA"
,"PSAT"."TXTSH" AS "PERS_SAREA_DESC"
,"HR001_P"."EMPLGROUP"
,"EPSG"."TXTSH" AS "EMPLGROUP_TEXT"
-- GLOBAL_EMPLOYEE_LEVEL as "HR001_P"."EMPLSGROUP_TEXT"
,"HR001_P"."EMPLSGROUP"
,"EPSG"."TXTSH" AS "EMPLSGROUP_TEXT"
,"HR001_P"."JOB"
, "LE"."LEGALENTITY"
, "LE"."LEGALENTITYDESC" AS "LEGAL_ENTITY_TXT"
,"HR001_P"."BUS_AREA"
,"HR001_P"."PAYRL_AREA"
,"HR001_P"."EMPLCNTRCT"
,"HR001_P"."MAST_CCTR"
,"HR001_P"."ORGUNIT"
,"HR001_P"."HRPOSITION"

,"HR001_P"."DATETO"
,"HR001_P"."DATEFROM"
,"HR001_P"."SUBTY"
,"HR001_P"."OBJPS"
,"HR001_P"."SEQNR"
,"HR001_P"."INFTY"
,"HR001_P"."CH_ON"
,"HR001_P"."UNAME"

,"HR001_P"."EE_SNAME"
,"HR001_P"."CO_MST_AR"
,"HR001_P"."COUNTRY_ID"
,"HR001_P"."HR_OBJTYPE"
,"HR001_P"."SBMOD"
FROM :cte_hr001_prep AS "HR001_P"
LEFT OUTER JOIN "/BI0/TPERS_AREA" AS "PAT" ON
"PAT"."PERS_AREA" = "HR001_P"."PERS_AREA"
LEFT OUTER JOIN "/BI0/TPERS_SAREA" "PSAT" ON
"PSAT"."PERS_SAREA" = "HR001_P"."PERS_SAREA" AND
"PSAT"."PERS_AREA" = "HR001_P"."PERS_AREA"
LEFT OUTER JOIN "/BI0/TEMPLSGROUP" AS "EPSG" ON "EPSG"."EMPLSGROUP" = "HR001_P"."EMPLSGROUP" AND "EPSG"."LANGU" = 'E'
LEFT OUTER JOIN "/BI0/TEMPLGROUP" AS "EPG" ON "EPG"."EMPLGROUP" = "HR001_P"."EMPLGROUP" AND "EPG"."LANGU" = 'E'
LEFT OUTER JOIN "/BIC/AZLE_MAP7" AS "LE" ON (
"LE"."COMPCODE" = "HR001_P"."COMP_CODE" AND
"LE"."PERSAREA" = "HR001_P"."PERS_AREA" AND
"LE"."PERSSAREA" = "HR001_P"."PERS_SAREA" )
WHERE rownumber = 1
;
RETURN
SELECT
"HR001"."EMPLOYEE"
,"LEGAL_FIRST_NAME"
,"LEGAL_LAST_NAME"
-- to be removed when finalized
,"COMP_CODE"
,"PERS_AREA"
,"PERS_AREA_DESC"
,"PERS_SAREA"
,"PERS_SAREA_DESC"
-- end to be removed when finalized
,"EMPLGROUP"
,"EMPLGROUP_TEXT"
,"EMPLSGROUP"
,"EMPLSGROUP_TEXT"
,"JOB"

,"PL"."DEPARTMENT_CODE"
,"PL"."DEPARTMENT"
,"PL"."DEPT_MGR_GID" AS "LINE_MANAGER"

,"LEGALENTITY"
,"LEGAL_ENTITY_TXT"
,"BUS_AREA"
,"PAYRL_AREA"
,"EMPLCNTRCT"
,"MAST_CCTR"
,"ORGUNIT"
,CASE "HR001"."HRPOSITION" WHEN '99999999' THEN 'Integration: default posi'
  ELSE "POSITION_TEXT"
  END AS "POSITION"
,COALESCE("POS"."POSITION_TEXT",'Unknow: Default position') AS "POSITION_TITLE"
,"HR001"."HRPOSITION"
,"DATETO"
,"DATEFROM"
,"SUBTY"
,"OBJPS"
,"SEQNR"
,"INFTY"
,"CH_ON"
,"UNAME"
,"EE_SNAME"
,"CO_MST_AR"
,"COUNTRY_ID"
,"HR_OBJTYPE"
,"SBMOD"
FROM :cte_hr001 as "HR001"
LEFT OUTER JOIN :cte_position AS "POS"
ON "POS"."HRPOSITION" = "HR001"."HRPOSITION"
LEFT OUTER JOIN :cte_planisw AS "PL"
ON "PL"."EMPLOYEE" = "HR001"."EMPLOYEE"

ORDER BY 1
;
endmethod.


METHOD READ_HR001_TEST
BY DATABASE FUNCTION FOR HDB
  LANGUAGE SQLSCRIPT
  OPTIONS READ-ONLY
  USING /BIC/AFLHR00100
  .

return
SELECT DISTINCT
EMPLOYEE
,COMP_CODE
,PERS_AREA
,PERS_SAREA
,EMPLGROUP
,EMPLSGROUP
,JOB
,BUS_AREA
,PAYRL_AREA
,EMPLCNTRCT
,MAST_CCTR
,ORGUNIT
,HRPOSITION
,DATETO
,DATEFROM
,"/BIC/SUBTY" AS SUBTY
,"/BIC/OBJPS" AS OBJPS
,"/BIC/SEQNR" AS SEQNR
,"/BIC/INFTY" AS INFTY
,CH_ON
,"/BIC/UNAME" AS UNAME
,EE_SNAME
,CO_MST_AR
,COUNTRY_ID
,HR_OBJTYPE
,"/BIC/SBMOD" AS SBMOD
FROM "/BIC/AFLHR00100"
WHERE COMP_CODE IN
(SELECT distinct RESULT AS COMP_CODE FROM SQLSCRIPT_STRING:SPLIT_TO_TABLE(:p_comp_code , ',', -1) )
AND EMPLGROUP <> '2'
AND "DATEFROM" <= :p_keydate AND "DATETO" >= :p_keydate
ORDER BY 1
;
ENDMETHOD.


METHOD READ_HR002
BY DATABASE FUNCTION FOR HDB
  LANGUAGE SQLSCRIPT
  OPTIONS READ-ONLY
  USING /BIC/AFLHR00200  ZCL_SEZ_INFOTYPES=>READ_HR000 T005
  ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE
.
DECLARE string_list_status varchar( 1333 );
DECLARE string_list_comp_code varchar( 1333 );
string_list_status = '';
string_list_comp_code = '';

cte_column_stat=
SELECT BASE_MEMBER FROM "ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE"(:p_emplstatus);

select STRING_AGG(BASE_MEMBER, ',' ORDER BY BASE_MEMBER) into string_list_status
FROM :cte_column_stat;

cte_column_comp_code=
SELECT BASE_MEMBER AS COMP_CODE FROM "ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE"(:p_comp_code);

select STRING_AGG(COMP_CODE, ',' ORDER BY COMP_CODE) into string_list_comp_code
FROM :cte_column_comp_code;

cte_hr000=
SELECT *
FROM "ZCL_SEZ_INFOTYPES=>READ_HR000"
( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :string_list_status,P_COMP_CODE => :string_list_comp_code);

cte_hr002_prep=
SELECT
row_number() over (partition by "HR002"."EMPLOYEE","HR002"."/BIC/SUBTY","HR002"."DATETO","HR002"."/BIC/SEQNR" ORDER BY "HR002".CH_ON DESC) as rownumber
,"HR002"."EMPLOYEE"
,"HR002"."/BIC/VORNA" AS LEGAL_FIRST_NAME
,"HR002"."/BIC/RUFNM" AS NICKNAME
,"HR002"."/BIC/NACHN" AS LEGAL_LAST_NAME
,"HR002"."/BIC/NAME2" AS BIRTH_NAME
,"HR002"."NATION" AS NATION
,"HR002"."/BIC/NATI2" AS NATI2
,"HR002"."/BIC/GBLND" AS COUNTRY_OF_BIRTH
,"HR002"."/BIC/GBORT" AS PLACE_OF_BIRTH
,"HR002"."GENDER" AS GENDER
,"HR002"."DATEBIRTH" AS DATEBIRTH
,"HR002"."PERSLANGU" AS BUSINESS_COMMUNICAT_LANGUAGE
,"HR002"."BP_MAR_STA" AS MARITAL_STATUS
,"HR002"."/BIC/FAMDT" AS DATE_OF_MARITAL_STATUS

,"HR002"."DATETO" AS DATETO
,"HR002"."DATEFROM" AS DATEFROM
,"HR002"."/BIC/SUBTY" AS SUBTY
,"HR002"."/BIC/OBJPS" AS OBJPS
,"HR002"."/BIC/SEQNR" AS SEQNR
,"HR002"."/BIC/INFTY" AS INFTY
,"HR002"."CH_ON" AS CH_ON
,"HR002"."/BIC/UNAME" AS "UNAME"

,"HR002"."FP_TRCHILD"
,"HR002"."/BIC/INITS" AS "INITS"
,"HR002"."/BIC/VORSW" AS "VORSW"
,"HR002"."/BIC/ANRED" AS "ANRED"
,"HR002"."/BIC/NATI3" AS "NATI3"
,"HR002"."/BIC/PERMO" AS "PERMO"
,"HR002"."/BIC/DECES" AS "DECES"
,"HR002"."/BIC/ZZMED" AS "ZZMED"
,"HR002"."/BIC/ZZHOS" AS "ZZHOS"
,"HR002"."AGE_KYF"
,"HR002"."AGE"
,"HR002"."/BIC/GBDEP" AS "GBDEP"
,"HR002"."/BIC/NACH2" AS "NACH2"
,"HR002"."/BIC/CNAME" AS "CNAME"
,"HR002"."/BIC/GBPAS" AS "GBPAS"
,"HR002"."/BIC/GBJHR" AS "GBJHR"
,"HR002"."/BIC/GBMON" AS "GBMON"
,"HR002"."/BIC/GBTAG" AS "GBTAG"
FROM "/BIC/AFLHR00200" AS "HR002"
INNER JOIN :cte_hr000 AS "HR000"
ON "HR002"."EMPLOYEE" = "HR000"."EMPLOYEE"
WHERE
"HR002"."DATEFROM" <= :p_keydate AND
"HR002"."DATETO" >= :p_keydate
GROUP BY
"HR002"."EMPLOYEE"
,"HR002"."/BIC/VORNA"
,"HR002"."/BIC/RUFNM"
,"HR002"."/BIC/NACHN"
,"HR002"."/BIC/NAME2"
,"HR002"."NATION"
,"HR002"."/BIC/NATI2"
,"HR002"."/BIC/GBLND"
,"HR002"."/BIC/GBORT"
,"HR002"."GENDER"
,"HR002"."DATEBIRTH"
,"HR002"."PERSLANGU"
,"HR002"."BP_MAR_STA"
,"HR002"."/BIC/FAMDT"
,"HR002"."DATETO"
,"HR002"."DATEFROM"
,"HR002"."/BIC/SUBTY"
,"HR002"."/BIC/OBJPS"
,"HR002"."/BIC/SEQNR"
,"HR002"."/BIC/INFTY"
,"HR002"."CH_ON"
,"HR002"."/BIC/UNAME"
,"HR002"."FP_TRCHILD"
,"HR002"."/BIC/INITS"
,"HR002"."/BIC/VORSW"
,"HR002"."/BIC/ANRED"
,"HR002"."/BIC/NATI3"
,"HR002"."/BIC/PERMO"
,"HR002"."/BIC/DECES"
,"HR002"."/BIC/ZZMED"
,"HR002"."/BIC/ZZHOS"
,"HR002"."AGE_KYF"
,"HR002"."AGE"
,"HR002"."/BIC/GBDEP"
,"HR002"."/BIC/NACH2"
,"HR002"."/BIC/CNAME"
,"HR002"."/BIC/GBPAS"
,"HR002"."/BIC/GBJHR"
,"HR002"."/BIC/GBMON"
,"HR002"."/BIC/GBTAG"
;
cte_hr002=
SELECT
"HR002_P"."EMPLOYEE"
,"HR002_P"."LEGAL_FIRST_NAME"
,"HR002_P"."NICKNAME"
,"HR002_P"."LEGAL_LAST_NAME"
,"HR002_P"."BIRTH_NAME"
,"HR002_P"."NATION" AS "NATION"
,"CTRY_NATIO"."INTCA3" AS "NATIONALITY_ISO"
,"HR002_P"."NATI2"
,"CTRY_NATIO2"."INTCA3" AS "SECOND_NATIONALITY_ISO"
,"HR002_P"."COUNTRY_OF_BIRTH"
,"CTRY_BIRTH"."INTCA3" AS "COUNTRY_OF_BIRTH_ISO"
,"HR002_P"."PLACE_OF_BIRTH"
,"HR002_P"."GENDER" AS "GENDER"
,"HR002_P"."DATEBIRTH" AS "DATEBIRTH"
,"HR002_P"."BUSINESS_COMMUNICAT_LANGUAGE"
,"HR002_P"."MARITAL_STATUS"
,"HR002_P"."DATE_OF_MARITAL_STATUS"

,"HR002_P"."DATETO" AS "DATETO"
,"HR002_P"."DATEFROM" AS "DATEFROM"
,"HR002_P"."SUBTY"
,"HR002_P"."OBJPS"
,"HR002_P"."SEQNR"
,"HR002_P"."INFTY"
,"HR002_P"."CH_ON"
,"HR002_P"."UNAME"

,"HR002_P"."FP_TRCHILD"
,"HR002_P"."INITS"
,"HR002_P"."VORSW"
,"HR002_P"."ANRED"
,"HR002_P"."NATI3"
,"HR002_P"."PERMO"
,"HR002_P"."DECES"
,"HR002_P"."ZZMED"
,"HR002_P"."ZZHOS"
,"HR002_P"."AGE_KYF"
,"HR002_P"."AGE"
,"HR002_P"."GBDEP"
,"HR002_P"."NACH2"
,"HR002_P"."CNAME"
,"HR002_P"."GBPAS"
,"HR002_P"."GBJHR"
,"HR002_P"."GBMON"
,"HR002_P"."GBTAG"

FROM :cte_hr002_prep AS "HR002_P"
LEFT OUTER JOIN "T005" AS "CTRY_NATIO" ON ( "CTRY_NATIO"."LAND1" = "HR002_P"."NATION" AND "CTRY_NATIO"."MANDT" = SESSION_CONTEXT( 'CLIENT'  ))
LEFT OUTER JOIN "T005" AS "CTRY_NATIO2" ON ( "CTRY_NATIO2"."LAND1" = "HR002_P"."NATI2" AND "CTRY_NATIO2"."MANDT" = SESSION_CONTEXT( 'CLIENT'  ))
LEFT OUTER JOIN "T005" AS "CTRY_BIRTH" ON ( "CTRY_BIRTH"."LAND1" = "HR002_P"."COUNTRY_OF_BIRTH" AND "CTRY_BIRTH"."MANDT" = SESSION_CONTEXT( 'CLIENT'  ))
WHERE rownumber = 1

;
RETURN
SELECT
EMPLOYEE
,LEGAL_FIRST_NAME
,NICKNAME
,LEGAL_LAST_NAME
,BIRTH_NAME
,NATION
,NATIONALITY_ISO
,NATI2
,SECOND_NATIONALITY_ISO
,COUNTRY_OF_BIRTH
,COUNTRY_OF_BIRTH_ISO
,PLACE_OF_BIRTH
,GENDER
,DATEBIRTH
,lower(BUSINESS_COMMUNICAT_LANGUAGE) AS BUSINESS_COMMUNICAT_LANGUAGE
,MARITAL_STATUS
,DATE_OF_MARITAL_STATUS
,DATETO
,DATEFROM
,SUBTY
,OBJPS
,SEQNR
,INFTY
,CH_ON
,UNAME
,FP_TRCHILD
,INITS
,VORSW
,ANRED
,NATI3
,PERMO
,DECES
,ZZMED
,ZZHOS
,AGE_KYF
,AGE
,GBDEP
,NACH2
,CNAME
,GBPAS
,GBJHR
,GBMON
,GBTAG
FROM :cte_hr002
ORDER BY 1;
endmethod.


METHOD READ_HR006
BY DATABASE FUNCTION FOR HDB
  LANGUAGE SQLSCRIPT
  OPTIONS READ-ONLY
  USING /BIC/AFLHR00600 ZCL_SEZ_INFOTYPES=>READ_HR000
  ZCL_SEZ_INFOTYPES=>READ_HR105
  ZCL_SEZ_INFOTYPES=>READ_HR001
  ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE
  .
DECLARE string_list_status varchar( 1333 );
DECLARE string_list_comp_code varchar( 1333 );
DECLARE string_list_anssa varchar( 1333 );
string_list_status = '';
string_list_comp_code = '';
string_list_anssa = '';
-- employee status
cte_column_status=
SELECT BASE_MEMBER FROM "ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE"(:p_emplstatus);
SELECT STRING_AGG(BASE_MEMBER, ',' ORDER BY BASE_MEMBER) into string_list_status FROM :cte_column_status;
--comp_code
cte_column_comp_code=
SELECT DISTINCT BASE_MEMBER as COMP_CODE FROM "ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE"(:p_comp_code);
select STRING_AGG(COMP_CODE, ',' ORDER BY COMP_CODE) into string_list_comp_code FROM :cte_column_comp_code;
-- AddressType
cte_column_anssa=
SELECT DISTINCT BASE_MEMBER as ANSSA FROM "ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE"(:p_anssa);
select STRING_AGG(ANSSA, ',' ORDER BY ANSSA) into string_list_anssa FROM :cte_column_anssa;

cte_hr000=
SELECT *
FROM "ZCL_SEZ_INFOTYPES=>READ_HR000"
( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :string_list_status, P_COMP_CODE => :string_list_comp_code );

cte_hr001=
SELECT *
FROM "ZCL_SEZ_INFOTYPES=>READ_HR001"
( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :string_list_status, P_COMP_CODE => :string_list_comp_code );

cte_hr105g=
SELECT *
FROM "ZCL_SEZ_INFOTYPES=>READ_HR105"
( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :string_list_status, P_COMP_CODE => :p_comp_code, P_SUBTY => 'GDFS' );

cte_hr006_prep=
SELECT
row_number()
over (partition by "HR006_P"."EMPLOYEE","HR006_P"."/BIC/SUBTY","HR006_P"."/BIC/SEQNR" ORDER BY "HR006_P"."CH_ON" DESC) as rownumber,
"HR006_P"."EMPLOYEE"  AS  "EMPLOYEE"
,"HR000"."LEGAL_FIRST_NAME"
,"HR000"."LEGAL_LAST_NAME"
,"HR105G"."USRID" AS "GROUP_ID"
,CASE "HR006_P"."/BIC/ANSSA"
    WHEN '0001' THEN 'Home Address'
    WHEN '0002' THEN 'Temporary Residence'
    WHEN '0003' THEN 'Home Address SAP'
    WHEN '0004' THEN 'Emergency Address'
    WHEN '0005' THEN 'Mailing Address'
    WHEN '0007' THEN '?'
    ELSE 'Undocumented'
    END AS  "ADDRESS_TYPE"
,"HR006_P"."/BIC/STRAS"    AS  "STREET"
,"HR006_P"."/BIC/LOCAT"    AS  "LOCATION"
,"HR006_P"."/BIC/HSNMR"    AS  "HOUSE_NUMBER"
,"HR006_P"."/BIC/POSTA"    AS  "APARTMENT"
,"HR006_P"."POSTAL_CD" AS  "POSTAL_CODE"
,"HR006_P"."/BIC/ORT01"    AS  "CITY"
,"HR006_P"."COUNTRY"   AS  "COUNTRY"

,"HR006_P"."DISTANCE"  AS  "DISTANCE"
,"HR006_P"."MEDST" AS  "MEDST"

,"HR006_P"."TEL_NUMBER"    AS  "TEL_NUMBER"

,"HR006_P"."/BIC/NAME2"    AS  "NAME2"
,"HR006_P"."/BIC/WKWNG"    AS  "WKWNG"
,"HR006_P"."/BIC/BUSRT"    AS  "BUSRT"
,"HR006_P"."REGION"    AS  "REGION"
,"HR006_P"."/BIC/ENTK2"    AS  "ENTK2"

,"HR006_P"."COUNTY_CDE"    AS  "COUNTY_CDE"
,"HR006_P"."/BIC/RCTVC"    AS  "RCTVC"
,"HR006_P"."/BIC/ORT02"    AS  "ORT02"
,"HR006_P"."/BIC/TEL_PH"   AS  "TEL_PH"
,"HR006_P"."/BIC/GSM"  AS  "GSM"
,"HR006_P"."/BIC/SUBTY"    AS  "SUBTY"
,"HR006_P"."/BIC/OBJPS"    AS  "OBJPS"
,"HR006_P"."DATETO"    AS  "DATETO"
,"HR006_P"."DATEFROM"  AS  "DATEFROM"
,"HR006_P"."/BIC/SEQNR"    AS  "SEQNR"
,"HR006_P"."/BIC/INFTY"    AS  "INFTY"
,"HR006_P"."CH_ON" AS  "CH_ON"
,"HR006_P"."/BIC/UNAME" AS  "UNAME"

FROM "/BIC/AFLHR00600" AS "HR006_P"
INNER JOIN :cte_hr000 AS "HR000"
ON "HR006_P"."EMPLOYEE" = "HR000"."EMPLOYEE"
LEFT OUTER JOIN :cte_hr105g AS "HR105G"
ON "HR105G"."EMPLOYEE" = "HR006_P"."EMPLOYEE"
WHERE "HR006_P"."/BIC/ANSSA" IN
(SELECT distinct TO_VARCHAR(RESULT) AS ANSSA FROM SQLSCRIPT_STRING:SPLIT_TO_TABLE(:p_anssa , ',', -1) )
and "HR006_P"."/BIC/SUBTY" IN
(SELECT distinct TO_VARCHAR(RESULT) AS ANSSA FROM SQLSCRIPT_STRING:SPLIT_TO_TABLE(:p_anssa , ',', -1) )
;

cte_hr006=
SELECT

"HR006".COUNTRY
,"HR006".EMPLOYEE
,"HR006".LEGAL_FIRST_NAME
,"HR006".LEGAL_LAST_NAME
,"HR006".GROUP_ID
,"HR006".ADDRESS_TYPE
,CASE WHEN "HR006".LOCATION <> ''
THEN "HR006".STREET||' ('||LTRIM("HR006".LOCATION,'0')||')' ELSE "HR006".STREET END AS "STREET"
--,"HR006".LOCATION
,LTRIM("HR006"."HOUSE_NUMBER",'0') AS "HOUSE_NUMBER"
,LTRIM("HR006"."APARTMENT",'0') AS "APARTMENT"
,"HR006".POSTAL_CODE
,"HR006".CITY
,"HR006".DISTANCE
,'No' AS "COMPANY_HOUSING"
,"HR006".MEDST
,"HR006".TEL_NUMBER

,"HR006".NAME2
,"HR006".WKWNG
,"HR006".BUSRT
,"HR006".REGION
,"HR006".ENTK2
,"HR006".COUNTY_CDE
,"HR006".RCTVC

,"HR006".ORT02
,"HR006".TEL_PH
,"HR006".GSM
,"HR001"."COMP_CODE"
,"HR006".SUBTY
,"HR006".OBJPS
,"HR006".DATETO
,"HR006".DATEFROM
,"HR006".SEQNR
,"HR006".INFTY
,"HR006".CH_ON
,"HR006".UNAME
FROM :cte_hr006_prep AS "HR006"
LEFT OUTER JOIN :cte_hr001 AS "HR001"
ON "HR001"."EMPLOYEE" = "HR006"."EMPLOYEE"
WHERE rownumber = 1

;
RETURN
SELECT * FROM :cte_hr006 ORDER BY 1;
endmethod.


METHOD READ_HR007
BY DATABASE FUNCTION FOR HDB
  LANGUAGE SQLSCRIPT
  OPTIONS READ-ONLY
  USING /BIC/AFLHR00700 ZCL_SEZ_INFOTYPES=>READ_HR000 ZCL_SEZ_INFOTYPES=>READ_HR001
  ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE
  .
DECLARE string_list_status varchar( 1333 );
DECLARE string_list_comp_code varchar( 1333 );
string_list_status = '';
string_list_comp_code = '';

cte_column_status=
SELECT BASE_MEMBER FROM "ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE"(:p_emplstatus);

select STRING_AGG(BASE_MEMBER, ',' ORDER BY BASE_MEMBER) into string_list_status FROM :cte_column_status;

cte_column_comp_code=
SELECT BASE_MEMBER AS COMP_CODE FROM "ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE"(:p_comp_code);

select STRING_AGG(COMP_CODE, ',' ORDER BY COMP_CODE) into string_list_comp_code
FROM :cte_column_comp_code;

cte_hr000=
SELECT *
FROM "ZCL_SEZ_INFOTYPES=>READ_HR000"
( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :string_list_status, P_COMP_CODE => :string_list_comp_code );

cte_hr001=
SELECT *
FROM "ZCL_SEZ_INFOTYPES=>READ_HR001"
( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :string_list_status, P_COMP_CODE => :string_list_comp_code );

cte_hr007_prep=
SELECT
row_number() over (partition by "HR007_P"."EMPLOYEE", "HR007_P"."DATETO" ORDER BY "HR007_P"."CH_ON" DESC) as rownumber,

"HR007_P"."EMPLOYEE"  AS  "EMPLOYEE"
,"HR000"."LEGAL_FIRST_NAME"
,"HR000"."LEGAL_LAST_NAME"

,"HR007_P"."/BIC/WOSTD"   AS  "STANDARD_WEEKLY_HOURS"

,"HR007_P"."/BIC/SUBTY"   AS  "SUBTY"
,"HR007_P"."/BIC/OBJPS"   AS  "OBJPS"
,"HR007_P"."DATETO"   AS  "DATETO"
,"HR007_P"."DATEFROM" AS  "DATEFROM"
,"HR007_P"."/BIC/SEQNR"   AS  "SEQNR"
,"HR007_P"."/BIC/INFTY"   AS  "INFTY"
,"HR007_P"."CH_ON"    AS  "CH_ON"
,"HR007_P"."/BIC/UNAME"   AS  "UNAME"

FROM "/BIC/AFLHR00700" AS "HR007_P"
INNER JOIN :cte_hr000 AS "HR000"
ON  "HR007_P"."EMPLOYEE" = "HR000"."EMPLOYEE"
WHERE "HR007_P"."DATEFROM" <= :p_keydate AND "HR007_P"."DATETO" >= :p_keydate
;

RETURN
SELECT
"HR007_P"."EMPLOYEE"
,"HR007_P"."LEGAL_FIRST_NAME"
,"HR007_P"."LEGAL_LAST_NAME"
,STANDARD_WEEKLY_HOURS
,"HR001"."COMP_CODE"
,"HR007_P"."SUBTY"
,"HR007_P"."OBJPS"
,"HR007_P"."DATETO"
,"HR007_P"."DATEFROM"
,"HR007_P"."SEQNR"
,"HR007_P"."INFTY"
,"HR007_P"."CH_ON"
,"HR007_P"."UNAME"
FROM :cte_hr007_prep as "HR007_P"
LEFT OUTER JOIN :cte_hr001 AS "HR001"
ON "HR001"."EMPLOYEE" = "HR007_P"."EMPLOYEE"
WHERE rownumber = 1
ORDER BY 1
;

ENDMETHOD.


METHOD READ_HR008
BY DATABASE FUNCTION FOR HDB
  LANGUAGE SQLSCRIPT
  OPTIONS READ-ONLY
  USING /BIC/AFLHC00800 ZCL_SEZ_INFOTYPES=>READ_HR000 ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE
  .
DECLARE string_list_status varchar( 1333 );
DECLARE string_list_comp_code varchar( 1333 );
string_list_status = '';
string_list_comp_code = '';

cte_column_status=
SELECT BASE_MEMBER FROM "ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE"(:p_emplstatus);

select STRING_AGG(BASE_MEMBER, ',' ORDER BY BASE_MEMBER) into string_list_status FROM :cte_column_status;

cte_column_comp_code=
SELECT BASE_MEMBER AS COMP_CODE FROM "ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE"(:p_comp_code);

select STRING_AGG(COMP_CODE, ',' ORDER BY COMP_CODE) into string_list_comp_code
FROM :cte_column_comp_code;

cte_hr000=
SELECT *
FROM "ZCL_SEZ_INFOTYPES=>READ_HR000"
( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :string_list_status, P_COMP_CODE => :string_list_comp_code );

cte_hr008_prep=
SELECT
"HR008"."EMPLOYEE"  AS  "EMPLOYEE"
,"HR000"."LEGAL_FIRST_NAME"
,"HR000"."LEGAL_LAST_NAME"
,"HR008"."PAYSCALETY"   AS  "PAYSCALETY"
,"HR008"."PAYSCALEAR"   AS  "PAYSCALEAR"
,"HR008"."PAYSCALEGR"   AS  "PAYSCALEGR"
,"HR008"."PAYSCALELV"   AS  "PAYSCALELV"
,"HR008"."/BIC/STVOR"   AS  "STVOR"
,"HR008"."CURRENCY" AS  "CURRENCY"
,"HR008"."PAYPCT"   AS  "PAYPCT"
,"HR008"."PAYPCT_CHA"   AS  "PAYPCT_CHA"
,"HR008"."/BIC/VGLSV"   AS  "VGLSV"
,"HR008"."ANSALARY" AS  "ANSALARY"
,"HR008"."COUNTRY_ID"   AS  "COUNTRY_ID"
,"HR008"."/BIC/PREAS"   AS  "PREAS"
,"HR008"."ESGFORCAP"    AS  "ESGFORCAP"
,"HR008"."/BIC/DIVGV"   AS  "DIVGV"
,"HR008"."/BIC/LGA01"   AS  "LGA01"
,"HR008"."/BIC/LGA02"   AS  "LGA02"
,"HR008"."/BIC/LGA03"   AS  "LGA03"
,"HR008"."/BIC/LGA04"   AS  "LGA04"
,"HR008"."/BIC/LGA05"   AS  "LGA05"
,"HR008"."/BIC/LGA06"   AS  "LGA06"
,"HR008"."/BIC/LGA07"   AS  "LGA07"
,"HR008"."/BIC/LGA08"   AS  "LGA08"
,"HR008"."/BIC/LGA09"   AS  "LGA09"
,"HR008"."/BIC/LGA10"   AS  "LGA10"
,"HR008"."/BIC/LGA11"   AS  "LGA11"
,"HR008"."/BIC/LGA12"   AS  "LGA12"
,"HR008"."/BIC/LGA13"   AS  "LGA13"
,"HR008"."/BIC/LGA14"   AS  "LGA14"
,"HR008"."/BIC/LGA15"   AS  "LGA15"
,"HR008"."/BIC/LGA16"   AS  "LGA16"
,"HR008"."/BIC/LGA17"   AS  "LGA17"
,"HR008"."/BIC/LGA18"   AS  "LGA18"
,"HR008"."/BIC/LGA19"   AS  "LGA19"
,"HR008"."/BIC/LGA20"   AS  "LGA20"
,"HR008"."/BIC/LGA21"   AS  "LGA21"
,"HR008"."/BIC/LGA22"   AS  "LGA22"
,"HR008"."/BIC/LGA23"   AS  "LGA23"
,"HR008"."/BIC/LGA24"   AS  "LGA24"
,"HR008"."/BIC/LGA25"   AS  "LGA25"
,"HR008"."/BIC/LGA26"   AS  "LGA26"
,"HR008"."/BIC/LGA27"   AS  "LGA27"
,"HR008"."/BIC/LGA28"   AS  "LGA28"
,"HR008"."/BIC/LGA29"   AS  "LGA29"
,"HR008"."/BIC/LGA30"   AS  "LGA30"
,"HR008"."/BIC/LGA31"   AS  "LGA31"
,"HR008"."/BIC/LGA32"   AS  "LGA32"
,"HR008"."/BIC/LGA33"   AS  "LGA33"
,"HR008"."/BIC/LGA34"   AS  "LGA34"
,"HR008"."/BIC/LGA35"   AS  "LGA35"
,"HR008"."/BIC/LGA36"   AS  "LGA36"
,"HR008"."/BIC/LGA37"   AS  "LGA37"
,"HR008"."/BIC/LGA38"   AS  "LGA38"
,"HR008"."/BIC/LGA39"   AS  "LGA39"
,"HR008"."/BIC/LGA40"   AS  "LGA40"
,"HR008"."/BIC/BET01"   AS  "BET01"
,"HR008"."/BIC/BET02"   AS  "BET02"
,"HR008"."/BIC/BET03"   AS  "BET03"
,"HR008"."/BIC/BET04"   AS  "BET04"
,"HR008"."/BIC/BET05"   AS  "BET05"
,"HR008"."/BIC/BET06"   AS  "BET06"
,"HR008"."/BIC/BET07"   AS  "BET07"
,"HR008"."/BIC/BET08"   AS  "BET08"
,"HR008"."/BIC/BET09"   AS  "BET09"
,"HR008"."/BIC/BET10"   AS  "BET10"
,"HR008"."/BIC/BET11"   AS  "BET11"
,"HR008"."/BIC/BET12"   AS  "BET12"
,"HR008"."/BIC/BET13"   AS  "BET13"
,"HR008"."/BIC/BET14"   AS  "BET14"
,"HR008"."/BIC/BET15"   AS  "BET15"
,"HR008"."/BIC/BET16"   AS  "BET16"
,"HR008"."/BIC/BET17"   AS  "BET17"
,"HR008"."/BIC/BET18"   AS  "BET18"
,"HR008"."/BIC/BET19"   AS  "BET19"
,"HR008"."/BIC/BET20"   AS  "BET20"
,"HR008"."/BIC/BET21"   AS  "BET21"
,"HR008"."/BIC/BET22"   AS  "BET22"
,"HR008"."/BIC/BET23"   AS  "BET23"
,"HR008"."/BIC/BET24"   AS  "BET24"
,"HR008"."/BIC/BET25"   AS  "BET25"
,"HR008"."/BIC/BET26"   AS  "BET26"
,"HR008"."/BIC/BET27"   AS  "BET27"
,"HR008"."/BIC/BET28"   AS  "BET28"
,"HR008"."/BIC/BET29"   AS  "BET29"
,"HR008"."/BIC/BET30"   AS  "BET30"
,"HR008"."/BIC/BET31"   AS  "BET31"
,"HR008"."/BIC/BET32"   AS  "BET32"
,"HR008"."/BIC/BET33"   AS  "BET33"
,"HR008"."/BIC/BET34"   AS  "BET34"
,"HR008"."/BIC/BET35"   AS  "BET35"
,"HR008"."/BIC/BET36"   AS  "BET36"
,"HR008"."/BIC/BET37"   AS  "BET37"
,"HR008"."/BIC/BET38"   AS  "BET38"
,"HR008"."/BIC/BET39"   AS  "BET39"
,"HR008"."/BIC/BET40"   AS  "BET40"
,"HR008"."/BIC/ANZ01"   AS  "ANZ01"
,"HR008"."/BIC/ANZ02"   AS  "ANZ02"
,"HR008"."/BIC/ANZ03"   AS  "ANZ03"
,"HR008"."/BIC/ANZ04"   AS  "ANZ04"
,"HR008"."/BIC/ANZ05"   AS  "ANZ05"
,"HR008"."/BIC/ANZ06"   AS  "ANZ06"
,"HR008"."/BIC/ANZ07"   AS  "ANZ07"
,"HR008"."/BIC/ANZ08"   AS  "ANZ08"
,"HR008"."/BIC/ANZ09"   AS  "ANZ09"
,"HR008"."/BIC/ANZ10"   AS  "ANZ10"
,"HR008"."/BIC/ANZ11"   AS  "ANZ11"
,"HR008"."/BIC/ANZ12"   AS  "ANZ12"
,"HR008"."/BIC/ANZ13"   AS  "ANZ13"
,"HR008"."/BIC/ANZ14"   AS  "ANZ14"
,"HR008"."/BIC/ANZ15"   AS  "ANZ15"
,"HR008"."/BIC/ANZ16"   AS  "ANZ16"
,"HR008"."/BIC/ANZ17"   AS  "ANZ17"
,"HR008"."/BIC/ANZ18"   AS  "ANZ18"
,"HR008"."/BIC/ANZ19"   AS  "ANZ19"
,"HR008"."/BIC/ANZ20"   AS  "ANZ20"
,"HR008"."/BIC/ANZ21"   AS  "ANZ21"
,"HR008"."/BIC/ANZ22"   AS  "ANZ22"
,"HR008"."/BIC/ANZ23"   AS  "ANZ23"
,"HR008"."/BIC/ANZ24"   AS  "ANZ24"
,"HR008"."/BIC/ANZ25"   AS  "ANZ25"
,"HR008"."/BIC/ANZ26"   AS  "ANZ26"
,"HR008"."/BIC/ANZ27"   AS  "ANZ27"
,"HR008"."/BIC/ANZ28"   AS  "ANZ28"
,"HR008"."/BIC/ANZ29"   AS  "ANZ29"
,"HR008"."/BIC/ANZ30"   AS  "ANZ30"
,"HR008"."/BIC/ANZ31"   AS  "ANZ31"
,"HR008"."/BIC/ANZ32"   AS  "ANZ32"
,"HR008"."/BIC/ANZ33"   AS  "ANZ33"
,"HR008"."/BIC/ANZ34"   AS  "ANZ34"
,"HR008"."/BIC/ANZ35"   AS  "ANZ35"
,"HR008"."/BIC/ANZ36"   AS  "ANZ36"
,"HR008"."/BIC/ANZ37"   AS  "ANZ37"
,"HR008"."/BIC/ANZ38"   AS  "ANZ38"
,"HR008"."/BIC/ANZ39"   AS  "ANZ39"
,"HR008"."/BIC/ANZ40"   AS  "ANZ40"
,"HR008"."DATETO"
,"HR008"."DATEFROM"
,"/BIC/SUBTY" AS "SUBTY"
,"/BIC/OBJPS" AS "OBJPS"
,"/BIC/SEQNR" AS "SEQNR"
,"/BIC/INFTY" AS "INFTY"
,"HR008"."CH_ON"
,"HR008"."/BIC/UNAME" AS "UNAME"

FROM "/BIC/AFLHC00800" AS "HR008"
INNER JOIN :cte_hr000 as "HR000"
ON "HR000"."EMPLOYEE" = "HR008"."EMPLOYEE"
WHERE "HR008"."/BIC/LGA01" = '0152'
AND "HR008"."DATEFROM" <= :p_keydate AND
      "HR008"."DATETO" >= :p_keydate
;
RETURN

SELECT
EMPLOYEE
,LEGAL_FIRST_NAME
,LEGAL_LAST_NAME
,PAYSCALETY
,PAYSCALEAR
,PAYSCALEGR
,PAYSCALELV
,STVOR
,CURRENCY
,PAYPCT
,PAYPCT_CHA
,VGLSV
,ANSALARY
,COUNTRY_ID
,PREAS
,ESGFORCAP
,BET01
,DATETO
,DATEFROM
,SUBTY
,OBJPS
,SEQNR
,INFTY
,CH_ON
,UNAME
FROM :cte_hr008_prep
;

endmethod.


METHOD READ_HR016
BY DATABASE FUNCTION FOR HDB
  LANGUAGE SQLSCRIPT
  OPTIONS READ-ONLY
  USING /BIC/AFLHR01600 /BI0/TCNTRCTTYPE
  ZCL_SEZ_INFOTYPES=>READ_HR000 ZCL_SEZ_INFOTYPES=>READ_HR001
  ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE
  .
DECLARE string_list_status varchar( 1333 );
DECLARE string_list_comp_code varchar( 1333 );
string_list_status = '';
string_list_comp_code = '';

cte_column_status=
SELECT BASE_MEMBER FROM "ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE"(:p_emplstatus);

select STRING_AGG(BASE_MEMBER, ',' ORDER BY BASE_MEMBER) into string_list_status FROM :cte_column_status;

cte_column_comp_code=
SELECT BASE_MEMBER AS COMP_CODE FROM "ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE"(:p_comp_code);

select STRING_AGG(COMP_CODE, ',' ORDER BY COMP_CODE) into string_list_comp_code
FROM :cte_column_comp_code;

cte_hr000=
SELECT *
FROM "ZCL_SEZ_INFOTYPES=>READ_HR000"
( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :string_list_status, P_COMP_CODE => :string_list_comp_code );

cte_hr001=
SELECT *
FROM "ZCL_SEZ_INFOTYPES=>READ_HR001"
( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :string_list_status, P_COMP_CODE => :string_list_comp_code );

cte_hr016_prep=
SELECT
"HR016"."EMPLOYEE"  AS  "EMPLOYEE"
,"HR000"."LEGAL_FIRST_NAME"
,"HR000"."LEGAL_LAST_NAME"

,"HR016"."/BIC/CTEDT"   AS  "CTEDT"
,"HR016"."/BIC/KONDT"   AS  "KONDT"
,"HR016"."CNTRCTTYPE"   AS  "CNTRCTTYPE"
,"CTRCTYP"."TXTSH" AS "CONTRACT_TYPE"
,"HR016"."ENTRYDATE"    AS  "ENTRYDATE"

,"HR016"."/BIC/SUBTY"   AS  "SUBTY"
,"HR016"."/BIC/OBJPS"   AS  "OBJPS"
,"HR016"."DATETO"   AS  "DATETO"
,"HR016"."DATEFROM" AS  "DATEFROM"
,"HR016"."/BIC/SEQNR"   AS  "SEQNR"
,"HR016"."/BIC/INFTY"   AS  "INFTY"
,"HR016"."CH_ON"    AS  "CH_ON"
,"HR016"."/BIC/UNAME"   AS  "UNAME"

FROM "/BIC/AFLHR01600" AS "HR016"
INNER JOIN :cte_hr000 AS "HR000"
ON  "HR016"."EMPLOYEE" = "HR000"."EMPLOYEE"
LEFT OUTER JOIN "/BI0/TCNTRCTTYPE" AS "CTRCTYP" ON (
"CTRCTYP"."CNTRCTTYPE" = "HR016"."CNTRCTTYPE" AND "CTRCTYP"."LANGU" = SESSION_CONTEXT( 'LOCALE_SAP' ) )
WHERE "HR016"."DATEFROM" <= :p_keydate AND "HR016"."DATETO" >= :p_keydate
;
RETURN
SELECT
"HR016_P"."EMPLOYEE"
,"HR016_P"."LEGAL_FIRST_NAME"
,"HR016_P"."LEGAL_LAST_NAME"

,CTEDT
,KONDT
,CNTRCTTYPE
,CONTRACT_TYPE
,ENTRYDATE

,"HR001"."COMP_CODE"

,"HR016_P"."SUBTY"
,"HR016_P"."OBJPS"
,"HR016_P"."DATETO"
,"HR016_P"."DATEFROM"
,"HR016_P"."SEQNR"
,"HR016_P"."INFTY"
,"HR016_P"."CH_ON"
,"HR016_P"."UNAME"

FROM :cte_hr016_prep AS "HR016_P"
LEFT OUTER JOIN :cte_hr001 AS "HR001"
ON "HR001"."EMPLOYEE" = "HR016_P"."EMPLOYEE"
ORDER BY 1
;
endmethod.


METHOD READ_HR032
BY DATABASE FUNCTION FOR HDB
  LANGUAGE SQLSCRIPT
  OPTIONS READ-ONLY
  USING /BIC/AFLHR03200 ZCL_SEZ_INFOTYPES=>READ_HR000 ZCL_SEZ_INFOTYPES=>READ_HR001
  ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE
  .
DECLARE string_list_status varchar( 1333 );
DECLARE string_list_comp_code varchar( 1333 );
string_list_status = '';
string_list_comp_code = '';

cte_column_status=
SELECT BASE_MEMBER FROM "ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE"(:p_emplstatus);

select STRING_AGG(BASE_MEMBER, ',' ORDER BY BASE_MEMBER) into string_list_status FROM :cte_column_status;

cte_column_comp_code=
SELECT BASE_MEMBER AS COMP_CODE FROM "ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE"(:p_comp_code);

select STRING_AGG(COMP_CODE, ',' ORDER BY COMP_CODE) into string_list_comp_code
FROM :cte_column_comp_code;

cte_hr000=
SELECT *
FROM "ZCL_SEZ_INFOTYPES=>READ_HR000"
( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :string_list_status, P_COMP_CODE => :string_list_comp_code );

cte_hr001=
SELECT *
FROM "ZCL_SEZ_INFOTYPES=>READ_HR001"
( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :string_list_status, P_COMP_CODE => :string_list_comp_code );

cte_hr032_prep=
SELECT
row_number() over (partition by "HR032_P"."EMPLOYEE", "HR032_P"."DATETO" ORDER BY "HR032_P"."CH_ON" DESC) as rownumber,
"HR032_P"."EMPLOYEE"  AS  "EMPLOYEE"
,"HR000"."LEGAL_FIRST_NAME"
,"HR000"."LEGAL_LAST_NAME"

,"HR032_P"."BUILDING" AS  "BUILDING"

,"HR032_P"."/BIC/SUBTY"   AS  "SUBTY"
,"HR032_P"."/BIC/OBJPS"   AS  "OBJPS"
,"HR032_P"."DATETO"   AS  "DATETO"
,"HR032_P"."DATEFROM" AS  "DATEFROM"
,"HR032_P"."/BIC/SEQNR"   AS  "SEQNR"
,"HR032_P"."/BIC/INFTY"   AS  "INFTY"
,"HR032_P"."CH_ON"    AS  "CH_ON"
,"HR032_P"."/BIC/UNAME"   AS  "UNAME"

,"HR032_P"."/BIC/PNALT"   AS  "PNALT"
,"HR032_P"."/BIC/WAUSW"   AS  "WAUSW"
,"HR032_P"."/BIC/PKWRG"   AS  "PKWRG"
,"HR032_P"."/BIC/PKWWR"   AS  "PKWWR"
,"HR032_P"."/BIC/KFZKZ"   AS  "KFZKZ"
,"HR032_P"."CURRENCY" AS  "CURRENCY"
,"HR032_P"."/BIC/ASTNO"   AS  "ASTNO"

,"HR032_P"."MAINTROOM"    AS  "MAINTROOM"
,"HR032_P"."/BIC/TEL01"   AS  "TEL01"
,"HR032_P"."/BIC/TEL02"   AS  "TEL02"
FROM "/BIC/AFLHR03200" AS "HR032_P"
INNER JOIN :cte_hr000 AS "HR000"
ON  "HR032_P"."EMPLOYEE" = "HR000"."EMPLOYEE"
WHERE "HR032_P"."DATEFROM" <= :p_keydate AND "HR032_P"."DATETO" >= :p_keydate
;
RETURN

SELECT
"HR032_P"."EMPLOYEE"
,"HR032_P"."LEGAL_FIRST_NAME"
,"HR032_P"."LEGAL_LAST_NAME"
,"HR032_P"."BUILDING"
,"HR001"."COMP_CODE"

,"HR032_P"."SUBTY"
,"HR032_P"."OBJPS"
,"HR032_P"."DATETO"
,"HR032_P"."DATEFROM"
,"HR032_P"."SEQNR"
,"HR032_P"."INFTY"
,"HR032_P"."CH_ON"
,"HR032_P"."UNAME"
FROM :cte_hr032_prep as "HR032_P"
LEFT OUTER JOIN :cte_hr001 AS "HR001"
ON "HR001"."EMPLOYEE" = "HR032_P"."EMPLOYEE"
WHERE rownumber = 1
ORDER BY 1
;
ENDMETHOD.


METHOD READ_HR041
BY DATABASE FUNCTION FOR HDB
  LANGUAGE SQLSCRIPT
  OPTIONS READ-ONLY
  USING /BIC/AFLHR04100 ZCL_SEZ_INFOTYPES=>READ_HR000 ZCL_SEZ_INFOTYPES=>READ_HR001
  ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE
  .
DECLARE string_list_status varchar( 1333 );
DECLARE string_list_comp_code varchar( 1333 );
string_list_status = '';
string_list_comp_code = '';

cte_column_status=
SELECT BASE_MEMBER FROM "ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE"(:p_emplstatus);

select STRING_AGG(BASE_MEMBER, ',' ORDER BY BASE_MEMBER) into string_list_status FROM :cte_column_status;

cte_column_comp_code=
SELECT BASE_MEMBER AS COMP_CODE FROM "ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE"(:p_comp_code);

select STRING_AGG(COMP_CODE, ',' ORDER BY COMP_CODE) into string_list_comp_code
FROM :cte_column_comp_code;

cte_hr000=
SELECT *
FROM "ZCL_SEZ_INFOTYPES=>READ_HR000"
( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :string_list_status, P_COMP_CODE => :string_list_comp_code );

cte_hr001=
SELECT *
FROM "ZCL_SEZ_INFOTYPES=>READ_HR001"
( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :string_list_status, P_COMP_CODE => :string_list_comp_code );

cte_hr041_prep=
SELECT
"HR041"."EMPLOYEE"  AS  "EMPLOYEE"
,"HR000"."LEGAL_FIRST_NAME"
,"HR000"."LEGAL_LAST_NAME"

,"HR041"."/BIC/DAR01"   AS  "DAR01"
,"HR041"."/BIC/DAT01"   AS  "DAT01"
,"HR041"."/BIC/DAR02"   AS  "DAR02"
,"HR041"."/BIC/DAT02"   AS  "DAT02"
,"HR041"."/BIC/DAR03"   AS  "DAR03"
,"HR041"."/BIC/DAT03"   AS  "DAT03"
,"HR041"."/BIC/DAR04"   AS  "DAR04"
,"HR041"."/BIC/DAT04"   AS  "DAT04"
,"HR041"."/BIC/DAR05"   AS  "DAR05"
,"HR041"."/BIC/DAT05"   AS  "DAT05"
,"HR041"."/BIC/DAR06"   AS  "DAR06"
,"HR041"."/BIC/DAT06"   AS  "DAT06"
,"HR041"."/BIC/DAR07"   AS  "DAR07"
,"HR041"."/BIC/DAT07"   AS  "DAT07"
,"HR041"."/BIC/DAR08"   AS  "DAR08"
,"HR041"."/BIC/DAT08"   AS  "DAT08"
,"HR041"."/BIC/DAR09"   AS  "DAR09"
,"HR041"."/BIC/DAT09"   AS  "DAT09"
,"HR041"."/BIC/DAR10"   AS  "DAR10"
,"HR041"."/BIC/DAT10"   AS  "DAT10"
,"HR041"."/BIC/DAR11"   AS  "DAR11"
,"HR041"."/BIC/DAT11"   AS  "DAT11"
,"HR041"."/BIC/DAR12"   AS  "DAR12"
,"HR041"."/BIC/DAT12"   AS  "DAT12"
,"HR041"."/BIC/ZZJUBILEE"   AS  "ZZJUBILEE"
,"HR041"."/BIC/ZZPENSION"   AS  "ZZPENSION"
,"HR041"."/BIC/ZZSIMUL" AS  "ZZSIMUL"

,"HR041"."/BIC/SUBTY"   AS  "SUBTY"
,"HR041"."/BIC/OBJPS"   AS  "OBJPS"
,"HR041"."DATETO"   AS  "DATETO"
,"HR041"."DATEFROM" AS  "DATEFROM"
,"HR041"."/BIC/SEQNR"   AS  "SEQNR"
,"HR041"."/BIC/INFTY"   AS  "INFTY"
,"HR041"."CH_ON"    AS  "CH_ON"
,"HR041"."/BIC/UNAME"   AS  "UNAME"
FROM "/BIC/AFLHR04100" AS "HR041"
INNER JOIN :cte_hr000 as "HR000"
ON "HR000"."EMPLOYEE" = "HR041"."EMPLOYEE"
WHERE "HR041"."DATEFROM" <= :p_keydate AND
      "HR041"."DATETO" >= :p_keydate
;
RETURN
SELECT
"HR041_P"."EMPLOYEE"
,"HR041_P"."LEGAL_FIRST_NAME"
,"HR041_P"."LEGAL_LAST_NAME"

,DAT01
,DAT02
,"HR001"."COMP_CODE"
,ZZJUBILEE
,ZZPENSION
,ZZSIMUL

,"HR041_P"."SUBTY"
,"HR041_P"."OBJPS"
,"HR041_P"."DATETO"
,"HR041_P"."DATEFROM"
,"HR041_P"."SEQNR"
,"HR041_P"."INFTY"
,"HR041_P"."CH_ON"
,"HR041_P"."UNAME"
FROM :cte_hr041_prep AS "HR041_P"
LEFT OUTER JOIN :cte_hr001 AS "HR001"
ON "HR001"."EMPLOYEE" = "HR041_P"."EMPLOYEE"
;
endmethod.


METHOD READ_HR101
BY DATABASE FUNCTION FOR HDB
  LANGUAGE SQLSCRIPT
  OPTIONS READ-ONLY
  USING /BIC/AFLHC10100 ZCL_SEZ_INFOTYPES=>READ_HR000 ZCL_SEZ_INFOTYPES=>READ_HR001
  ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE
  .
DECLARE string_list_status varchar( 1333 );
DECLARE string_list_comp_code varchar( 1333 );
string_list_status = '';
string_list_comp_code = '';

cte_column_status=
SELECT BASE_MEMBER FROM "ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE"(:p_emplstatus);

select STRING_AGG(BASE_MEMBER, ',' ORDER BY BASE_MEMBER) into string_list_status FROM :cte_column_status;

cte_column_comp_code=
SELECT BASE_MEMBER AS COMP_CODE FROM "ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE"(:p_comp_code);

select STRING_AGG(COMP_CODE, ',' ORDER BY COMP_CODE) into string_list_comp_code
FROM :cte_column_comp_code;

cte_hr000=
SELECT *
FROM "ZCL_SEZ_INFOTYPES=>READ_HR000"
( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :string_list_status, P_COMP_CODE => :string_list_comp_code );

cte_hr001=
SELECT *
FROM "ZCL_SEZ_INFOTYPES=>READ_HR001"
( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :string_list_status, P_COMP_CODE => :string_list_comp_code );

cte_hr101=
SELECT
"HR101"."EMPLOYEE" AS  "EMPLOYEE"
,"HR000"."LEGAL_FIRST_NAME"
,"HR000"."LEGAL_LAST_NAME"

,CASE WHEN "HR101"."/BIC/BVWMV" = 'X' THEN 'Y' ELSE 'N' END AS "DISABILITY"

,"HR101"."/BIC/BVKTL"   AS  "BVKTL"
,"HR101"."/BIC/BVKKA"   AS  "BVKKA"
,"HR101"."/BIC/BVAKA"   AS  "BVAKA"
,"HR101"."/BIC/BVMKT"   AS  "BVMKT"
,"HR101"."/BIC/BVETL"   AS  "BVETL"
,"HR101"."/BIC/BVEKI"   AS  "BVEKI"
,"HR101"."/BIC/BVECH"   AS  "BVECH"
,"HR101"."/BIC/BVEMV"   AS  "BVEMV"

,"HR101"."/BIC/BVWWE"   AS  "BVWWE"
,"HR101"."/BIC/BVATL"   AS  "BVATL"
,"HR101"."/BIC/BVAMT"   AS  "BVAMT"
,"HR101"."BP_MAR_STA"   AS  "BP_MAR_STA"
,"HR101"."/BIC/BVTAX"   AS  "BVTAX"
,"HR101"."/BIC/BVVAK"   AS  "BVVAK"
,"HR101"."/BIC/BVFSV"   AS  "BVFSV"
,"HR101"."CURRENCY" AS  "CURRENCY"
,"HR101"."/BIC/BVPCT"   AS  "BVPCT"
,"HR101"."/BIC/BVMUT"   AS  "BVMUT"
,"HR101"."/BIC/BVEPC"   AS  "BVEPC"
,"HR101"."/BIC/BVEXC"   AS  "BVEXC"
,"HR101"."/BIC/BVBOR"   AS  "BVBOR"
,"HR101"."/BIC/BVRES"   AS  "BVRES"
,"HR101"."/BIC/BV281"   AS  "BV281"
,"HR101"."/BIC/BVCOA"   AS  "BVCOA"
,"HR101"."/BIC/NR65S"   AS  "NR65S"
,"HR101"."/BIC/N65SD"   AS  "N65SD"
,"HR101"."/BIC/TAXDE"   AS  "TAXDE"

,"HR101"."DATETO"   AS  "DATETO"
,"HR101"."DATEFROM" AS  "DATEFROM"
,"HR101"."/BIC/SUBTY"    AS  "SUBTY"
,"HR101"."/BIC/OBJPS"   AS  "OBJPS"
,"HR101"."/BIC/SEQNR"   AS  "SEQNR"
,"HR101"."/BIC/INFTY"   AS  "INFTY"
,"HR101"."CH_ON"    AS  "CH_ON"
,"HR101"."/BIC/UNAME"   AS  "UNAME"

FROM "/BIC/AFLHC10100" AS "HR101"
INNER JOIN :cte_hr000 AS "HR000"
ON (
"HR101"."EMPLOYEE" = "HR000"."EMPLOYEE" AND
"HR101"."DATEFROM" <= :p_keydate AND
"HR101"."DATETO" >= :p_keydate
)
;
RETURN
SELECT
"HR101"."EMPLOYEE" AS  "EMPLOYEE"
,"HR101"."LEGAL_FIRST_NAME"
,"HR101"."LEGAL_LAST_NAME"

,"HR101"."DISABILITY"

,"HR001"."COMP_CODE"

,"HR101"."DATETO"   AS  "DATETO"
,"HR101"."DATEFROM" AS  "DATEFROM"
,"HR101"."SUBTY"
,"HR101"."OBJPS"
,"HR101"."SEQNR"
,"HR101"."INFTY"
,"HR101"."CH_ON"
,"HR101"."UNAME"
FROM :cte_HR101 as "HR101"
LEFT OUTER JOIN :cte_hr001 AS "HR001"
ON "HR001"."EMPLOYEE" = "HR101"."EMPLOYEE"
ORDER BY 1
;

endmethod.


METHOD READ_HR105
BY DATABASE FUNCTION FOR HDB
  LANGUAGE SQLSCRIPT
  OPTIONS READ-ONLY
  USING /BIC/AFLHR10500 ZCL_SEZ_INFOTYPES=>READ_HR000 ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE
  .
DECLARE string_list_status varchar( 1333 );
DECLARE string_list_comp_code varchar( 1333 );
string_list_status = '';
string_list_comp_code = '';

cte_column_status=
SELECT BASE_MEMBER FROM "ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE"(:p_emplstatus);

select STRING_AGG(BASE_MEMBER, ',' ORDER BY BASE_MEMBER) into string_list_status FROM :cte_column_status;

cte_column_comp_code=
SELECT BASE_MEMBER AS COMP_CODE FROM "ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE"(:p_comp_code);

select STRING_AGG(COMP_CODE, ',' ORDER BY COMP_CODE) into string_list_comp_code
FROM :cte_column_comp_code;

cte_hr000=
SELECT *
FROM "ZCL_SEZ_INFOTYPES=>READ_HR000"
( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :string_list_status, P_COMP_CODE => :string_list_comp_code );

cte_hr105_prep=
SELECT
row_number()
over (partition by "HR105"."EMPLOYEE","HR105"."/BIC/SUBTY","HR105"."DATETO","HR105"."DATEFROM", "HR105"."/BIC/SEQNR" ORDER BY "HR105"."CH_ON" DESC) as rownumber,
"HR105"."EMPLOYEE"
,"HR000"."LEGAL_FIRST_NAME"
,"HR000"."LEGAL_LAST_NAME"
,"HR105"."/BIC/USRID" AS "USRID"
,"HR105"."/BIC/USRIDLONG" AS "USRIDLONG"

,"HR105"."DATETO"
,"HR105"."DATEFROM"
,"HR105"."/BIC/SUBTY" AS "SUBTY"
,"HR105"."/BIC/OBJPS" AS "OBJPS"
,"HR105"."/BIC/SEQNR" AS "SEQNR"
,"HR105"."/BIC/INFTY" AS "INFTY"
,"HR105"."CH_ON"
,"HR105"."/BIC/UNAME" AS "UNAME"
FROM "/BIC/AFLHR10500" AS "HR105"
INNER JOIN :cte_hr000 AS "HR000"
ON (
"HR105"."EMPLOYEE" = "HR000"."EMPLOYEE" AND
"HR105"."/BIC/SUBTY" = :p_subty AND
"HR105"."DATEFROM" <= :p_keydate AND
"HR105"."DATETO" >= :p_keydate
)
;
RETURN
SELECT
EMPLOYEE
,LEGAL_FIRST_NAME
,LEGAL_LAST_NAME
,USRID
,USRIDLONG
,DATETO
,DATEFROM
,SUBTY
,OBJPS
,SEQNR
,INFTY
,CH_ON
,UNAME
FROM :cte_hr105_prep
WHERE rownumber = 1
ORDER BY 1
;

endmethod.


METHOD READ_HR315
BY DATABASE FUNCTION FOR HDB
  LANGUAGE SQLSCRIPT
  OPTIONS READ-ONLY
  USING /BIC/AFLHR31500 ZCL_SEZ_INFOTYPES=>READ_HR000 ZCL_SEZ_INFOTYPES=>READ_HR001
  ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE
  .
DECLARE string_list_status varchar( 1333 );
DECLARE string_list_comp_code varchar( 1333 );
string_list_status = '';
string_list_comp_code = '';

cte_column_status=
SELECT BASE_MEMBER FROM "ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE"(:p_emplstatus);

select STRING_AGG(BASE_MEMBER, ',' ORDER BY BASE_MEMBER) into string_list_status FROM :cte_column_status;

cte_column_comp_code=
SELECT BASE_MEMBER AS COMP_CODE FROM "ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE"(:p_comp_code);

select STRING_AGG(COMP_CODE, ',' ORDER BY COMP_CODE) into string_list_comp_code
FROM :cte_column_comp_code;

cte_hr000=
SELECT *
FROM "ZCL_SEZ_INFOTYPES=>READ_HR000"
( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :string_list_status, P_COMP_CODE => :string_list_comp_code );

cte_hr001=
SELECT *
FROM "ZCL_SEZ_INFOTYPES=>READ_HR001"
( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :string_list_status, P_COMP_CODE => :string_list_comp_code );

cte_hr315_prep=
SELECT
"HR315"."EMPLOYEE"  AS  "EMPLOYEE"
,"HR000"."LEGAL_FIRST_NAME"
,"HR000"."LEGAL_LAST_NAME"

,"HR315"."/BIC/ZZOVHLINE"   AS  "ZZOVHLINE"
,"HR315"."/BIC/OVHLINE" AS  "OVHLINE"
,"HR315"."SEND_CCTR"    AS  "SEND_CCTR"
,"HR315"."CO_AREA"  AS  "CO_AREA"
,"HR315"."ACTTYPE"  AS  "ACTTYPE"
,"HR315"."VENDOR"   AS  "VENDOR"
,"HR315"."OI_EBELN" AS  "OI_EBELN"
,"HR315"."OI_EBELP" AS  "OI_EBELP"
,"HR315"."/BIC/ZMM_SHTXT"   AS  "ZMM_SHTXT"
,"HR315"."/BIC/ZZBL_EM" AS  "ZZBL_EM"
,"HR315"."/BIC/ZZBL_EM_D"   AS  "ZZBL_EM_D"
,"HR315"."/BIC/ZACCNT"  AS  "ZACCNT"

,"HR315"."DATETO"   AS  "DATETO"
,"HR315"."DATEFROM" AS  "DATEFROM"
,"HR315"."/BIC/SUBTY"   AS  "SUBTY"
,"HR315"."/BIC/OBJPS"   AS  "OBJPS"
,"HR315"."/BIC/SEQNR"   AS  "SEQNR"
,"HR315"."/BIC/INFTY"   AS  "INFTY"
,"HR315"."CH_ON"    AS  "CH_ON"
,"HR315"."/BIC/UNAME"   AS  "UNAME"

FROM "/BIC/AFLHR31500" AS "HR315"
INNER JOIN :cte_hr000 AS "HR000"
ON (
"HR315"."EMPLOYEE" = "HR000"."EMPLOYEE" AND
"HR315"."DATEFROM" <= :p_keydate AND
"HR315"."DATETO" >= :p_keydate
)
;
RETURN
SELECT
"HR315"."EMPLOYEE"
,"HR315"."LEGAL_FIRST_NAME"
,"HR315"."LEGAL_LAST_NAME"

,"HR315"."OVHLINE"
,"HR315"."ZZOVHLINE"

,"HR315"."SEND_CCTR"
,"HR315"."CO_AREA"
,"HR315"."ACTTYPE"

,"HR315"."VENDOR"
,"HR315"."OI_EBELN"
,"HR315"."OI_EBELP"
,"HR315"."ZMM_SHTXT"
,"HR315"."ZZBL_EM"
,"HR315"."ZZBL_EM_D"
,"HR315"."ZACCNT"

,"HR001"."COMP_CODE"

,"HR315"."DATETO"
,"HR315"."DATEFROM"
,"HR315"."SUBTY"
,"HR315"."OBJPS"
,"HR315"."SEQNR"
,"HR315"."INFTY"
,"HR315"."CH_ON"
,"HR315"."UNAME"

FROM :cte_hr315_prep AS "HR315"
LEFT OUTER JOIN :cte_hr001 AS "HR001"
ON "HR001"."EMPLOYEE" = "HR315"."EMPLOYEE"
ORDER BY 1
;

endmethod.


METHOD READ_HR351
BY DATABASE FUNCTION FOR HDB
  LANGUAGE SQLSCRIPT
  OPTIONS READ-ONLY
  USING /BIC/AFLHC35100
  ZCL_SEZ_INFOTYPES=>READ_HR000
  ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE
  .
DECLARE string_list_status varchar( 1333 );
DECLARE string_list_comp_code varchar( 1333 );
string_list_status = '';
string_list_comp_code = '';
cte_column_status=
SELECT BASE_MEMBER FROM "ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE"(:p_emplstatus)
;
select STRING_AGG(BASE_MEMBER, ',' ORDER BY BASE_MEMBER) into string_list_status
FROM :cte_column_status;

cte_column_comp_code=
SELECT BASE_MEMBER AS COMP_CODE FROM "ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE"(:p_comp_code)
;
select STRING_AGG(COMP_CODE, ',' ORDER BY COMP_CODE) into string_list_comp_code
FROM :cte_column_comp_code;


cte_hr000=
SELECT *
FROM "ZCL_SEZ_INFOTYPES=>READ_HR000"
( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :string_list_status, P_COMP_CODE => :string_list_comp_code );

cte_hr351_prep=
SELECT
row_number() over
(partition by "HR351_P"."EMPLOYEE","HR351_P"."/BIC/SUBTY","HR351_P"."DATETO","HR351_P"."DATEFROM","HR351_P"."/BIC/SEQNR"
ORDER BY "HR351_P".CH_ON DESC) as rownumber,
"HR351_P"."EMPLOYEE"    AS  "EMPLOYEE"
,"HR000".LEGAL_FIRST_NAME
,"HR000".LEGAL_LAST_NAME
,"HR351_P"."/BIC/LAEDC"  AS  "PRINTING_LANGUAGE"

,"HR351_P"."/BIC/SUBTY"  AS  "SUBTY"
,"HR351_P"."/BIC/OBJPS"  AS  "OBJPS"
,"HR351_P"."DATETO"  AS  "DATETO"
,"HR351_P"."DATEFROM"    AS  "DATEFROM"
,"HR351_P"."/BIC/SEQNR"  AS  "SEQNR"
,"HR351_P"."/BIC/INFTY"  AS  "INFTY"
,"HR351_P"."CH_ON"   AS  "CH_ON"
,"HR351_P"."/BIC/UNAME"  AS  "UNAME"



,"HR351_P"."/BIC/ATP1A"  AS  "ATP1A"
,"HR351_P"."/BIC/ATP2A"  AS  "ATP2A"
,"HR351_P"."/BIC/ATP3A"  AS  "ATP3A"
,"HR351_P"."/BIC/DE03C"  AS  "DE03C"
,"HR351_P"."/BIC/EDVAF"  AS  "EDVAF"
,"HR351_P"."/BIC/ACBRN"  AS  "ACBRN"
,"HR351_P"."/BIC/CDEC4"  AS  "CDEC4"
,"HR351_P"."/BIC/T171C"  AS  "T171C"
,"HR351_P"."/BIC/ATSCE"  AS  "ATSCE"
,"HR351_P"."/BIC/DBATD"  AS  "DBATD"
,"HR351_P"."/BIC/FNATD"  AS  "FNATD"
,"HR351_P"."/BIC/TYATC"  AS  "TYATC"
,"HR351_P"."NUMDAY"  AS  "NUMDAY"
,"HR351_P"."/BIC/HSEMB"  AS  "HSEMB"
,"HR351_P"."/BIC/H9ATC"  AS  "H9ATC"
,"HR351_P"."PH_DELFLAG"  AS  "PH_DELFLAG"
,"HR351_P"."/BIC/ATTRN"  AS  "ATTRN"
,"HR351_P"."/BIC/MTATV"  AS  "MTATV"
,"HR351_P"."/BIC/MTSOV"  AS  "MTSOV"
,"HR351_P"."/BIC/SPEPV"  AS  "SPEPV"

FROM "/BIC/AFLHC35100" AS "HR351_P"
INNER JOIN :cte_hr000 AS "HR000" ON
"HR351_P"."EMPLOYEE" = "HR000"."EMPLOYEE" AND
"HR351_P"."DATEFROM" <= :p_keydate AND
"HR351_P"."DATETO" >= :p_keydate
;
RETURN

SELECT
EMPLOYEE
,LEGAL_FIRST_NAME
,LEGAL_LAST_NAME
,PRINTING_LANGUAGE

,DATETO
,DATEFROM
,SUBTY
,OBJPS
,SEQNR
,INFTY
,CH_ON
,UNAME

,ATP1A
,ATP2A
,ATP3A
,DE03C
,EDVAF
,ACBRN
,CDEC4
,T171C
,ATSCE
,DBATD
,FNATD
,TYATC
,NUMDAY
,HSEMB
,H9ATC
,PH_DELFLAG
,ATTRN
,MTATV
,MTSOV
,SPEPV
FROM :cte_hr351_prep
WHERE rownumber = 1
ORDER BY 1
;
endmethod.
ENDCLASS. "ZCL_SEZ_INFOTYPES

CLASS zcl_bpc_amdp_sez_employee DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

public section.
INTERFACES if_amdp_marker_hdb .
TYPES:
BEGIN OF g_t_employee,
SAP_EMPLOYEE_ID TYPE   /BI0/OIEMPLOYEE ,
GROUP_ID    TYPE   /BIC/OIUSRID    ,
LEGAL_FIRST_NAME    TYPE   /BIC/OIVORNA    ,
NICK_NAME   TYPE   /BIC/OIRUFNM    ,
OTHER_FIRST_NAME     TYPE   /BIC/OIVORNA    ,
LEGAL_LAST_NAME TYPE   /BIC/OINACHN    ,
PREFERRED_LAST_NAME TYPE   /BIC/OINACHN    ,
BIRTH_NAME  TYPE   /BIC/OINAME2    ,
MIDDLE_NAME TYPE   PAD_MIDNM   ,
SUFFIX  TYPE       CHAR1    ,
NATIONALITY TYPE   LANDX  ,
SECOND_NATIONALITY  TYPE   LANDX  ,
GENDER  TYPE   uj_dim_member  ,
MARITAL_STATUS  TYPE   uj_dim_member   ,
DATE_OF_MARITAL_STATUS TYPE DATS   ,
BUSINESS_COMMUNICAT_LANGUAGE    TYPE   RSTXTSH    ,
DISABILITY TYPE CHAR1 ,
DATE_OF_BIRTH   TYPE   DATS      ,
COUNTRY_OF_BIRTH  TYPE INTCA3 ,
PLACE_OF_BIRTH TYPE /BIC/OIGBORT ,
REGION_OF_BIRTH TYPE /BIC/OIGBDEP    ,
OFFICIAL_LANGUAGE TYPE uj_dim_member   ,
MOST_RECENT_HIRE_DATE   TYPE DATS      ,
GROUP_START_DATE    TYPE DATS      ,
SENORITY_DATE   TYPE DATS      ,
START_DATE_BEFORE_ACQUISITION   TYPE DATS    ,
POSITION_ID TYPE   /BIC/OIUSRID    ,
POSITION TYPE  RSTXTMD ,
POSITION_TITLE TYPE  RSTXTMD ,
POSITION_ENTRY_DATE TYPE     CHAR1  ,
LEGAL_ENTITY    TYPE       /BI0/OIBPCSTEPTXT    ,
COMP_CODE   TYPE   /BI0/OICOMP_CODE    ,
PERS_AREA   TYPE   /BI0/OIPERS_AREA    ,
PERS_AREA_DESC  TYPE   RSTXTMD ,
PERS_SAREA  TYPE   /BI0/OIPERS_SAREA   ,
PERS_SAREA_DESC TYPE   RSTXTSH ,

*HR_BUSINESS_PARTNER_GROUP_ID    TYPE
*BUSINESS_UNIT   TYPE    RSTXTSH ,
*DIVISION    TYPE    RSTXTSH ,

DEPARTMENT_CODE  TYPE CHAR14 ,
*DEPARTMENT  TYPE RSTXTLG ,
BUSINESS_UNIT TYPE uj_dim_member ,
SEZAME_COST_CENTER_ID   TYPE uj_dim_member      ,

EMPLGROUP TYPE /BI0/OIEMPLGROUP ,
WORK_LOCATION_NAME  TYPE   /BI0/OIBUILDING ,
FULL_TIME_REMOTE    TYPE       CHAR1    ,
LINE_MANAGER   TYPE   /BIC/OIGROUPID  ,
JOB_ID  TYPE uj_dim_member      ,
LOCAL_JOB_NAME  TYPE       RSTXTSH    ,
JOB_GRADE TYPE CHAR1 ,
EMPLOYEE_CLASS  TYPE        RSTXTSH ,
CONTRACT_TYPE_16   TYPE        RSTXTMD ,
CONTRACT_TYPE_01   TYPE        RSTXTMD ,
CONTRACT_END_DATE   TYPE   DATS      ,

PROBATIONARY_PERIOD_END_DATE    TYPE       CHAR1   ,
EMPLOYMENT_TYPE TYPE        RSTXTSH ,
STANDARD_WEEKLY_HOURS   TYPE   /BIC/OIWOSTD    ,

GLOBAL_EMPLOYEE_LEVEL   TYPE   RSTXTMD   ,
DEFINITE_WORK TYPE CHAR2,
GROUP_OF_INTEREST TYPE CHAR2,

ACTIONREAS TYPE /BI0/OIACTIONREAS ,
ACTIONTYPE TYPE /BI0/OIACTIONTYPE ,
ACTIONTYPE_DESC TYPE RSTXTSH ,
SMART_CODE TYPE CHAR1 ,

*PAY_GROUP TYPE /BI0/OIPAYSCALEGR ,
*Compa Ratio Optional
*Payroll ID  Optional
*HOURLY_RATE TYPE /BI0/OIPAYPCT,
*Pay Component   MANDATORY
*Amount/Percentage   MANDATORY
*Issue Date  MANDATORY
*CURRENCY TYPE /BI0/OICURRENCY ,
*Pay Component   MANDATORY
*Amount/Percentage   MANDATORY
*Currency    MANDATORY
*FREQUENCY TYPE CHAR7,
*
*COUNTRY_CODE1   TYPE      CHAR3    ,
*PHONE_NUMBER1   TYPE      RSTXTSH ,
*IS_PRIMARY  TYPE            CHAR1    ,
*COUNTRY_CODE2   TYPE      CHAR3    ,
*PHONE_NUMBER2   TYPE      RSTXTSH ,
*IS_PRIMARY_2    TYPE       CHAR1    ,
*EMAIL_ADDRESS1  TYPE   /BIC/OIUSRIDLONG    ,

END OF g_t_employee.

CLASS-METHODS GET_EMPLOYEE_DATA
FOR TABLE FUNCTION ZSEZ_TF_EMPLOYEE.
CLASS-METHODS GET_EMPLOYEE_EMC
FOR TABLE FUNCTION ZSEZ_TF_EMPL_EMC.
CLASS-METHODS GET_EMPLOYEE_NID
FOR TABLE FUNCTION ZSEZ_TF_EMPL_NID.
CLASS-METHODS GET_COSTCENTER
FOR TABLE FUNCTION ZSVEZ_TF_COSTCENTER.
*ZCL_BPC_AMDP_SEZ_EMPLOYEE=>GET_COSTCENTER

TYPES: g_tt_employee TYPE standard table of g_t_employee.

PROTECTED SECTION.
PRIVATE SECTION.
ENDCLASS.



CLASS ZCL_BPC_AMDP_SEZ_EMPLOYEE IMPLEMENTATION.


METHOD GET_COSTCENTER
BY DATABASE FUNCTION FOR HDB
  LANGUAGE SQLSCRIPT
  OPTIONS READ-ONLY
  USING ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE
  ZCL_BPC_AMDP_SEZ_EMPLOYEE=>GET_EMPLOYEE_DATA
  /BI0/MCOSTCENTER /BI0/TCOSTCENTER
  .
DECLARE string_list_status varchar( 1333 );
DECLARE string_list_comp_code varchar( 1333 );
DECLARE string_list_anssa varchar( 1333 );
string_list_status = '';
string_list_comp_code = '';
string_list_anssa = '';
-- employee status
cte_column_status=
SELECT BASE_MEMBER FROM "ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE"(:p_emplstatus);
SELECT STRING_AGG(BASE_MEMBER, ',' ORDER BY BASE_MEMBER) into string_list_status FROM :cte_column_status;
--comp_code
cte_column_comp_code=
SELECT DISTINCT BASE_MEMBER as COMP_CODE FROM "ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE"(:p_comp_code);
select STRING_AGG(COMP_CODE, ',' ORDER BY COMP_CODE) into string_list_comp_code FROM :cte_column_comp_code;
-- AddressType
cte_column_anssa=
SELECT DISTINCT BASE_MEMBER as ANSSA FROM "ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE"(:p_anssa);
select STRING_AGG(ANSSA, ',' ORDER BY ANSSA) into string_list_anssa FROM :cte_column_anssa;

cte_employee=
SELECT DISTINCT "SEZAME_COST_CENTER_ID",
  'A' AS "STATUS",
  "LEGAL_ENTITY"
FROM "ZCL_BPC_AMDP_SEZ_EMPLOYEE=>GET_EMPLOYEE_DATA"
( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :string_list_status, P_ANSSA => :string_list_anssa, P_COMP_CODE => :string_list_comp_code );

et_tcostcenter=
SELECT
CO_AREA
,COSTCENTER
,DATETO
,DATEFROM
--,TXTSH
,TXTMD
FROM "/BI0/TCOSTCENTER"
WHERE CO_AREA = 'TE01' AND
DATETO >= :p_keydate AND DATEFROM <= :p_keydate
AND LANGU = SESSION_CONTEXT( 'LOCALE_SAP' )
;
et_mcostcenter=
SELECT
    M.CO_AREA
,   M.COSTCENTER
,   M.OBJVERS
,   M.DATETO
,   M.DATEFROM
,   M.CHANGED
,   M.BUS_AREA
,   M.COMP_CODE
,   M.LOGSYS
,   M.OBJ_CURR
,   M.PROFIT_CTR
,   M.RESP_PERS
,   M.RT_LOCATIO
,   M."/BIC/CO_CCCAT"   AS  CO_CCCAT
,   M."/BIC/OVHLINE"    AS  OVHLINE
,   M."/BIC/OVHLINE1"   AS  OVHLINE1
,   M."/BIC/OVHLINE2"   AS  OVHLINE2
,   M."/BIC/OVHLINE3"   AS  OVHLINE3
,   M."/BIC/OVHLINE4"   AS  OVHLINE4
,   M."/BIC/OVHLINE5"   AS  OVHLINE5
,   M."/BIC/ACCASSIGN"  AS  ACCASSIGN
,   M.FUNC_AREA
,   M.RESP_CCTR
,   M.RESP_USER
,   M."/BIC/ABTEI"  AS  ABTEI
,   "/BIC/BUSLINE"    AS  BUSLINE
,   "/BIC/PRODGRP"    AS  PRODGRP
,   "/BIC/BUSENTITY"  AS  BUSENTITY
,   T."TXTMD" AS NAME
FROM   "/BI0/MCOSTCENTER" as M
INNER JOIN :et_tcostcenter as T on T.COSTCENTER = M.COSTCENTER AND T.CO_AREA = M.CO_AREA
WHERE M.CO_AREA = 'TE01' AND
M.DATETO >= :p_keydate AND M.DATEFROM <= :p_keydate
;

cte_cctr_prep=
SELECT
"EMP"."SEZAME_COST_CENTER_ID"
,"EMP"."STATUS"
,"CCTR"."COSTCENTER"
,CONCAT(CONCAT(CONCAT(CONCAT(SUBSTRING("CCTR"."DATEFROM",7,2),'/'),SUBSTRING("CCTR"."DATEFROM",5,2)),'/'),SUBSTRING("CCTR"."DATEFROM",1,4)) AS "EFFECTIVE_AS_OF"
,"EMP"."LEGAL_ENTITY" AS "LEGAL_ENTITY"
,"CCTR"."NAME"
FROM :cte_employee as "EMP"
LEFT OUTER JOIN :et_mcostcenter as "CCTR" ON "CCTR"."COSTCENTER" = SUBSTRING("EMP"."SEZAME_COST_CENTER_ID",7,10)
;

RETURN
SELECT
"SEZAME_COST_CENTER_ID"
,"STATUS"
,"EFFECTIVE_AS_OF"
,"COSTCENTER"
,"LEGAL_ENTITY"
,"NAME"
FROM :cte_cctr_prep
WHERE "COSTCENTER" <> ''
ORDER BY 1;

endmethod.


METHOD GET_EMPLOYEE_DATA
BY DATABASE FUNCTION FOR HDB
  LANGUAGE SQLSCRIPT
  OPTIONS READ-ONLY
  USING
  ZCL_SEZ_INFOTYPES=>READ_HR000
  ZCL_SEZ_INFOTYPES=>READ_HR002
  ZCL_SEZ_INFOTYPES=>READ_HR351
  ZCL_SEZ_INFOTYPES=>READ_HR001
  ZCL_SEZ_INFOTYPES=>READ_HR105
  ZCL_SEZ_INFOTYPES=>READ_HR008
  ZCL_SEZ_INFOTYPES=>READ_HR041
  ZCL_SEZ_INFOTYPES=>READ_HR016
  ZCL_SEZ_INFOTYPES=>READ_HR007
  ZCL_SEZ_INFOTYPES=>READ_HR032
  ZCL_SEZ_INFOTYPES=>READ_HR315
  ZCL_SEZ_INFOTYPES=>READ_HR006
  ZCL_SEZ_INFOTYPES=>READ_HR101

.
--p_keydate.p_emplstatus,p_ANSSA,p_comp_code

cte_hr000=
SELECT * FROM "ZCL_SEZ_INFOTYPES=>READ_HR000"( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus, P_COMP_CODE => :p_comp_code );
cte_hr002=
SELECT * FROM "ZCL_SEZ_INFOTYPES=>READ_HR002"( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus, P_COMP_CODE => :p_comp_code );
cte_hr105G=
SELECT * FROM "ZCL_SEZ_INFOTYPES=>READ_HR105"( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus, P_COMP_CODE => :p_comp_code, P_SUBTY => 'GDFS');
cte_hr105C=
SELECT * FROM "ZCL_SEZ_INFOTYPES=>READ_HR105"( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus, P_COMP_CODE => :p_comp_code, P_SUBTY => 'CELL');
cte_hr105_020=
SELECT * FROM "ZCL_SEZ_INFOTYPES=>READ_HR105"( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus, P_COMP_CODE => :p_comp_code, P_SUBTY => '0020');
cte_hr105_010=
SELECT * FROM "ZCL_SEZ_INFOTYPES=>READ_HR105"( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus, P_COMP_CODE => :p_comp_code, P_SUBTY => '0010');
cte_hr008=
SELECT * FROM "ZCL_SEZ_INFOTYPES=>READ_HR008"( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus, P_COMP_CODE => :p_comp_code );
cte_hr101=
SELECT * FROM "ZCL_SEZ_INFOTYPES=>READ_HR101"( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus, P_COMP_CODE => :p_comp_code );
cte_hr001=
SELECT * FROM "ZCL_SEZ_INFOTYPES=>READ_HR001"( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus , P_COMP_CODE => :p_comp_code);
cte_hr351=
SELECT * FROM "ZCL_SEZ_INFOTYPES=>READ_HR351"( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus , P_COMP_CODE => :p_comp_code);
cte_hr041=
SELECT * FROM "ZCL_SEZ_INFOTYPES=>READ_HR041"( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus , P_COMP_CODE => :p_comp_code);
cte_hr016=
SELECT * FROM "ZCL_SEZ_INFOTYPES=>READ_HR016"( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus , P_COMP_CODE => :p_comp_code);
cte_hr315=
SELECT * FROM "ZCL_SEZ_INFOTYPES=>READ_HR315"( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus , P_COMP_CODE => :p_comp_code);
cte_hr006=
SELECT * FROM "ZCL_SEZ_INFOTYPES=>READ_HR006"( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus , P_ANSSA => :p_anssa, P_COMP_CODE => :p_comp_code);
cte_hr032=
SELECT * FROM "ZCL_SEZ_INFOTYPES=>READ_HR032"( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus , P_COMP_CODE => :p_comp_code);
cte_hr007=
SELECT * FROM "ZCL_SEZ_INFOTYPES=>READ_HR007"( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus , P_COMP_CODE => :p_comp_code);

cte_employee_prep=
SELECT
"HR002"."EMPLOYEE" AS "SAP_EMPLOYEE_ID"
,COALESCE("HR105G"."USRID",'TE'||"HR002"."EMPLOYEE") AS "GROUP_ID"
,"HR002"."LEGAL_FIRST_NAME"
,"HR002"."NICKNAME" AS "NICK_NAME"
,'' AS "OTHER_FIRST_NAME"
,"HR002"."LEGAL_LAST_NAME"
,"HR002"."LEGAL_LAST_NAME" AS "PREFERRED_LAST_NAME"
,"HR002"."BIRTH_NAME"
,'' AS "MIDDLE_NAME"
,'' AS "SUFFIX"
,"HR002"."NATIONALITY_ISO" AS "NATIONALITY"
,"HR002"."SECOND_NATIONALITY_ISO" AS "SECOND_NATIONALITY"
,CASE "HR002"."GENDER" WHEN '1' THEN 'Male' WHEN '2' THEN 'Female' WHEN '3' THEN 'Transgender' ELSE 'Unknown' END AS "GENDER"
,CASE  "HR002"."MARITAL_STATUS" WHEN '0' THEN 'S'
  WHEN '1' THEN 'M' WHEN '2' THEN 'W' WHEN '3' THEN 'D'
  WHEN '4' THEN 'CWC' WHEN '5' THEN 'U' WHEN '6' THEN 'U'
  WHEN '9' THEN 'CC'
  ELSE 'U'
  END AS "MARITAL_STATUS"
,"HR002"."DATE_OF_MARITAL_STATUS"
,"HR002"."BUSINESS_COMMUNICAT_LANGUAGE"
,"HR101"."DISABILITY"
,"HR002"."DATEBIRTH" AS "DATE_OF_BIRTH"
,"HR002"."COUNTRY_OF_BIRTH_ISO"
,"HR002"."PLACE_OF_BIRTH"
,"HR002"."GBDEP" AS  "REGION_OF_BIRTH"
,CASE WHEN (SUBSTRING("HR001"."COMP_CODE",1,2) = 'BE') THEN
   CASE "HR002"."BUSINESS_COMMUNICAT_LANGUAGE"
   WHEN 'FR' THEN 'French' WHEN 'fr' THEN 'French'
   WHEN 'NL' THEN 'Dutch' WHEN 'nl' THEN 'Dutch' ELSE '???' END
  ELSE '' END AS "OFFICIAL_LANGUAGE"
,CASE "HR351"."PRINTING_LANGUAGE" WHEN 'F' THEN 'French' WHEN 'N' THEN 'Dutch' ELSE '' END AS "PRINTING_LANGUAGE"
,"HR041"."DAT01" AS "MOST_RECENT_HIRE_DATE"
,REPLACE("HR041"."DAT02",'00000000',"HR041"."DAT01") AS "GROUP_START_DATE"
,"HR016"."KONDT" AS "SENORITY_DATE"
,CASE WHEN "HR041"."DAT02" <> '' AND "HR041"."DAT01" <> '' THEN CASE
  WHEN "HR041"."DAT01" <= "HR041"."DAT02" THEN 'MOST_RECENT_HIRE_DATE'
  WHEN "HR041"."DAT01" > "HR041"."DAT02" THEN 'GROUP_START_DATE'
  END
  ELSE 'N/A'
END AS "PLACEHOLDER_START_DATE_BEFORE_ACQUISITION"
,COALESCE("HR105G"."USRID",'TE'||"HR002"."EMPLOYEE") AS "POSITION_ID"
,"HR001"."POSITION"
,"HR001"."POSITION_TITLE"
,'' AS "POSITION_ENTRY_DATE"
,"HR001"."LEGALENTITY"||'_'||LTRIM("HR001"."LEGAL_ENTITY_TXT",' ') AS "LEGAL_ENTITY"
,"HR001"."COMP_CODE" AS "COMP_CODE"
,"HR001"."PERS_AREA"
,"HR001"."PERS_SAREA"
,"HR001"."PERS_AREA_DESC"
,"HR001"."PERS_SAREA_DESC"

,"HR001"."DEPARTMENT_CODE"
--,"HR001"."DEPARTMENT"
,'ES000' AS BUSINESS_UNIT
,"HR001"."LEGALENTITY"||'_'||"HR315"."SEND_CCTR" AS "SEZAME_COST_CENTER_ID"
,"HR001"."LINE_MANAGER"
--,COALESCE("PLW"."DEPT_MGR_GID","HR105G2"."GROUP_ID") AS "DEPT_MGR_GID"
,"HR001"."EMPLGROUP"
,"HR032"."BUILDING" AS "WORK_LOCATION_NAME"
,'' AS "FULL_TIME_REMOTE"
,"HR001"."JOB" AS "JOB_ID"
,'HRP1000-STEXT N/A in PLW' AS "LOCAL_JOB_NAME"
,'' AS "JOB_GRADE"
,CASE WHEN ("HR016"."CNTRCTTYPE" = '63' OR "HR016"."CNTRCTTYPE" = '64') THEN 'Apprenticeship' ELSE (
    CASE WHEN ("HR001"."EMPLSGROUP" = '07' OR "HR001"."EMPLSGROUP" = '19') THEN 'Intership' ELSE (
      CASE WHEN "HR001"."EMPLGROUP" = '2' THEN 'External' ELSE 'Employee'  END )END)
  END AS "EMPLOYEE_CLASS"
,CASE WHEN "HR016"."CONTRACT_TYPE" = 'Fixed term contract' THEN 'T' WHEN "HR016"."CONTRACT_TYPE" = 'Permanent' THEN 'R' else "HR016"."CONTRACT_TYPE"
END AS "CONTRACT_TYPE_16"
,'HRP1000-CCTYP N/A in PLW' AS "CONTRACT_TYPE_01"

,"HR016"."CTEDT" AS "CONTRACT_END_DATE"

,'' AS "PROBATIONARY_PERIOD_END_DATE"
,"HR007"."STANDARD_WEEKLY_HOURS"
,'Salaried' AS "EMPLOYMENT_TYPE"
,"HR001"."EMPLSGROUP_TEXT" AS "GLOBAL_EMPLOYEE_LEVEL"
,'No' AS "DEFINITE_WORK"
,'No' AS "GROUP_OF_INTEREST"
,"HR000"."ACTIONREAS"
,"HR000"."ACTIONTYPE"
,"HR000"."ACTIONTYPE_DESC"
,'' AS "SMART_CODE"
FROM :cte_hr002 AS "HR002"
INNER JOIN :cte_hr000 as "HR000" ON "HR000"."EMPLOYEE" = "HR002"."EMPLOYEE"
LEFT OUTER JOIN :cte_hr105g as "HR105G" ON "HR105G"."EMPLOYEE" = "HR002"."EMPLOYEE"
LEFT OUTER JOIN :cte_hr001 AS "HR001" ON "HR001"."EMPLOYEE" = "HR002"."EMPLOYEE"
LEFT OUTER JOIN :cte_hr351 AS "HR351" ON "HR351"."EMPLOYEE" = "HR002"."EMPLOYEE"
LEFT OUTER JOIN :cte_hr041 AS "HR041" ON "HR041"."EMPLOYEE" = "HR002"."EMPLOYEE"
LEFT OUTER JOIN :cte_hr016 AS "HR016" ON "HR016"."EMPLOYEE" = "HR002"."EMPLOYEE"
LEFT OUTER JOIN :cte_hr315 AS "HR315" ON "HR315"."EMPLOYEE" = "HR002"."EMPLOYEE"
--LEFT OUTER JOIN :cte_hr105g as "HR105G2" ON "HR105G2"."EMPLOYEE" = "HR001"."DEPT_MGR"
LEFT OUTER JOIN :cte_hr032 AS "HR032" ON "HR032"."EMPLOYEE" = "HR002"."EMPLOYEE"
LEFT OUTER JOIN :cte_hr007 AS "HR007" ON "HR007"."EMPLOYEE" = "HR002"."EMPLOYEE"
LEFT OUTER JOIN :cte_hr101 AS "HR101" ON "HR101"."EMPLOYEE" = "HR002"."EMPLOYEE"


;


RETURN
SELECT
SAP_EMPLOYEE_ID
,GROUP_ID
,LEGAL_FIRST_NAME
,NICK_NAME
,OTHER_FIRST_NAME

,LEGAL_LAST_NAME
,PREFERRED_LAST_NAME
,BIRTH_NAME
,MIDDLE_NAME
,SUFFIX

,NATIONALITY
,SECOND_NATIONALITY
,GENDER

,MARITAL_STATUS
,DATE_OF_MARITAL_STATUS
,BUSINESS_COMMUNICAT_LANGUAGE
,DISABILITY

,DATE_OF_BIRTH

,COUNTRY_OF_BIRTH_ISO AS "COUNTRY_OF_BIRTH"
,"PLACE_OF_BIRTH"
,"REGION_OF_BIRTH"
,"OFFICIAL_LANGUAGE"
,MOST_RECENT_HIRE_DATE
,GROUP_START_DATE
,CASE WHEN SENORITY_DATE = '' THEN CASE
   WHEN "PLACEHOLDER_START_DATE_BEFORE_ACQUISITION" = 'MOST_RECENT_HIRE_DATE' THEN MOST_RECENT_HIRE_DATE
   WHEN "PLACEHOLDER_START_DATE_BEFORE_ACQUISITION" = 'GROUP_START_DATE' THEN GROUP_START_DATE
   ELSE '' END
   ELSE SENORITY_DATE
END AS "SENORITY_DATE"
,'' AS "START_DATE_BEFORE_ACQUISITION"
,POSITION_ID
,POSITION
,POSITION_TITLE
,POSITION_ENTRY_DATE
,LEGAL_ENTITY

,COMP_CODE
,PERS_AREA
,PERS_AREA_DESC
,PERS_SAREA
,PERS_SAREA_DESC

,DEPARTMENT_CODE
,BUSINESS_UNIT
,SEZAME_COST_CENTER_ID

,EMPLGROUP
,WORK_LOCATION_NAME
,FULL_TIME_REMOTE
,LINE_MANAGER
,JOB_ID
,LOCAL_JOB_NAME
,JOB_GRADE
,EMPLOYEE_CLASS
,CONTRACT_TYPE_16
,CONTRACT_TYPE_01
,CONTRACT_END_DATE
,PROBATIONARY_PERIOD_END_DATE
,EMPLOYMENT_TYPE
,STANDARD_WEEKLY_HOURS

,GLOBAL_EMPLOYEE_LEVEL
,DEFINITE_WORK
,GROUP_OF_INTEREST
,ACTIONREAS
,ACTIONTYPE
,ACTIONTYPE_DESC
,SMART_CODE

FROM :cte_employee_prep AS EMP

ORDER BY 1
;
ENDMETHOD.


METHOD GET_EMPLOYEE_EMC
BY DATABASE FUNCTION FOR HDB
  LANGUAGE SQLSCRIPT
  OPTIONS READ-ONLY
  USING /BIC/AFLHR00600 ZVMAXREQFLHR006
  ZCL_SEZ_INFOTYPES=>READ_HR000 ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE
  ZCL_SEZ_INFOTYPES=>READ_HR105
  .
* /BIC/B0000604001 PSA for /BIC/AFLHR00600 PA0006
DECLARE string_list_status varchar( 1333 );
DECLARE string_list_comp_code varchar( 1333 );
string_list_status = '';
string_list_comp_code = '';
cte_column_status=
SELECT BASE_MEMBER FROM "ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE"(:p_emplstatus)
;
select STRING_AGG(BASE_MEMBER, ',' ORDER BY BASE_MEMBER) into string_list_status
FROM :cte_column_status;

cte_column_comp_code=
SELECT BASE_MEMBER AS COMP_CODE FROM "ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE"(:p_comp_code)
;
select STRING_AGG(COMP_CODE, ',' ORDER BY COMP_CODE) into string_list_comp_code
FROM :cte_column_comp_code;

cte_hr000=
SELECT * FROM "ZCL_SEZ_INFOTYPES=>READ_HR000"( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :string_list_status, P_COMP_CODE => :string_list_comp_code );

cte_hr105_gdfs=
SELECT * FROM "ZCL_SEZ_INFOTYPES=>READ_HR105"( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :string_list_status, P_SUBTY => 'GDFS', P_COMP_CODE => :string_list_comp_code);

cte_employee_emc=
SELECT
  "HR006"."EMPLOYEE"
,  "HR006"."DATETO"
,  "HR105G"."USRID" AS "GROUP_ID"
,  "HR006"."/BIC/NAME2" AS "EMERGENCY_CONTACT_NAME"
,  "HR006"."TEL_NUMBER" AS "EMERGENCY_CONTACT_NBR"
*  ,"PSA006"."EMAIL" AS "EMAIL_ADDRESS"
FROM "/BIC/AFLHR00600" "HR006"
INNER JOIN :cte_hr000 AS "HR000" ON "HR006"."EMPLOYEE" = "HR000"."EMPLOYEE"
LEFT OUTER JOIN :cte_hr105_gdfs AS "HR105G" ON "HR105G"."EMPLOYEE" = "HR006"."EMPLOYEE"
-- EMAIL not in /BIC/AFLHR00600 but in PSA/datasource ZE_MA_T_PA0006 /BIC/B0000604001
-- EMAIL in PA0006 withj SUBTY 0001 but seems seprecated when using current validity with dateto/from
*LEFT OUTER JOIN "ZVMAXREQFLHR006" "PSA006" ON (
*                                                "PSA006"."PERNR" = "HR006"."EMPLOYEE"
*                                                 AND
*                                                "PSA006"."BEGDA" = "HR006"."DATEFROM" AND
*                                                "PSA006"."ENDDA" = "HR006"."DATETO" AND
*                                                "HR006"."DATETO" >= :p_keydate AND
*                                                "HR006"."DATEFROM" <= :p_keydate
*)

WHERE (
  "HR006"."/BIC/SUBTY" = '0004' AND
  "HR006"."DATETO" >= :p_keydate AND
  "HR006"."DATEFROM" <= :p_keydate
)
;
RETURN
SELECT DISTINCT
"PHONE"."EMPLOYEE" AS SAP_EMPLOYEE_ID
,"PHONE"."GROUP_ID"
,"PHONE"."EMERGENCY_CONTACT_NAME" AS "NAME"
,'Other' AS "RELATIONSHIP"
,"PHONE"."EMERGENCY_CONTACT_NBR" AS "PHONE_NUMBER"
,"PSA006"."EMAIL" AS "EMAIL_ADDRESS"
,'Yes' AS IS_PRIMARY
FROM :cte_employee_emc as "PHONE"
LEFT OUTER JOIN "ZVMAXREQFLHR006" "PSA006"
ON ("PSA006"."PERNR" = "PHONE"."EMPLOYEE" AND
"PSA006"."SUBTY" = '4' AND
"PSA006"."BEGDA" <= :p_keydate AND
"PSA006"."ENDDA" >= :p_keydate )

;
ENDMETHOD.


METHOD GET_EMPLOYEE_NID
BY DATABASE FUNCTION FOR HDB
  LANGUAGE SQLSCRIPT
  OPTIONS READ-ONLY
  USING /BIC/AFLHC10000
  ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE
  ZCL_SEZ_INFOTYPES=>READ_HR000
    ZCL_SEZ_INFOTYPES=>READ_HR105
     ZCL_SEZ_INFOTYPES=>READ_HR001
  .
DECLARE string_list_status varchar( 1333 );
DECLARE string_list_comp_code varchar( 1333 );
string_list_status = '';
string_list_comp_code = '';
cte_column_status=
SELECT BASE_MEMBER FROM "ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE"(:p_emplstatus)
;
select STRING_AGG(BASE_MEMBER, ',' ORDER BY BASE_MEMBER) into string_list_status
FROM :cte_column_status;

cte_column_comp_code=
SELECT BASE_MEMBER AS COMP_CODE FROM "ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE"(:p_comp_code)
;
select STRING_AGG(COMP_CODE, ',' ORDER BY COMP_CODE) into string_list_comp_code
FROM :cte_column_comp_code;


cte_hr000=
SELECT * FROM "ZCL_SEZ_INFOTYPES=>READ_HR000"( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :string_list_status, P_COMP_CODE => :string_list_comp_code);

cte_hr001=
SELECT * FROM "ZCL_SEZ_INFOTYPES=>READ_HR001"( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :string_list_status, P_COMP_CODE => :string_list_comp_code);


cte_hr000_be_ro=
SELECT
"HR000"."EMPLOYEE", "HR001"."COMP_CODE"
FROM :cte_hr000 as "HR000"
INNER JOIN :cte_hr001 as "HR001" ON "HR001"."EMPLOYEE" = "HR000"."EMPLOYEE"
WHERE SUBSTRING("HR001"."COMP_CODE",1,2) IN ( 'BE','RO' )
;

cte_hr105=
SELECT
"EMPLOYEE",
"USRID"
FROM "ZCL_SEZ_INFOTYPES=>READ_HR105"( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :string_list_status, P_SUBTY => 'GDFS', P_COMP_CODE => :string_list_comp_code);

cte_employee_nid=
SELECT
  "HR100"."EMPLOYEE" as SAP_EMPLOYEE_ID,
  "HR105G"."USRID" AS "GROUP_ID",
  'Belgium' AS "COUNTRY",

  "HR100"."/BIC/RSZRR" AS "NATIONAL_ID",
  'Yes' AS "IS_PRIMARY",
  "HR000B_R"."COMP_CODE"
FROM "/BIC/AFLHC10000" "HR100"
INNER JOIN :cte_hr000_be_ro AS "HR000B_R"
ON "HR000B_R"."EMPLOYEE" = "HR100"."EMPLOYEE"
LEFT OUTER JOIN :cte_hr105 "HR105G" ON (
  "HR105G"."EMPLOYEE" = "HR100"."EMPLOYEE"
  --AND "HR105G"."SUBTY" = 'GDFS'
)
WHERE (
  "HR100"."DATETO" >= :p_keydate AND
  "HR100"."DATEFROM" <= :p_keydate
  )
;
RETURN
SELECT
SAP_EMPLOYEE_ID
,GROUP_ID
,COUNTRY
,  'National Registry Number' AS "NATIONAL_ID_CARD_TYPE"
, SUBSTRING(NATIONAL_ID,1,3)||'-'||SUBSTRING(NATIONAL_ID,4,7)||'-'||SUBSTRING(NATIONAL_ID,8,2) AS NATIONAL_ID
,IS_PRIMARY
,COMP_CODE
FROM :cte_employee_nid
;
ENDMETHOD.
ENDCLASS. "zcl_bpc_amdp_sez_employee

@EndUserText.label: 'Sezame PA000 FLHR000'
@AccessControl.authorizationCheck: #NOT_REQUIRED
@ClientDependent: false
//PA0000  /BIC/AFLHR00000
//excluding "EMPLGROUP" = '2'
//p_emplstatus = '3' ie. "active employee"
//(BE70,,PL91)
//(AE42,BE74,BE75,BE76,BE95,BE97,BR92,CL65,CZ77,DE51,DE60,DE61,FR80,GB41,IN62,IN63,IN93,IT96,RO94,SG43,TH59)
//SELECT * FROM "ZSEZ_TF_ITYP_HR000"
//( P_KEYDATE => '20221019' , P_EMPLSTATUS => '3', P_COMP_CODE => 'AE42,BE74,BE75,BE76,BE95,BE97,BR92,CL65,CZ77,DE51,DE60,DE61,FR80,GB41,IN62,IN63,IN93,IT96,RO94,SG43,TH59' );
define table function ZSEZ_TF_ITYP_HR000
with parameters p_keydate : DATS,
p_emplstatus : RSDM4NODENAME,
p_comp_code : RSDM4NODENAME
returns {
EMPLOYEE    :   /BI0/OIEMPLOYEE ;
LEGAL_FIRST_NAME    :   /BIC/OIVORNA    ;
LEGAL_LAST_NAME :   /BIC/OINACHN    ;
            
DATETO  :   /BI0/OIDATETO   ;
DATEFROM    :   /BI0/OIDATEFROM ;
SUBTY   :   /BIC/OISUBTY    ;
OBJPS   :   /BIC/OIOBJPS    ;
SEQNR   :   /BIC/OISEQNR    ;
INFTY   :   /BIC/OIINFTY    ;
CH_ON   :   /BI0/OICH_ON    ;
UNAME   :   /BIC/OIUNAME    ;
            
EMPLSTATUS  :   /BI0/OIEMPLSTATUS   ;
ACTIONREAS  :   /BI0/OIACTIONREAS   ;
ACTIONTYPE  :   /BI0/OIACTIONTYPE   ;
ACTIONREAS_DESC :    RSTXTMD    ;
ACTIONTYPE_DESC :    RSTXTMD    ;



  
}
implemented by method ZCL_SEZ_INFOTYPES=>READ_HR000;

@EndUserText.label: 'Sezame PA001 FLHR001(Org. Assignment)'
@AccessControl.authorizationCheck: #NOT_REQUIRED
@ClientDependent: false
// insert into prompt p_emplstatus : '2,3'
// SQLSCRIPT_STRING:SPLIT_TO_TABLE and BACK to STRING comma separated
//DECLARE string_list varchar( 1333 );
//string_list = '';
//cte_column=
//SELECT BASE_MEMBER FROM "ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE"(:p_emplstatus)
//;
//select STRING_AGG(BASE_MEMBER, ',' ORDER BY BASE_MEMBER) into string_list
//FROM :cte_column;
//
//cte_hr000=
//SELECT * FROM "ZCL_SEZ_INFOTYPES=>READ_HR000"( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :string_list );

//PA0001  /BIC/AFLHR00100
//excluSION OF "EMPLGROUP" = '2' done IN ZSEZ_TF_ITYP_HR000
//p_emplstatus = '3' ie. "active employee"
//SELECT * 
//FROM "ZSEZ_TF_ITYP_HR001"( P_KEYDATE => '20221019' , P_EMPLSTATUS => '3' , P_COMP_CODE => 'AE42,BE74,BE75,BE76,BE95,BE97,BR92,CL65,CZ77,DE51,DE60,DE61,FR80,GB41,IN62,IN63,IN93,IT96,RO94,SG43,TH59');
//SELECT * 
//FROM "ZCL_SEZ_INFOTYPES=>READ_HR001"( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus , P_COMP_CODE => :p_comp_code);
define table function ZSEZ_TF_ITYP_HR001
with parameters p_keydate : DATS,
p_emplstatus : RSDM4NODENAME,
p_comp_code : RSDM4NODENAME
returns {
EMPLOYEE    :   /BI0/OIEMPLOYEE ;
LEGAL_FIRST_NAME    :   /BIC/OIVORNA    ;
LEGAL_LAST_NAME :   /BIC/OINACHN    ;
// to be removed when finalized
COMP_CODE   :   /BI0/OICOMP_CODE    ;
PERS_AREA   :   /BI0/OIPERS_AREA    ;
PERS_AREA_DESC : RSTXTMD ;
PERS_SAREA  :   /BI0/OIPERS_SAREA   ;
PERS_SAREA_DESC: RSTXTSH ;
// end to be removed when finalized
EMPLGROUP   :   /BI0/OIEMPLGROUP    ;
EMPLGROUP_TEXT : RSTXTSH ;
EMPLSGROUP  :   /BI0/OIEMPLSGROUP   ;
EMPLSGROUP_TEXT : RSTXTSH ;
JOB :   /BI0/OIJOB  ;
// ZVSEZ_PLANISW
DEPARTMENT_CODE : CHAR15 ;
DEPARTMENT : RSTXTLG;
//DEPT_MGR_GID
LINE_MANAGER : /BIC/OIGROUPID ;
//ZLE_MAP
LEGALENTITY : CHAR5;
LEGAL_ENTITY_TXT : RSTXTLG;

BUS_AREA    :   /BI0/OIBUS_AREA ;

PAYRL_AREA  :   /BI0/OIPAYRL_AREA   ;
EMPLCNTRCT  :   /BI0/OIEMPLCNTRCT   ;
MAST_CCTR   :   /BI0/OIMAST_CCTR    ;
ORGUNIT :   /BI0/OIORGUNIT  ;

POSITION :  RSTXTMD ;
POSITION_TITLE:  RSTXTMD ;
HRPOSITION  :   /BI0/OIHRPOSITION   ;

DATETO  :   /BI0/OIDATETO   ;
DATEFROM    :   /BI0/OIDATEFROM ;
SUBTY   :   /BIC/OISUBTY    ;
OBJPS   :   /BIC/OIOBJPS    ;
SEQNR   :   /BIC/OISEQNR    ;
INFTY   :   /BIC/OIINFTY    ;
CH_ON   :   /BI0/OICH_ON    ;
UNAME   :   /BIC/OIUNAME    ;

EE_SNAME    :   /BI0/OIEE_SNAME ;
CO_MST_AR   :   /BI0/OICO_MST_AR    ;
COUNTRY_ID  :   /BI0/OICOUNTRY_ID   ;
HR_OBJTYPE  :   /BI0/OIHR_OBJTYPE   ;
SBMOD   :   /BIC/OISBMOD    ;


}
implemented by method ZCL_SEZ_INFOTYPES=>READ_HR001;

@EndUserText.label: 'TEST'
@AccessControl.authorizationCheck: #NOT_REQUIRED
@ClientDependent: false
// SELECT * FROM "ZSEZ_TF_ITYP_HR001_T"
//( P_KEYDATE => '20221019' , P_EMPLSTATUS => '3', P_COMP_CODE => 'BE74');

define table function ZSEZ_TF_ITYP_HR001_T
with parameters p_keydate : DATS,
p_emplstatus : RSDM4NODENAME,
p_comp_code : RSDM4NODENAME
returns {
EMPLOYEE    :   /BI0/OIEMPLOYEE ;
COMP_CODE   :   /BI0/OICOMP_CODE    ;
PERS_AREA   :   /BI0/OIPERS_AREA    ;
PERS_SAREA  :   /BI0/OIPERS_SAREA   ;
EMPLGROUP   :   /BI0/OIEMPLGROUP    ;
EMPLSGROUP  :   /BI0/OIEMPLSGROUP   ;
JOB :   /BI0/OIJOB  ;

BUS_AREA    :   /BI0/OIBUS_AREA ;

PAYRL_AREA  :   /BI0/OIPAYRL_AREA   ;
EMPLCNTRCT  :   /BI0/OIEMPLCNTRCT   ;
MAST_CCTR   :   /BI0/OIMAST_CCTR    ;
ORGUNIT :   /BI0/OIORGUNIT  ;
HRPOSITION  :   /BI0/OIHRPOSITION   ;

DATETO  :   /BI0/OIDATETO   ;
DATEFROM    :   /BI0/OIDATEFROM ;
SUBTY   :   /BIC/OISUBTY    ;
OBJPS   :   /BIC/OIOBJPS    ;
SEQNR   :   /BIC/OISEQNR    ;
INFTY   :   /BIC/OIINFTY    ;
CH_ON   :   /BI0/OICH_ON    ;
UNAME   :   /BIC/OIUNAME    ;

EE_SNAME    :   /BI0/OIEE_SNAME ;
CO_MST_AR   :   /BI0/OICO_MST_AR    ;
COUNTRY_ID  :   /BI0/OICOUNTRY_ID   ;
HR_OBJTYPE  :   /BI0/OIHR_OBJTYPE   ;
SBMOD   :   /BIC/OISBMOD    ;
  
}
implemented by method ZCL_SEZ_INFOTYPES=>READ_HR001_TEST;

@EndUserText.label: 'Sezame PA002 FLHR002'
@AccessControl.authorizationCheck: #NOT_REQUIRED
@ClientDependent: false
// insert into prompt p_emplstatus : '2,3'
// SQLSCRIPT_STRING:SPLIT_TO_TABLE and BACK to STRING comma separated
//DECLARE string_list varchar( 1333 );
//string_list = '';
//cte_column=
//SELECT BASE_MEMBER FROM "ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE"(:p_emplstatus)
//;
//select STRING_AGG(BASE_MEMBER, ',' ORDER BY BASE_MEMBER) into string_list
//FROM :cte_column;
//
//cte_hr000=
//SELECT * FROM "ZCL_SEZ_INFOTYPES=>READ_HR000"( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :string_list );

//PA0002  /BIC/AFLHR00002
//excluSION of  "EMPLGROUP" = '2' in ZSEZ_TF_ITYP_HR000
//p_emplstatus = '3' ie. "active employee"
//SELECT * FROM "ZSEZ_TF_ITYP_HR002"( P_KEYDATE => '20221019' , P_EMPLSTATUS => '3', P_COMP_CODE => 'BE74' );
//( P_KEYDATE => '20221019' , P_EMPLSTATUS => '3', P_COMP_CODE => 'AE42,BE74,BE75,BE76,BE95,BE97,BR92,CL65,CZ77,DE51,DE60,DE61,FR80,GB41,IN62,IN63,IN93,IT96,RO94,SG43,TH59' );

//( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus, P_COMP_CODE => :p_comp_code );

define table function ZSEZ_TF_ITYP_HR002
with parameters p_keydate : DATS,
p_emplstatus : RSDM4NODENAME,
p_comp_code : RSDM4NODENAME
returns {
EMPLOYEE    :   /BI0/OIEMPLOYEE ;
LEGAL_FIRST_NAME    :   /BIC/OIVORNA    ;
NICKNAME : /BIC/OIRUFNM ;
LEGAL_LAST_NAME :   /BIC/OINACHN    ;
BIRTH_NAME   :   /BIC/OINAME2    ;
NATION  :   /BI0/OINATION   ;
NATIONALITY_ISO : INTCA3 ;
NATI2   :   /BIC/OINATI2    ;
SECOND_NATIONALITY_ISO  : INTCA3 ;
COUNTRY_OF_BIRTH   :   /BIC/OIGBLND    ;
COUNTRY_OF_BIRTH_ISO  : INTCA3 ;
PLACE_OF_BIRTH : /BIC/OIGBORT ;
GENDER  :   /BI0/OIGENDER   ;
DATEBIRTH   :   /BI0/OIDATEBIRTH    ;

BUSINESS_COMMUNICAT_LANGUAGE   :  uj_dim_member    ;

MARITAL_STATUS :   /BI0/OIBP_MAR_STA   ;
DATE_OF_MARITAL_STATUS :   /BIC/OIFAMDT    ;
            
DATETO  :   /BI0/OIDATETO   ;
DATEFROM    :   /BI0/OIDATEFROM ;
SUBTY   :   /BIC/OISUBTY    ;
OBJPS   :   /BIC/OIOBJPS    ;
SEQNR   :   /BIC/OISEQNR    ;
INFTY   :   /BIC/OIINFTY    ;
CH_ON   :   /BI0/OICH_ON    ;
UNAME   :   /BIC/OIUNAME    ;

FP_TRCHILD  :   /BI0/OIFP_TRCHILD   ;
INITS   :   /BIC/OIINITS    ;

VORSW   :   /BIC/OIVORSW    ;
ANRED   :   /BIC/OIANRED    ;

NATI3   :   /BIC/OINATI3    ;

PERMO   :   /BIC/OIPERMO    ;
DECES   :   /BIC/OIDECES    ;
ZZMED   :   /BIC/OIZZMED    ;
ZZHOS   :   /BIC/OIZZHOS    ;
AGE_KYF :   /BI0/OIAGE_KYF  ;
AGE :   /BI0/OIAGE  ;
GBDEP   :   /BIC/OIGBDEP    ;


NACH2   :   /BIC/OINACH2    ;
CNAME   :   /BIC/OICNAME    ;
GBPAS   :   /BIC/OIGBPAS    ;
GBJHR   :   /BIC/OIGBJHR    ;
GBMON   :   /BIC/OIGBMON    ;
GBTAG   :   /BIC/OIGBTAG    ;

}
implemented by method ZCL_SEZ_INFOTYPES=>READ_HR002;

@EndUserText.label: 'Sezame PA0006 FLHR006(Addresses)'
@ClientDependent: false
@AccessControl.authorizationCheck: #NOT_REQUIRED

//SELECT * FROM "ZSEZ_TF_ITYP_HR006"( P_KEYDATE => '20221012' , P_EMPLSTATUS => '3', P_ANSSA => '0001', P_COMP_CODE => 'BE74' );
//0001 Permanent Residence
//0002 Temporary Residence
//0003 Home Address
//0004 Emergency Address
//0005 Mailing Address
//0007 Invalid Records

//SELECT * 
//FROM "ZSEZ_TF_ITYP_HR006"
//( P_KEYDATE => '20221012' , P_EMPLSTATUS => '3', P_ANSSA => '0001,0002,0003,0004,0005,0006,0007', P_COMP_CODE => 'AE42,BE74,BE75,BE76,BE95,BE97,BR92,CL65,CZ77,DE51,DE60,DE61,FR80,GB41,IN62,IN63,IN93,IT96,RO94,SG43,TH59' );
define table function ZSEZ_TF_ITYP_HR006
with parameters p_keydate : DATS,
p_emplstatus : RSDM4NODENAME,
p_ANSSA : RSDM4NODENAME,
p_comp_code : RSDM4NODENAME
returns {

COUNTRY :   /BI0/OICOUNTRY  ;
EMPLOYEE    :   /BI0/OIEMPLOYEE ;
LEGAL_FIRST_NAME    :   /BIC/OIVORNA    ;
LEGAL_LAST_NAME :   /BIC/OINACHN    ;
GROUP_ID : /BIC/OIGROUPID;
ADDRESS_TYPE   :   RSTXTMD    ;
STREET   :   ADDR100    ;
//LOCATION   :   /BIC/OILOCAT    ;
HOUSE_NUMBER   :   /BIC/OIHSNMR    ;
APARTMENT   :   /BIC/OIPOSTA    ;
POSTAL_CODE   :   /BI0/OIPOSTAL_CD    ;
CITY   :   /BIC/OIORT01    ;
DISTANCE    :   /BI0/OIDISTANCE ;
COMPANY_HOUSING  : CHAR2 ;

MEDST   :   /BI0/OIMEDST    ;

TEL_NUMBER  :   /BI0/OITEL_NUMBER   ;

NAME2   :   /BIC/OINAME2    ;
WKWNG   :   /BIC/OIWKWNG    ;
BUSRT   :   /BIC/OIBUSRT    ;
REGION  :   /BI0/OIREGION   ;
ENTK2   :   /BIC/OIENTK2    ;
COUNTY_CDE  :   /BI0/OICOUNTY_CDE   ;
RCTVC   :   /BIC/OIRCTVC    ;
ORT02   :   /BIC/OIORT02    ;
TEL_PH  :   /BIC/OITEL_PH   ;
GSM :   /BIC/OIGSM  ;
COMP_CODE : /BI0/OICOMP_CODE;

SUBTY   :   /BIC/OISUBTY    ;
OBJPS   :   /BIC/OIOBJPS    ;
DATETO  :   /BI0/OIDATETO   ;
DATEFROM    :   /BI0/OIDATEFROM ;
SEQNR   :   /BIC/OISEQNR    ;
INFTY   :   /BIC/OIINFTY    ;
CH_ON   :   /BI0/OICH_ON    ;
UNAME   :   /BIC/OIUNAME    ;

  
}
implemented by method ZCL_SEZ_INFOTYPES=>READ_HR006;

@EndUserText.label: 'Sez PA007 FLHC007 (Planned Working Time)'
@AccessControl.authorizationCheck: #NOT_REQUIRED
@ClientDependent: false
// PA0007 /BIC/AFLHR00700
//SELECT * 
//FROM "ZSEZ_TF_ITYP_HR007"
//( P_KEYDATE => '20221012' , P_EMPLSTATUS => '3' , P_COMP_CODE => 'AE42,BE74,BE75,BE76,BE95,BE97,BR92,CL65,CZ77,DE51,DE60,DE61,FR80,GB41,IN62,IN63,IN93,IT96,RO94,SG43,TH59');

define table function ZSEZ_TF_ITYP_HR007
with parameters p_keydate : DATS,
p_emplstatus : RSDM4NODENAME,
p_comp_code : RSDM4NODENAME
returns {
EMPLOYEE    :   /BI0/OIEMPLOYEE ;
LEGAL_FIRST_NAME    :   /BIC/OIVORNA    ;
LEGAL_LAST_NAME :   /BIC/OINACHN    ;

STANDARD_WEEKLY_HOURS   :   /BIC/OIWOSTD    ;
COMP_CODE : /BI0/OICOMP_CODE ;

//SCHKZ   :   /BIC/OISCHKZ    ;
//ZTERF   :   /BIC/OIZTERF    ;
//EMPCT   :   /BIC/OIEMPCT    ;
//MOSTD   :   /BIC/OIMOSTD    ;
//
//ARBST   :   /BIC/OIARBST    ;
//WKWDY   :   /BIC/OIWKWDY    ;
//JRSTD   :   /BIC/OIJRSTD    ;
//TEILK   :   /BIC/OITEILK    ;

SUBTY   :   /BIC/OISUBTY    ;
OBJPS   :   /BIC/OIOBJPS    ;
DATETO  :   /BI0/OIDATETO   ;
DATEFROM    :   /BI0/OIDATEFROM ;
SEQNR   :   /BIC/OISEQNR    ;
INFTY   :   /BIC/OIINFTY    ;
CH_ON   :   /BI0/OICH_ON    ;
UNAME   :   /BIC/OIUNAME    ;
  
}
implemented by method ZCL_SEZ_INFOTYPES=>READ_HR007;

@EndUserText.label: 'Sezame PA008 FLHC008 (Basic Pay)'
@AccessControl.authorizationCheck: #NOT_REQUIRED
@ClientDependent: false
// insert into prompt p_emplstatus : '2,3'
// SQLSCRIPT_STRING:SPLIT_TO_TABLE and BACK to STRING comma separated
//DECLARE string_list varchar( 1333 );
//string_list = '';
//cte_column=
//SELECT BASE_MEMBER FROM "ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE"(:p_emplstatus)
//;
//select STRING_AGG(BASE_MEMBER, ',' ORDER BY BASE_MEMBER) into string_list
//FROM :cte_column;
//
//cte_hr000=
//SELECT  FROM "ZCL_SEZ_INFOTYPES=>READ_HR000"( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :string_list );

//PA0008  /BIC/AFLHC00800
//excluSION OF "EMPLGROUP" = '2' done IN ZSEZ_TF_ITYP_HR000
//p_emplstatus = '3' ie. "active employee"
//SELECT * 
//FROM "ZSEZ_TF_ITYP_HR008"
//( P_KEYDATE => '20221019' , P_EMPLSTATUS => '3', P_COMP_CODE => 'AE42,BE74,BE75,BE76,BE95,BE97,BR92,CL65,CZ77,DE51,DE60,DE61,FR80,GB41,IN62,IN63,IN93,IT96,RO94,SG43,TH59' );

define table function ZSEZ_TF_ITYP_HR008
with parameters p_keydate : DATS,
p_emplstatus : RSDM4NODENAME,
p_comp_code  : RSDM4NODENAME
returns {
EMPLOYEE    :   /BI0/OIEMPLOYEE ;
LEGAL_FIRST_NAME    :   /BIC/OIVORNA    ;
LEGAL_LAST_NAME :   /BIC/OINACHN    ;

PAYSCALETY  :   /BI0/OIPAYSCALETY   ;
PAYSCALEAR  :   /BI0/OIPAYSCALEAR   ;
PAYSCALEGR  :   /BI0/OIPAYSCALEGR   ;
PAYSCALELV  :   /BI0/OIPAYSCALELV   ;
STVOR   :   /BIC/OISTVOR    ;
CURRENCY    :   /BI0/OICURRENCY ;
PAYPCT  :   /BI0/OIPAYPCT   ;
PAYPCT_CHA  :   /BI0/OIPAYPCT_CHA   ;
VGLSV   :   /BIC/OIVGLSV    ;
ANSALARY    :   /BI0/OIANSALARY ;
COUNTRY_ID  :   /BI0/OICOUNTRY_ID   ;
PREAS   :   /BIC/OIPREAS    ;
ESGFORCAP   :   /BI0/OIESGFORCAP    ;
BET01 : /BIC/OIBET01 ;


DATETO  :   /BI0/OIDATETO   ;
DATEFROM    :   /BI0/OIDATEFROM ;
SUBTY   :   /BIC/OISUBTY    ;
OBJPS   :   /BIC/OIOBJPS    ;
SEQNR   :   /BIC/OISEQNR    ;
INFTY   :   /BIC/OIINFTY    ;
CH_ON   :   /BI0/OICH_ON    ;
UNAME   :   /BIC/OIUNAME    ;  
}
implemented by method ZCL_SEZ_INFOTYPES=>READ_HR008;

@EndUserText.label: 'Sezame PA016 FLHR016 (Contract Elements)'
@AccessControl.authorizationCheck: #NOT_REQUIRED
@ClientDependent: false

// PA0016 /BIC/AFLHR01600
//SELECT * 
//FROM "ZSEZ_TF_ITYP_HR016"
//( P_KEYDATE => '20221012' , P_EMPLSTATUS => '3' , P_COMP_CODE => 'AE42,BE74,BE75,BE76,BE95,BE97,BR92,CL65,CZ77,DE51,DE60,DE61,FR80,GB41,IN62,IN63,IN93,IT96,RO94,SG43,TH59');
//P_COMP_CODE => 'AE42,BE74,BE75,BE76,BE95,BE97,BR92,CL65,CZ77,DE51,DE60,DE61,FR80,GB41,IN62,IN63,IN93,IT96,RO94,SG43,TH59'
//SELECT * 
//FROM "ZCL_SEZ_INFOTYPES=>READ_HR016"( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus , P_COMP_CODE => :p_comp_code);
define table function ZSEZ_TF_ITYP_HR016
with parameters p_keydate : DATS,
p_emplstatus : RSDM4NODENAME,
p_comp_code : RSDM4NODENAME
returns {
EMPLOYEE    :   /BI0/OIEMPLOYEE ;
LEGAL_FIRST_NAME    :   /BIC/OIVORNA    ;
LEGAL_LAST_NAME :   /BIC/OINACHN    ;

CTEDT   :   /BIC/OIDAT08    ;
KONDT   :   /BIC/OIDAT07    ;
CNTRCTTYPE  :   /BIC/OIDAT01    ;
CONTRACT_TYPE : RSTXTSH ;
ENTRYDATE   :   /BI0/OIENTRYDATE    ;

COMP_CODE : /BI0/OICOMP_CODE ;


//WTTKL   :   /BIC/OIWTTKL    ;
//LFZFR   :   /BIC/OILFZFR    ;
//LFZZH   :   /BIC/OILFZZH    ;
//LFZSO   :   /BIC/OILFZSO    ;
//KGZFR   :   /BIC/OIKGZFR    ;
//KGZZH   :   /BIC/OIKGZZH    ;
//PRBZT   :   /BIC/OIPRBZT    ;
//PRBEH   :   /BIC/OIPRBEH    ;
//KDGFR   :   /BIC/OIKDGFR    ;
//KDGF2   :   /BIC/OIKDGF2    ;
//ARBER   :   /BIC/OIARBER    ;
//
//KONSL   :   /BIC/OIKONSL    ;
//
//CTBEG   :   /BIC/OICTBEG    ;
//CTNUM   :   /BIC/OICTNUM    ;
//EMPLGROUP   :   /BI0/OIEMPLGROUP    ;
//EMPLSGROUP  :   /BI0/OIEMPLSGROUP   ;
//WRKPL   :   /BIC/OIWRKPL    ;


SUBTY   :   /BIC/OISUBTY    ;
OBJPS   :   /BIC/OIOBJPS    ;
DATETO  :   /BI0/OIDATETO   ;
DATEFROM    :   /BI0/OIDATEFROM ;
SEQNR   :   /BIC/OISEQNR    ;
INFTY   :   /BIC/OIINFTY    ;
CH_ON   :   /BI0/OICH_ON    ;
UNAME   :   /BIC/OIUNAME    ;


  
}
implemented by method  ZCL_SEZ_INFOTYPES=>READ_HR016;

@EndUserText.label: 'Sezame PA032 FLHR032 ( (Internal Data)'
@AccessControl.authorizationCheck: #NOT_REQUIRED
@ClientDependent: false
// PA0032 /BIC/AFLHR03200
//SELECT * 
//FROM "ZSEZ_TF_ITYP_HR032"
//( P_KEYDATE => '20221019' , P_EMPLSTATUS => '3' , P_COMP_CODE => 'AE42,BE74,BE75,BE76,BE95,BE97,BR92,CL65,CZ77,DE51,DE60,DE61,FR80,GB41,IN62,IN63,IN93,IT96,RO94,SG43,TH59');
//SELECT * FROM "ZCL_SEZ_INFOTYPES=>READ_HR032"( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus , P_COMP_CODE => :p_comp_code);

define table function ZSEZ_TF_ITYP_HR032
with parameters p_keydate : DATS,
p_emplstatus : RSDM4NODENAME,
p_comp_code : RSDM4NODENAME
returns {
EMPLOYEE    :   /BI0/OIEMPLOYEE ;
LEGAL_FIRST_NAME    :   /BIC/OIVORNA    ;
LEGAL_LAST_NAME :   /BIC/OINACHN    ;

BUILDING    :   /BI0/OIBUILDING ;

COMP_CODE : /BI0/OICOMP_CODE ;

//PNALT   :   /BIC/OIPNALT    ;
//WAUSW   :   /BIC/OIWAUSW    ;
//PKWRG   :   /BIC/OIPKWRG    ;
//PKWWR   :   /BIC/OIPKWWR    ;
//KFZKZ   :   /BIC/OIKFZKZ    ;
//CURRENCY    :   /BI0/OICURRENCY ;
//ASTNO   :   /BIC/OIASTNO    ;
//
//MAINTROOM   :   /BI0/OIMAINTROOM    ;
//TEL01   :   /BIC/OITEL01    ;
//TEL02   :   /BIC/OITEL02    ;

SUBTY   :   /BIC/OISUBTY    ;
OBJPS   :   /BIC/OIOBJPS    ;
DATETO  :   /BI0/OIDATETO   ;
DATEFROM    :   /BI0/OIDATEFROM ;
SEQNR   :   /BIC/OISEQNR    ;
INFTY   :   /BIC/OIINFTY    ;
CH_ON   :   /BI0/OICH_ON    ;
UNAME   :   /BIC/OIUNAME    ;


}
implemented by method ZCL_SEZ_INFOTYPES=>READ_HR032;

@EndUserText.label: 'Sezame PA041 FLHR041 (Date Specs)'
@AccessControl.authorizationCheck: #NOT_REQUIRED
@ClientDependent: false
// PA0041 /BIC/AFLHR04100
//SELECT * FROM "ZCL_SEZ_INFOTYPES=>READ_HR041"( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus , P_COMP_CODE => :p_comp_code);
//SELECT * 
//FROM "ZSEZ_TF_ITYP_HR041"
//( P_KEYDATE => '20221019' , P_EMPLSTATUS => '3' , P_COMP_CODE => 'AE42,BE74,BE75,BE76,BE95,BE97,BR92,CL65,CZ77,DE51,DE60,DE61,FR80,GB41,IN62,IN63,IN93,IT96,RO94,SG43,TH59');
define table function ZSEZ_TF_ITYP_HR041
with parameters p_keydate : DATS,
p_emplstatus : RSDM4NODENAME,
p_comp_code : RSDM4NODENAME
returns {
EMPLOYEE    :   /BI0/OIEMPLOYEE ;
LEGAL_FIRST_NAME    :   /BIC/OIVORNA    ;
LEGAL_LAST_NAME :   /BIC/OINACHN    ;

DAT01   :   /BIC/OIDAT01    ;
DAT02   :   /BIC/OIDAT02    ;

COMP_CODE : /BI0/OICOMP_CODE ;
//DAR01   :   /BIC/OIDAR01    ;

//DAR02   :   /BIC/OIDAR02    ;

//DAR03   :   /BIC/OIDAR03    ;
//DAT03   :   /BIC/OIDAT03    ;
//DAR04   :   /BIC/OIDAR04    ;
//DAT04   :   /BIC/OIDAT04    ;
//DAR05   :   /BIC/OIDAR05    ;
//DAT05   :   /BIC/OIDAT05    ;
//DAR06   :   /BIC/OIDAR06    ;
//DAT06   :   /BIC/OIDAT06    ;
//DAR07   :   /BIC/OIDAR07    ;
//DAT07   :   /BIC/OIDAT07    ;
//DAR08   :   /BIC/OIDAR08    ;
//DAT08   :   /BIC/OIDAT08    ;
//DAR09   :   /BIC/OIDAR09    ;
//DAT09   :   /BIC/OIDAT09    ;
//DAR10   :   /BIC/OIDAR10    ;
//DAT10   :   /BIC/OIDAT10    ;
//DAR11   :   /BIC/OIDAR11    ;
//DAT11   :   /BIC/OIDAT11    ;
//DAR12   :   /BIC/OIDAR12    ;
//DAT12   :   /BIC/OIDAT12    ;
ZZJUBILEE   :   /BIC/OIZZJUBILEE    ;
ZZPENSION   :   /BIC/OIZZPENSION    ;
ZZSIMUL :   /BIC/OIZZSIMUL  ;


SUBTY   :   /BIC/OISUBTY    ;
OBJPS   :   /BIC/OIOBJPS    ;
DATETO  :   /BI0/OIDATETO   ;
DATEFROM    :   /BI0/OIDATEFROM ;
SEQNR   :   /BIC/OISEQNR    ;
INFTY   :   /BIC/OIINFTY    ;
CH_ON   :   /BI0/OICH_ON    ;
UNAME   :   /BIC/OIUNAME    ;

  
}
implemented by method ZCL_SEZ_INFOTYPES=>READ_HR041;

@EndUserText.label: 'Sezame PA0101 FLHC101(Tax B)'
@AccessControl.authorizationCheck: #NOT_REQUIRED
@ClientDependent: false
// PA0101 
//SELECT * 
//FROM "ZSEZ_TF_ITYP_HR101"
//( P_KEYDATE => '20221012' , P_EMPLSTATUS => '3' , P_COMP_CODE => 'AE42,BE74,BE75,BE76,BE95,BE97,BR92,CL65,CZ77,DE51,DE60,DE61,FR80,GB41,IN62,IN63,IN93,IT96,RO94,SG43,TH59');
//SELECT * FROM "ZCL_SEZ_INFOTYPES=>READ_HR315"( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus , P_COMP_CODE => :p_comp_code);

define table function ZSEZ_TF_ITYP_HR101
with parameters p_keydate : DATS,
p_emplstatus : RSDM4NODENAME,
p_comp_code : RSDM4NODENAME
returns {
EMPLOYEE    :   /BI0/OIEMPLOYEE ;

LEGAL_FIRST_NAME    :   /BIC/OIVORNA    ;
LEGAL_LAST_NAME :   /BIC/OINACHN    ;

DISABILITY   :   /BIC/OIBVWMV    ;

//BVKTL   :   /BIC/OIBVKTL    ;
//BVKKA   :   /BIC/OIBVKKA    ;
//BVAKA   :   /BIC/OIBVAKA    ;
//BVMKT   :   /BIC/OIBVMKT    ;
//BVETL   :   /BIC/OIBVETL    ;
//BVEKI   :   /BIC/OIBVEKI    ;
//BVECH   :   /BIC/OIBVECH    ;
//BVEMV   :   /BIC/OIBVEMV    ;
//
//BVWWE   :   /BIC/OIBVWWE    ;
//BVATL   :   /BIC/OIBVATL    ;
//BVAMT   :   /BIC/OIBVAMT    ;
//BP_MAR_STA  :   /BI0/OIBP_MAR_STA   ;
//BVTAX   :   /BIC/OIBVTAX    ;
//BVVAK   :   /BIC/OIBVVAK    ;
//BVFSV   :   /BIC/OIBVFSV    ;
//CURRENCY    :   /BI0/OICURRENCY ;
//BVPCT   :   /BIC/OIBVPCT    ;
//BVMUT   :   /BIC/OIBVMUT    ;
//BVEPC   :   /BIC/OIBVEPC    ;
//BVEXC   :   /BIC/OIBVEXC    ;
//BVBOR   :   /BIC/OIBVBOR    ;
//BVRES   :   /BIC/OIBVRES    ;
//BV281   :   /BIC/OIBV281    ;
//BVCOA   :   /BIC/OIBVCOA    ;
//NR65S   :   /BIC/OINR65S    ;
//N65SD   :   /BIC/OIN65SD    ;
//TAXDE   :   /BIC/OITAXDE    ;

COMP_CODE   :   /BI0/OICOMP_CODE    ;

DATETO  :   /BI0/OIDATETO   ;
DATEFROM    :   /BI0/OIDATEFROM ;
SUBTY   :   /BIC/OISUBTY    ;
OBJPS   :   /BIC/OIOBJPS    ;
SEQNR   :   /BIC/OISEQNR    ;
INFTY   :   /BIC/OIINFTY    ;
CH_ON   :   /BI0/OICH_ON    ;
UNAME   :   /BIC/OIUNAME    ;


  
}
implemented by method ZCL_SEZ_INFOTYPES=>READ_HR101;

@EndUserText.label: 'Sezame PA0105 FLHR105(Communications)'
@AccessControl.authorizationCheck: #NOT_REQUIRED
@ClientDependent: false
// insert into prompt p_emplstatus : '2,3'
// SQLSCRIPT_STRING:SPLIT_TO_TABLE and BACK to STRING comma separated
//DECLARE string_list varchar( 1333 );
//string_list = '';
//cte_column=
//SELECT BASE_MEMBER FROM "ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE"(:p_emplstatus)
//;
//select STRING_AGG(BASE_MEMBER, ',' ORDER BY BASE_MEMBER) into string_list
//FROM :cte_column;
//
//cte_hr000=
//SELECT  FROM "ZCL_SEZ_INFOTYPES=>READ_HR000"( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :string_list_status );

//PA0105  /BIC/AFLHR10500
//excluSION OF "EMPLGROUP" = '2' done IN ZSEZ_TF_ITYP_HR000
//p_emplstatus = '3' ie. "active employee" P_SUBTY = '010' '020' 'GDFS' 'CELL'
//SELECT * FROM "ZSEZ_TF_ITYP_HR005"( P_KEYDATE => '20221019' , P_EMPLSTATUS => '3', P_COMP_CODE => 'BE74', P_SUBTY => 'GDFS');
//SELECT * FROM "ZSEZ_TF_ITYP_HR005"( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus, P_COMP_CODE => :p_comp_code, P_SUBTY => :p_subty);
// GDFS for Group_Id '0010' for email, '0020' fixed line phone number CELL is cell
define table function ZSEZ_TF_ITYP_HR105
with parameters p_keydate : DATS,
p_emplstatus : RSDM4NODENAME,
p_comp_code : RSDM4NODENAME,
P_SUBTY   :   /BIC/OISUBTY 
returns {
EMPLOYEE    :   /BI0/OIEMPLOYEE ;
LEGAL_FIRST_NAME    :   /BIC/OIVORNA    ;
LEGAL_LAST_NAME :   /BIC/OINACHN    ;

USRID : /BIC/OIUSRID;
USRIDLONG : /BIC/OIUSRIDLONG;

DATETO  :   /BI0/OIDATETO   ;
DATEFROM    :   /BI0/OIDATEFROM ;
SUBTY   :   /BIC/OISUBTY    ;
OBJPS   :   /BIC/OIOBJPS    ;
SEQNR   :   /BIC/OISEQNR    ;
INFTY   :   /BIC/OIINFTY    ;
CH_ON   :   /BI0/OICH_ON    ;
UNAME   :   /BIC/OIUNAME    ;  
}
implemented by method ZCL_SEZ_INFOTYPES=>READ_HR105;

@EndUserText.label: 'Sezame PA0315 FLHR315(Cats Sender Info)'
@AccessControl.authorizationCheck: #NOT_REQUIRED
@ClientDependent: false
// PA0315 /BIC/AFLHR31500
//SELECT * 
//FROM "ZSEZ_TF_ITYP_HR315"
//( P_KEYDATE => '20221012' , P_EMPLSTATUS => '3' , P_COMP_CODE => 'AE42,BE74,BE75,BE76,BE95,BE97,BR92,CL65,CZ77,DE51,DE60,DE61,FR80,GB41,IN62,IN63,IN93,IT96,RO94,SG43,TH59');
//SELECT * FROM "ZCL_SEZ_INFOTYPES=>READ_HR315"( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus , P_COMP_CODE => :p_comp_code);
define table function ZSEZ_TF_ITYP_HR315
with parameters p_keydate : DATS,
p_emplstatus : RSDM4NODENAME,
p_comp_code : RSDM4NODENAME
returns {
EMPLOYEE    :   /BI0/OIEMPLOYEE ;
LEGAL_FIRST_NAME    :   /BIC/OIVORNA    ;
LEGAL_LAST_NAME :   /BIC/OINACHN    ;


OVHLINE :   /BIC/OIOVHLINE  ;
ZZOVHLINE   :   /BIC/OIZZOVHLINE    ;
SEND_CCTR   :   /BI0/OISEND_CCTR    ;
CO_AREA :   /BI0/OICO_AREA  ;
ACTTYPE :   /BI0/OIACTTYPE  ;

VENDOR  :   /BI0/OIVENDOR   ;
OI_EBELN    :   /BI0/OIOI_EBELN ;
OI_EBELP    :   /BI0/OIOI_EBELP ;
ZMM_SHTXT   :   /BIC/OIZMM_SHTXT    ;
ZZBL_EM :   /BIC/OIZZBL_EM  ;
ZZBL_EM_D   :   /BIC/OIZZBL_EM_D    ;
ZACCNT  :   /BIC/OIZACCNT   ;

COMP_CODE   :   /BI0/OICOMP_CODE    ;

DATETO  :   /BI0/OIDATETO   ;
DATEFROM    :   /BI0/OIDATEFROM ;
SUBTY   :   /BIC/OISUBTY    ;
OBJPS   :   /BIC/OIOBJPS    ;
SEQNR   :   /BIC/OISEQNR    ;

INFTY   :   /BIC/OIINFTY    ;
CH_ON   :   /BI0/OICH_ON    ;
UNAME   :   /BIC/OIUNAME    ;

  
}
implemented by method ZCL_SEZ_INFOTYPES=>READ_HR315;

@EndUserText.label: 'Sezame PA0351 FLHC351'
@AccessControl.authorizationCheck: #NOT_REQUIRED
@ClientDependent: false
// insert into prompt p_emplstatus : '2,3'
// SQLSCRIPT_STRING:SPLIT_TO_TABLE and BACK to STRING comma separated
//DECLARE string_list varchar( 1333 );
//string_list = '';
//cte_column=
//SELECT BASE_MEMBER FROM "ZCL_BPC_AMDP_SPLIT_STRG=>STRG_TO_TABLE"(:p_emplstatus)
//;
//select STRING_AGG(BASE_MEMBER, ',' ORDER BY BASE_MEMBER) into string_list
//FROM :cte_column;
//
//cte_hr000=
//SELECT * FROM "ZCL_SEZ_INFOTYPES=>READ_HR000"( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :string_list );

//PA0351  /BIC/AFLHC35100
//excluSION OF "EMPLGROUP" = '2' done IN ZSEZ_TF_ITYP_HR000
//p_emplstatus = '3' ie. "active employee"
//SELECT * FROM "ZSEZ_TF_ITYP_HR351"
//( P_KEYDATE => '20221019' , P_EMPLSTATUS => '3', P_COMP_CODE => 'AE42,BE74,BE75,BE76,BE95,BE97,BR92,CL65,CZ77,DE51,DE60,DE61,FR80,GB41,IN62,IN63,IN93,IT96,RO94,SG43,TH59');
//SELECT * FROM "ZCL_SEZ_INFOTYPES=>READ_HR351"( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus , P_COMP_CODE => :p_comp_code);
define table function ZSEZ_TF_ITYP_HR351
with parameters p_keydate : DATS,
p_emplstatus : RSDM4NODENAME,
p_comp_code : RSDM4NODENAME
returns {
EMPLOYEE    :   /BI0/OIEMPLOYEE ;
LEGAL_FIRST_NAME    :   /BIC/OIVORNA    ;
LEGAL_LAST_NAME :   /BIC/OINACHN    ;

PRINTING_LANGUAGE :   /BIC/OILAEDC    ;

DATETO  :   /BI0/OIDATETO   ;
DATEFROM    :   /BI0/OIDATEFROM ;
SUBTY   :   /BIC/OISUBTY    ;
OBJPS   :   /BIC/OIOBJPS    ;
SEQNR   :   /BIC/OISEQNR    ;
INFTY   :   /BIC/OIINFTY    ;
CH_ON   :   /BI0/OICH_ON    ;
UNAME   :   /BIC/OIUNAME    ;

ATP1A   :   /BIC/OIATP1A    ;
ATP2A   :   /BIC/OIATP2A    ;
ATP3A   :   /BIC/OIATP3A    ;
DE03C   :   /BIC/OIDE03C    ;
EDVAF   :   /BIC/OIEDVAF    ;
// /BIC/LAEDC    ; 
ACBRN   :   /BIC/OIACBRN    ;
CDEC4   :   /BIC/OICDEC4    ;
T171C   :   /BIC/OIT171C    ;
ATSCE   :   /BIC/OIATSCE    ;
DBATD   :   /BIC/OIDBATD    ;
FNATD   :   /BIC/OIFNATD    ;
TYATC   :   /BIC/OITYATC    ;
NUMDAY  :   /BI0/OINUMDAY   ;
HSEMB   :   /BIC/OIHSEMB    ;
H9ATC   :   /BIC/OIH9ATC    ;
PH_DELFLAG  :   /BI0/OIPH_DELFLAG   ;
ATTRN   :   /BIC/OIATTRN    ;
MTATV   :   /BIC/OIMTATV    ;
MTSOV   :   /BIC/OIMTSOV    ;
SPEPV   :   /BIC/OISPEPV    ;


}
implemented by method ZCL_SEZ_INFOTYPES=>READ_HR351;

@EndUserText.label: 'Sezame CostCenter Extr from Employee'
@ClientDependent: false
@AccessControl.authorizationCheck: #NOT_REQUIRED
//SELECT * FROM ZSVEZ_TF_COSTCENTER('20221020','3','0001,0002,0003,0004,0005,0006,0007', 'BE74');
//SELECT * 
//FROM "ZSVEZ_TF_COSTCENTER"
//( P_KEYDATE => '20221019' , P_EMPLSTATUS => '3', P_ANSSA => '0001,0002,0003,0004,0005,0006,0007', P_COMP_CODE => 'AE42,BE74,BE75,BE76,BE95,BE97,BR92,CL65,CZ77,DE51,DE60,DE61,FR80,GB41,IN62,IN63,IN93,IT96,RO94,SG43,TH59' );

define table function ZSVEZ_TF_COSTCENTER
with parameters p_keydate : DATS,
p_emplstatus : RSDM4NODENAME,
p_ANSSA : RSDM4NODENAME,
p_comp_code : RSDM4NODENAME
returns {
SEZAME_COST_CENTER_ID : uj_dim_member ;
STATUS : CHAR1 ;
EFFECTIVE_AS_OF : uj_dim_member ;
COSTCENTER : /BI0/OICOSTCENTER;
LEGAL_ENTITY : /BI0/OIBPCSTEPTXT;
NAME : RSTXTMD;
}
implemented by method ZCL_BPC_AMDP_SEZ_EMPLOYEE=>GET_COSTCENTER;

*&---------------------------------------------------------------------*
*& Report ZSEZ_FILES
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT zsez_files MESSAGE-ID geocoding.

TABLES: /bi0/semplstatus, /bic/sanssa, /bi0/pcomp_code.

SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME TITLE TEXT-001.
PARAMETERS: p_keydt TYPE dats DEFAULT sy-datum OBLIGATORY.
SELECTION-SCREEN SKIP 1.
SELECT-OPTIONS:
            so_empls  FOR /bi0/semplstatus-emplstatus OBLIGATORY DEFAULT '3',
            so_anssa  FOR /bic/sanssa-/bic/anssa OBLIGATORY DEFAULT '0001',
            so_ccycd FOR /bi0/pcomp_code-comp_code OBLIGATORY DEFAULT 'BE74'.
SELECTION-SCREEN END OF BLOCK b1.

*SELECTION-SCREEN BEGIN OF BLOCK b2 WITH FRAME TITLE TEXT-002.


*PARAMETERS: p_backg RADIOBUTTON GROUP grp1 USER-COMMAND chk.
*PARAMETERS: p_foreg RADIOBUTTON GROUP grp1.
*PARAMETERS: p_alv RADIOBUTTON GROUP grp1 DEFAULT 'X'.


*SELECTION-SCREEN END OF BLOCK b2.

SELECTION-SCREEN BEGIN OF BLOCK b3 WITH FRAME TITLE TEXT-003.

*PARAMETERS: p_dir TYPE char1024 LOWER CASE MODIF ID 001. "PC or application server
*SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 3(30) TEXT-012 FOR FIELD p_empld.   "Employee Data
SELECTION-SCREEN POSITION 33.
PARAMETERS: p_empld RADIOBUTTON GROUP grp2 DEFAULT 'X'.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 3(30) TEXT-013 FOR FIELD p_empla.   "Employee Addresses(BE)
SELECTION-SCREEN POSITION 33.
PARAMETERS: p_empla RADIOBUTTON GROUP grp2. "Employee Addresses(BE)
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 3(30) TEXT-014 FOR FIELD p_empln.   "Employee NIC(BE)
SELECTION-SCREEN POSITION 33.
PARAMETERS: p_empln RADIOBUTTON GROUP grp2. "Employee NIC(BE)
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 3(30) TEXT-015 FOR FIELD p_emple.   "Employee Emergency Contact
SELECTION-SCREEN POSITION 33.
PARAMETERS: p_emple RADIOBUTTON GROUP grp2. "Employee Emergency Contact
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 3(30) TEXT-016 FOR FIELD p_emplc.   "CostCenters
SELECTION-SCREEN POSITION 33.
PARAMETERS: p_emplc RADIOBUTTON GROUP grp2. "CostCenters
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN END OF BLOCK b3.

DATA: lv_datasel TYPE c LENGTH 1 VALUE '',
            m3  TYPE string,
            l_title  TYPE sy-title.

DATA: lv_emplst TYPE rsdm4nodename.

DATA: string_list_emplst TYPE string,
      string_list_anssa TYPE string,
      string_list_comp_code TYPE string,
      txt TYPE string.
* not used - just for example
DATA(lv_where_emplst) = cl_shdb_seltab=>combine_seltabs(
    it_named_seltabs = VALUE #(
    ( name = 'EMPLSTATUS' dref = REF #( so_empls[] ) )
     )
    ).

DATA(lv_where_anssa) = cl_shdb_seltab=>combine_seltabs(
    it_named_seltabs = VALUE #(
    ( name = 'ANSSA' dref = REF #( so_anssa[] ) )
     )
    ).

DATA(lv_where_comp_code) = cl_shdb_seltab=>combine_seltabs(
    it_named_seltabs = VALUE #(
    ( name = 'COMP_CODE' dref = REF #( so_ccycd[] ) )
     )
    ).
* end not used

DATA: ls_rec                TYPE REF TO data,
      lt_databup            TYPE REF TO data.

FIELD-SYMBOLS:  <itab_file> TYPE STANDARD TABLE,
               <ls_rec>     TYPE any,
               <lt_databup> TYPE STANDARD TABLE.

* files names prefixes
CONSTANTS:
c_fempld TYPE string VALUE 'EMPLOYEE_DATA',
c_fempla TYPE string VALUE 'EMPLOYEE_ADDRESSES_BE',
c_fempln TYPE string VALUE 'EMPLOYEE_NIC_BE',
c_femple TYPE string VALUE 'EMPLOYEE_EMERGENCY_CONTACTS',
c_femplc TYPE string VALUE 'EMPLOYEE_DATA_CCTR'.

INITIALIZATION.

DATA: lv_selected_flr TYPE string,
      p_alv TYPE C LENGTH 1 VALUE 'X'.

*AT SELECTION-SCREEN OUTPUT.
** check authority: Customizing Authority is needed here
*  AUTHORITY-CHECK OBJECT 'S_TCODE'
*    ID 'TCD' FIELD 'ZSEZ_FILES'.
*  IF sy-subrc <> 0.
*    MESSAGE e014 WITH sy-repid.
*    EXIT.
*  ENDIF.
* could also be but then maintain SE93 ZSEZ_FILES with dedicated authorization-object
* AUTHORITY-CHECK OBJECT 'S_TCODE'
*         ID 'TCD' FIELD sy-tcode.
*IF sy-subrc NE 0.
*  MESSAGE e077(s#) WITH sy-tcode.
*ENDIF.

*AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_dir.
*  IF p_foreg = abap_true.
*  cl_gui_frontend_services=>directory_browse(
*      CHANGING
*        selected_folder      = lv_selected_flr
*      EXCEPTIONS
*        OTHERS               = 4 ).
*  IF lv_selected_flr IS NOT INITIAL.
*    p_dir = lv_selected_flr.
*  ENDIF.
*  ELSEIF p_backg = abap_true.
*    p_dir = '/usr/sap/TPB/archive/BW_TEMP'.
*
*  ENDIF.
START-OF-SELECTION.
CLEAR : string_list_emplst, string_list_anssa, string_list_comp_code.


SELECT DISTINCT emplstatus
FROM /bi0/semplstatus
INTO TABLE @DATA(t_emplst)
WHERE emplstatus IN @so_empls ORDER BY emplstatus.

*DATA(t_emplst) = FILTER #( t_emplst USING KEY emplstatus WHERE (lv_where_emplst) ).

SELECT DISTINCT /bic/anssa AS anssa
FROM /bic/sanssa
INTO TABLE @DATA(t_anssa)
WHERE /bic/anssa IN @so_anssa ORDER BY /bic/anssa.

SELECT DISTINCT comp_code
FROM /bi0/pcomp_code
INTO TABLE @DATA(t_ccycod)
WHERE comp_code IN @so_ccycd AND objvers = 'A' ORDER BY comp_code.

LOOP AT t_emplst ASSIGNING FIELD-SYMBOL(<row>).
AT FIRST.
CONCATENATE '''' <row>-emplstatus INTO string_list_emplst.
CONTINUE.
ENDAT.
CONCATENATE string_list_emplst <row>-emplstatus INTO string_list_emplst SEPARATED BY ','.
AT LAST.
CONCATENATE string_list_emplst '''' INTO string_list_emplst.
ENDAT.
ENDLOOP.

DESCRIBE TABLE t_emplst LINES DATA(rec_emplst).
IF rec_emplst <= 1. REPLACE ALL OCCURRENCES OF '''' IN string_list_emplst WITH ''. ENDIF.

LOOP AT t_anssa ASSIGNING FIELD-SYMBOL(<row2>).
AT FIRST.
CONCATENATE '''' <row2>-anssa INTO string_list_anssa.
CONTINUE.
ENDAT.
CONCATENATE string_list_anssa <row2>-anssa INTO string_list_anssa SEPARATED BY ','.
AT LAST.
CONCATENATE string_list_anssa '''' INTO string_list_anssa.
ENDAT.
ENDLOOP.
DESCRIBE TABLE t_anssa LINES DATA(rec_anssa).
IF rec_anssa <= 1. REPLACE ALL OCCURRENCES OF '''' IN string_list_anssa WITH ''. ENDIF.

LOOP AT t_ccycod ASSIGNING FIELD-SYMBOL(<row3>).
AT FIRST.
CONCATENATE '''' <row3>-comp_code INTO string_list_comp_code.
CONTINUE.
ENDAT.
CONCATENATE string_list_comp_code <row3>-comp_code INTO string_list_comp_code SEPARATED BY ','.
AT LAST.
CONCATENATE string_list_comp_code '''' INTO string_list_comp_code.
ENDAT.
ENDLOOP.
DESCRIBE TABLE t_ccycod LINES DATA(rec_ccycod).
IF rec_ccycod <= 1. REPLACE ALL OCCURRENCES OF '''' IN string_list_comp_code WITH ''. ENDIF.

IF p_empld = 'X'.  lv_datasel = 'D'.
  ELSEIF p_empla = 'X'. lv_datasel = 'A'.
    ELSEIF p_empln = 'X'. lv_datasel = 'N'.
      ELSEIF p_emple = 'X'. lv_datasel = 'E'.
        ELSEIF p_emplc = 'X'. lv_datasel = 'C'.
ENDIF.

IF NOT cl_abap_dbfeatures=>use_features(
          EXPORTING
            requested_features =
              VALUE #( ( cl_abap_dbfeatures=>call_amdp_method )
                       ( cl_abap_dbfeatures=>amdp_table_function ) ) ).
cl_demo_output=>display(
        `System does not support AMDP or CDS table functions` ).
 RETURN.
ENDIF.

IF lv_datasel = 'D'.
* DISTINCT : selecting several address type ends up with dup records per employee
SELECT DISTINCT * FROM zsez_tf_employee( p_keydate = @p_keydt ,
   p_emplstatus = @string_list_emplst,
   p_anssa = @string_list_anssa,
   p_comp_code = @string_list_comp_code )
 INTO TABLE @DATA(lt_resultd)
  ##db_feature_mode[amdp_table_function].
ELSEIF p_empla = 'X'.
  SELECT *
    FROM zsez_tf_ityp_hr006( p_keydate = @p_keydt ,
   p_emplstatus = @string_list_emplst,
   p_anssa = @string_list_anssa,
   p_comp_code = @string_list_comp_code )
 INTO TABLE @DATA(lt_resulta)
  ##db_feature_mode[amdp_table_function].
ELSEIF lv_datasel = 'N'.
  SELECT *
    FROM zsez_tf_empl_nid( p_keydate = @p_keydt ,
   p_emplstatus = @string_list_emplst,
   p_comp_code = @string_list_comp_code )
 INTO TABLE @DATA(lt_resultn)
  ##db_feature_mode[amdp_table_function].
ELSEIF lv_datasel = 'E'.
  SELECT *
    FROM zsez_tf_empl_emc( p_keydate = @p_keydt ,
   p_emplstatus = @string_list_emplst,
   p_comp_code = @string_list_comp_code )
 INTO TABLE @DATA(lt_resulte)
  ##db_feature_mode[amdp_table_function].
ELSEIF lv_datasel = 'C'.
  SELECT *
    FROM zsvez_tf_costcenter( p_keydate = @p_keydt ,
   p_emplstatus = @string_list_emplst,
   p_anssa = @string_list_anssa,
   p_comp_code = @string_list_comp_code )
 INTO TABLE @DATA(lt_resultc)
  ##db_feature_mode[amdp_table_function].
ENDIF. "lv_datasel
IF p_alv = 'X'.
CASE lv_datasel.
  WHEN 'D'. PERFORM callback_alv USING l_title lt_resultd.
  WHEN 'A'. PERFORM callback_alv USING l_title lt_resulta.
  WHEN 'N'. PERFORM callback_alv USING l_title lt_resultn.
  WHEN 'E'. PERFORM callback_alv USING l_title lt_resulte.
  WHEN 'C'. PERFORM callback_alv USING l_title lt_resultc.
ENDCASE.

*ELSEIF p_foreg = 'X' AND p_dir IS NOT INITIAL.
*
*ELSEIF p_backg = 'X'.

ENDIF. "P_ALV = 'X' or P_FOREG or P_BACKG



CREATE DATA ls_rec LIKE LINE OF lt_resultd.
ASSIGN ls_rec->* TO <ls_rec>.

*Creating internal table based on Line structure
CREATE DATA lt_databup LIKE lt_resultd.
ASSIGN lt_databup->* TO <lt_databup>.


FORM callback_alv USING
  VALUE(i_title) TYPE sy-title
  it_data        TYPE ANY TABLE.

IF it_data IS INITIAL.
  CONCATENATE 'No data found with : ' c_fempld  INTO m3.
  MESSAGE i799(rsm1) WITH m3.

ELSE.
IF p_empld = 'X'.  CONCATENATE c_fempld p_keydt INTO i_title SEPARATED BY '_'.
  ELSEIF p_empla = 'X'. CONCATENATE c_fempla p_keydt INTO i_title SEPARATED BY '_'.
    ELSEIF p_empln = 'X'. CONCATENATE c_fempln p_keydt INTO i_title SEPARATED BY '_'.
      ELSEIF p_emple = 'X'. CONCATENATE c_femple p_keydt INTO i_title SEPARATED BY '_'.
        ELSEIF p_emplc = 'X'. CONCATENATE c_femplc p_keydt INTO i_title SEPARATED BY '_'.
ENDIF.
ENDIF.
    CALL FUNCTION 'RSDU_CALL_ALV_TABLE'
      EXPORTING
        i_title   = i_title
        i_ta_data = it_data.
*  DATA: o_salv2 TYPE REF TO cl_salv_table.
*  TRY.
*      CALL METHOD cl_salv_table=>factory
*        IMPORTING
*          r_salv_table = o_salv2
*        CHANGING
*          t_table      = it_data.
*      o_salv2->display( ).
*    CATCH cx_salv_msg .
*  ENDTRY.
ENDFORM.                    "callback_alv

@EndUserText.label: 'Sezame EMPLOYEE DATA'
@ClientDependent: false
@AccessControl.authorizationCheck: #NOT_REQUIRED
//SELECT *
//FROM "ZSEZ_TF_EMPLOYEE"
//( P_KEYDATE => '20221012' , P_EMPLSTATUS => '3', P_ANSSA => '0001,0002,0003,0004,0005,0006,0007', P_COMP_CODE => 'AE42,BE74,BE75,BE76,BE95,BE97,BR92,CL65,CZ77,DE51,DE60,DE61,FR80,GB41,IN62,IN63,IN93,IT96,RO94,SG43,TH59' );

define table function ZSEZ_TF_EMPLOYEE
with parameters p_keydate : DATS,
p_emplstatus : RSDM4NODENAME,
p_ANSSA : RSDM4NODENAME,
p_comp_code : RSDM4NODENAME
returns {
SAP_EMPLOYEE_ID :   /BI0/OIEMPLOYEE ;
GROUP_ID    :   /BIC/OIUSRID    ;
LEGAL_FIRST_NAME    :   /BIC/OIVORNA    ;
NICK_NAME   :   /BIC/OIRUFNM    ;
OTHER_FIRST_NAME     :   /BIC/OIVORNA    ;

LEGAL_LAST_NAME :   /BIC/OINACHN    ;
PREFERRED_LAST_NAME:   /BIC/OINACHN    ;
BIRTH_NAME  :   /BIC/OINAME2    ;
MIDDLE_NAME :   PAD_MIDNM   ;
SUFFIX  :       CHAR1    ;

NATIONALITY :   LANDX  ;
SECOND_NATIONALITY  :   LANDX  ;
GENDER  :   uj_dim_member  ;

MARITAL_STATUS  :   uj_dim_member   ;
DATE_OF_MARITAL_STATUS : DATS   ;
BUSINESS_COMMUNICAT_LANGUAGE    :   RSTXTSH    ;
DISABILITY: CHAR1 ;



DATE_OF_BIRTH   :   DATS      ;

COUNTRY_OF_BIRTH  : INTCA3 ;
PLACE_OF_BIRTH : /BIC/OIGBORT ;
REGION_OF_BIRTH : /BIC/OIGBDEP    ;
OFFICIAL_LANGUAGE : uj_dim_member   ;
MOST_RECENT_HIRE_DATE   : DATS      ;
GROUP_START_DATE    : DATS      ;
SENORITY_DATE   : DATS      ;
START_DATE_BEFORE_ACQUISITION   : DATS    ;
POSITION_ID :   /BIC/OIUSRID    ;
POSITION :  RSTXTMD ;
POSITION_TITLE:  RSTXTMD ;
POSITION_ENTRY_DATE :     CHAR1  ;
LEGAL_ENTITY : /BI0/OIBPCSTEPTXT;

COMP_CODE   :   /BI0/OICOMP_CODE    ;
PERS_AREA   :   /BI0/OIPERS_AREA    ;
PERS_AREA_DESC  :   RSTXTMD ;
PERS_SAREA  :   /BI0/OIPERS_SAREA   ;
PERS_SAREA_DESC :   RSTXTSH ;

//HR_BUSINESS_PARTNER_GROUP_ID    :    
//BUSINESS_UNIT   :    RSTXTSH ;
//DIVISION    :    RSTXTSH ;

DEPARTMENT_CODE  : CHAR14 ; 
//DEPARTMENT  : RSTXTLG ;
BUSINESS_UNIT : uj_dim_member ;
SEZAME_COST_CENTER_ID   : uj_dim_member      ;

EMPLGROUP : /BI0/OIEMPLGROUP ;
WORK_LOCATION_NAME  :   /BI0/OIBUILDING ;
FULL_TIME_REMOTE    :       CHAR1    ;
LINE_MANAGER   :   /BIC/OIGROUPID  ;
JOB_ID  : uj_dim_member      ;
LOCAL_JOB_NAME  :       RSTXTMD    ;
JOB_GRADE : CHAR1 ;
EMPLOYEE_CLASS  :        RSTXTSH ;
CONTRACT_TYPE_16   :        RSTXTMD ;
CONTRACT_TYPE_01   :        RSTXTMD ;
CONTRACT_END_DATE   :   DATS      ;

PROBATIONARY_PERIOD_END_DATE    :       CHAR1   ;
EMPLOYMENT_TYPE :        RSTXTSH ;
STANDARD_WEEKLY_HOURS   :   /BIC/OIWOSTD    ;

GLOBAL_EMPLOYEE_LEVEL   :   RSTXTMD   ;
DEFINITE_WORK : CHAR2;
GROUP_OF_INTEREST : CHAR2;

ACTIONREAS : /BI0/OIACTIONREAS ;
ACTIONTYPE : /BI0/OIACTIONTYPE ;
ACTIONTYPE_DESC : RSTXTMD ;
SMART_CODE : CHAR1 ;

//csf job info romania local_event_reason
//csf job info romania employee_subgroup note GLOBAL_EMPLOYEE_LEVEL out of "HR001"."EMPLSGROUP" TXTSH
//csf job info romania personel sub area   

//PAY_GROUP : /BI0/OIPAYSCALEGR ;
//Compa Ratio Optional
//Payroll ID  Optional
//HOURLY_RATE : /BI0/OIPAYPCT;
//Pay Component   MANDATORY
//Amount/Percentage   MANDATORY
//Issue Date  MANDATORY
//CURRENCY : /BI0/OICURRENCY ;
//Pay Component   MANDATORY
//Amount/Percentage   MANDATORY
//Currency    MANDATORY
//FREQUENCY : CHAR7;
//
//COUNTRY_CODE1   :      CHAR3    ;
//PHONE_NUMBER1   :      RSTXTSH ;
//IS_PRIMARY  :            CHAR1    ;
//COUNTRY_CODE2   :      CHAR3    ;
//PHONE_NUMBER2   :      RSTXTSH ;
//IS_PRIMARY_2    :       CHAR1    ;
//EMAIL_ADDRESS1  :   /BIC/OIUSRIDLONG    ;

  
}
implemented by method ZCL_BPC_AMDP_SEZ_EMPLOYEE=>GET_EMPLOYEE_DATA;

@EndUserText.label: 'SEZAME Employee Emergency TF'
@ClientDependent: false
@AccessControl.authorizationCheck: #NOT_REQUIRED
//SELECT * FROM ZSEZ_TF_EMPL_EMC('20221019','3');
//SELECT * 
//FROM "ZSEZ_TF_ITYP_HR005"
//( P_KEYDATE => '20221019' , P_EMPLSTATUS => '3', P_COMP_CODE => 'AE42,BE74,BE75,BE76,BE95,BE97,BR92,CL65,CZ77,DE51,DE60,DE61,FR80,GB41,IN62,IN63,IN93,IT96,RO94,SG43,TH59' );

define table function ZSEZ_TF_EMPL_EMC
with parameters p_keydate : DATS,
p_emplstatus : RSDM4NODENAME,
p_comp_code :  RSDM4NODENAME
returns {
SAP_EMPLOYEE_ID :   /BI0/OIEMPLOYEE ;
GROUP_ID    :   /BIC/OIUSRID    ;
NAME : /BIC/OINAME2;
RELATIONSHIP : uj_dim_member ;
PHONE_NUMBER : /BI0/OITEL_NUMBER;
EMAIL_ADDRESS : AD_SMTPADR;
//cases where several emergency contacts are given ? no, then ?yes in next field
IS_PRIMARY : CHAR3;
}
implemented by method ZCL_BPC_AMDP_SEZ_EMPLOYEE=>GET_EMPLOYEE_EMC;

@EndUserText.label: 'SEZAME Employee National ID TF'
@ClientDependent: false
@AccessControl.authorizationCheck: #NOT_REQUIRED
//SELECT * FROM ZSEZ_TF_EMPL_NID('20221020','3');
//SELECT * 
//FROM "ZSEZ_TF_EMPL_NID"
//( P_KEYDATE => '20221019' , P_EMPLSTATUS => '3', P_COMP_CODE => 'AE42,BE74,BE75,BE76,BE95,BE97,BR92,CL65,CZ77,DE51,DE60,DE61,FR80,GB41,IN62,IN63,IN93,IT96,RO94,SG43,TH59' );

define table function ZSEZ_TF_EMPL_NID
with parameters p_keydate : DATS,
p_emplstatus : RSDM4NODENAME,
p_comp_code : RSDM4NODENAME
returns {
SAP_EMPLOYEE_ID :   /BI0/OIEMPLOYEE ;
GROUP_ID    :   /BIC/OIUSRID    ;
COUNTRY : uj_dim_member ;
NATIONAL_ID_CARD_TYPE : uj_dim_member ;
NATIONAL_ID : uj_dim_member ;
IS_PRIMARY : uj_dim_member ;
COMP_CODE : /BI0/OICOMP_CODE ;
}
implemented by method ZCL_BPC_AMDP_SEZ_EMPLOYEE=>GET_EMPLOYEE_NID;

