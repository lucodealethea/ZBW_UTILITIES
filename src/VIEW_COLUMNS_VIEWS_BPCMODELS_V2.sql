/*
In order to be able to select in AMDP, one needs to create a view in _SYS_BIC
based on the CALCULATION_SCENARIOs that BPC 11 builds automatically

DROP VIEW "_SYS_BIC"."system-local.bw.bw2hana.cpmb/ZBPC<BPC_MODEL>_<VIEW_TYPE>";

CREATE COLUMN VIEW "_SYS_BIC"."system-local.bw.bw2hana.cpmb/ZBPC<BPC_MODEL>_<VIEW_TYPE>" WITH PARAMETERS (indexType=11,
'PARENTCALCINDEXSCHEMA'='SAPHANADB','PARENTCALCINDEX'='<BPC_CALC_SCENARIO>','PARENTCALCNODE'='/CPMB/ZOIGDZO$ADSO')

*/

The SQL is generated with the last SELECT at the bottom with
the WHERE CLAUSE
WHERE ADSO.APPLICATION_ID = <BPC_MODEL> AND ADSO.VIEW_TYPE NOT IN ('EXTR','CPMB') AND
( UJ.DIMENSION_TYPE IS NULL OR UJ.DIMENSION_TYPE = 'KEY' OR UJ.DIMENSION_TYPE = '__' ) AND
NOT ADSO.COLUMN_NAME IN
('0REQTSN_KEY','0REQTSN__0ASOURCE_KEY','0REQTSN__0AUSER_KEY','0DATAPAKID_KEY','0RECORD_KEY','0RECORDMODE_KEY','1TECHPROV_KEY','_IS_DELTA_KEY','_IS_FULL_KEY')

------------------------------- based on BPC metadat build the PROJECTION, FROM and GROUP BY CLAUSEs --------
with cte_bpc_attributes as
(
SELECT DISTINCT
"A"."APPSET_ID", 
'__' AS "DIMENSION_TYPE",
"D"."DIMENSION" AS "MAIN_DIMENSION",
REPLACE("D"."TECH_NAME",'/','$') AS "MAIN_DIMENSION_TECH",

"A"."DIMENSION",
"A"."TECH_NAME" AS "TECH_NAME",
REPLACE("A"."TECH_NAME",'/','$') AS "TECH_NAME2",
CASE WHEN "RW"."SOURCEHINT" IS NULL THEN ( CASE "A"."ATTRIBUTE_NAME" WHEN N'REVERSE' THEN N'REVERSE_' ELSE "A"."ATTRIBUTE_NAME" END) 
ELSE ( CONCAT( RTRIM ( "A"."ATTRIBUTE_NAME" ),N'1')) 
END AS "DIMENSION_NAME",
"A"."CAPTION" 
FROM ( 
  "UJA_DIM_ATTR" "A" INNER JOIN "UJA_DIMENSION" "D" ON ( 
    "A"."APPSET_ID" = "D"."APPSET_ID" AND 
    "A"."DIMENSION" = "D"."DIMENSION" AND 
    "A"."MANDT" = "D"."MANDT" AND 
    "D"."MANDT" = SESSION_CONTEXT( 'CDS_CLIENT' ) AND "A"."MANDT" = "D"."MANDT" 
  ) 
) LEFT OUTER JOIN "TRESE" "RW" ON 
  "RW"."NAME" = "A"."ATTRIBUTE_NAME"
WHERE "A"."APPSET_ID" = 'TRACTEBEL_TEMIS'
UNION
SELECT
"D"."APPSET_ID",
'KEY' AS "DIMENSION_TYPE",
"D"."DIMENSION" AS "MAIN_DIMENSION",
REPLACE("D"."TECH_NAME",'/','$') AS "MAIN_DIMENSION_TECH",
"D"."DIMENSION",
"D"."TECH_NAME", 
REPLACE("D"."TECH_NAME",'/','$') AS "TECH_NAME2",
"D"."DIMENSION" AS "DIMENSION_NAME",
"T"."DESCRIPTION" AS "CAPTION"
FROM "UJA_DIMENSION" AS "D"
INNER JOIN "UJA_DIMENSIONT" AS "T"
ON "T"."APPSET_ID" = "D"."APPSET_ID" AND "T"."DIMENSION" = "D"."DIMENSION" AND "T"."LANGU" = 'E'
WHERE "D"."APPSET_ID" = 'TRACTEBEL_TEMIS'
ORDER BY DIMENSION, DIMENSION_TYPE
)
,
cte_select_fields AS
(
SELECT
"APPSET_ID",
CASE "DIMENSION_TYPE"
WHEN '__'  THEN "MAIN_DIMENSION_TECH"||"DIMENSION_TYPE"||"TECH_NAME2"||'_KEY'
WHEN 'KEY' THEN "MAIN_DIMENSION_TECH"||'_'||"DIMENSION_TYPE"
END AS "COLUMN_NAME",
"DIMENSION_TYPE",
"MAIN_DIMENSION",
"MAIN_DIMENSION_TECH",
CASE WHEN "DIMENSION_TYPE" = '__' THEN "DIMENSION"||"DIMENSION_TYPE"||"DIMENSION_NAME" ELSE "DIMENSION" END AS "DIMENSION",
"TECH_NAME",
"TECH_NAME2",
"DIMENSION_NAME", 
"CAPTION"
FROM cte_bpc_attributes
)
,
cte_model_prefix as
(
SELECT APPLICATION_ID, APPL_PREFIX, INFOCUBE AS ADSO
FROM UJA_APPL
WHERE APPSET_ID = 'TRACTEBEL_TEMIS' AND NOT APPLICATION_ID IN ('SUCCESS_RATE','ATP','AGEING_BAL','MENU')
)
,
cte_adso_all as
(
SELECT "V"."SCHEMA_NAME", "V"."VIEW_NAME", 
CASE WHEN SUBSTRING("V"."VIEW_NAME",22,4) = '/CPM' THEN 'CPMB' WHEN SUBSTRING("V"."VIEW_NAME",22,4) = 'EXTR' THEN 'EXTR' WHEN SUBSTRING("V"."VIEW_NAME",22,4) = 'QO./' THEN 'QO'   END AS VIEW_TYPE, 
SUBSTR_BEFORE(SUBSTR_AFTER("V"."VIEW_NAME",'.'),'$ADSO') AS ADSO,
"V"."SCHEMA_NAME"||':'||SUBSTR_REGEXPR('(.+)\.(.+)' IN VIEW_NAME GROUP 1 ) AS SCENARIO_NAME
FROM "PUBLIC"."VIEWS" AS "V"
WHERE "V"."VIEW_NAME" LIKE '0BW:BIA:CPMB_Z%ADSO' AND "V"."IS_VALID" = 'TRUE' AND RIGHT("V"."VIEW_NAME",4) = 'ADSO'  
)
,
cte_scenarios AS
(
SELECT "V".*,
"SC"."IS_PERSISTENT","SC"."MEMORY_SIZE","CREATE_TIME", "COMPONENT"
FROM cte_adso_all AS "V"
INNER JOIN M_CE_CALCSCENARIOS AS SC
ON "V"."SCENARIO_NAME" = "SC"."SCENARIO_NAME"
)
,
cte_adso_views as
(
SELECT A.*, P.APPLICATION_ID, P.APPL_PREFIX 
FROM cte_scenarios as A
INNER JOIN cte_model_prefix AS P
ON P.ADSO = A.ADSO 
ORDER BY P.APPLICATION_ID
)
,
cte_adso_columns as
(
SELECT A.VIEW_TYPE, 
A.ADSO,A.APPLICATION_ID,A.APPL_PREFIX, REPLACE(REPLACE(C.COLUMN_NAME,'$CPMB$','/B28/S_'),'$B28$','/B28/') AS ADSO_COLUMN, C.*
FROM "PUBLIC"."VIEW_COLUMNS" AS C
INNER JOIN cte_adso_views AS A
ON C.SCHEMA_NAME = A.SCHEMA_NAME AND C.VIEW_NAME = A.VIEW_NAME
WHERE RIGHT(C.COLUMN_NAME,4) <> '_SID'
AND C.COLUMN_NAME <> '__numoffacttablerows'
ORDER BY C.VIEW_NAME, C.POSITION
)
,
cte_prep_sql as
(
SELECT
ADSO.VIEW_TYPE
,ADSO.ADSO
,UJ.APPSET_ID
,CASE 
WHEN ADSO.COLUMN_NAME = '$B28$S_SDATA' OR ADSO.COLUMN_NAME = '$B28$S_LSDATA' OR ADSO.COLUMN_NAME = '/B28/S_SDATA' OR ADSO.COLUMN_NAME = '/B28/S_LSDATA' THEN 'DQL'
ELSE UJ.DIMENSION_TYPE
END AS DIMENSION_TYPE
,ADSO.APPLICATION_ID
,ADSO.APPL_PREFIX
,ADSO.SCHEMA_NAME
,ADSO.VIEW_NAME
,ADSO.COLUMN_NAME
,CASE ADSO.COLUMN_NAME WHEN '0REQTSN_KEY' THEN 0 WHEN '$B28$S_SDATA' THEN 999 ELSE ADSO.POSITION END AS POSITION
,ADSO.DATA_TYPE_NAME
,ADSO.LENGTH
,ADSO.SCALE
,CASE 
WHEN ADSO.COLUMN_NAME = '$B28$S_SDATA' OR ADSO.COLUMN_NAME = '$B28$S_LSDATA' OR ADSO.COLUMN_NAME = '/B28/S_SDATA' OR ADSO.COLUMN_NAME = '/B28/S_LSDATA' THEN 'SIGNEDDATA'
ELSE UJ.DIMENSION
END AS DIMENSION
,CASE 
WHEN ADSO.COLUMN_NAME = '$B28$S_SDATA' OR ADSO.COLUMN_NAME = '/B28/S_SDATA'  THEN 'UJ_SDATA'
WHEN ADSO.COLUMN_NAME = '$B28$S_LSDATA' OR ADSO.COLUMN_NAME = '/B28/S_LSDATA' THEN 'UJ_LARGE_SDATA'
ELSE 'UJ_DIM_MEMBER'
END AS TF_DATATYPE
,UJ.CAPTION,
CASE ADSO.COLUMN_NAME 
WHEN '0REQTSN_KEY' THEN '"'||ADSO.APPLICATION_ID||'"."'||ADSO.COLUMN_NAME||'" AS '||REPLACE(SUBSTRING(ADSO.COLUMN_NAME,2,10),'_KEY','')
WHEN '$B28$S_SDATA' THEN ',SUM("'||ADSO.APPLICATION_ID||'"."'||ADSO.COLUMN_NAME||'") AS SIGNEDDATA' 
ELSE CASE WHEN ADSO.POSITION = 1 THEN '"'||ADSO.APPLICATION_ID||'"."'||ADSO.COLUMN_NAME||'" AS '||UJ.DIMENSION
ELSE ',"'||ADSO.APPLICATION_ID||'"."'||ADSO.COLUMN_NAME||'" AS '||UJ.DIMENSION
END
END AS PROJECTION_COLUMN,
'FROM "'||ADSO.SCHEMA_NAME||'"."'||ADSO.VIEW_NAME||'" AS "'||ADSO.APPLICATION_ID||'"' AS FROM_CLAUSE,
CASE ADSO.COLUMN_NAME 
WHEN '0REQTSN_KEY' THEN
'"'||ADSO.APPLICATION_ID||'"."'||ADSO.COLUMN_NAME||'"' 
WHEN '$B28$S_SDATA' THEN ''
ELSE CASE WHEN ADSO.POSITION = 1 THEN '"'||ADSO.APPLICATION_ID||'"."'||ADSO.COLUMN_NAME||'"' 
ELSE ',"'||ADSO.APPLICATION_ID||'"."'||ADSO.COLUMN_NAME||'"'
END
END AS GROUP_BY_CLAUSE
FROM cte_adso_columns AS ADSO
LEFT OUTER JOIN cte_select_fields as UJ
ON ADSO.COLUMN_NAME = UJ.COLUMN_NAME
WHERE ADSO.APPLICATION_ID = 'SGA' AND ADSO.VIEW_TYPE NOT IN ('CPMB','EXTR') AND
/*QO UJ.DIMENSION_TYPE = 'KEY' AND */
NOT ADSO.COLUMN_NAME IN
('0REQTSN__0ASOURCE_KEY','0REQTSN__0AUSER_KEY','0REQTSN_KEY','0DATAPAKID_KEY','0RECORD_KEY','0RECORDMODE_KEY','1TECHPROV_KEY','_IS_DELTA_KEY','_IS_FULL_KEY')
ORDER BY VIEW_NAME, POSITION
)
,
cte_projection as
(
SELECT 
VIEW_TYPE,
DIMENSION_TYPE,
DIMENSION,
PROJECTION_COLUMN AS STATEMENT_LINE,
RANK() over
(partition by 
ADSO ORDER BY POSITION)  AS POSITION
,TF_DATATYPE
FROM cte_prep_sql
WHERE PROJECTION_COLUMN <> ''
)
,
cte_group_by as
(
SELECT 
VIEW_TYPE,
DIMENSION_TYPE,
DIMENSION,
GROUP_BY_CLAUSE AS STATEMENT_LINE,
RANK() over
(partition by 
ADSO ORDER BY POSITION)+1000  AS POSITION
,'' AS TF_DATATYPE
FROM cte_prep_sql
WHERE GROUP_BY_CLAUSE <> ''
)
,
cte_statement as
(
SELECT '' AS VIEW_TYPE, 'DQL' AS DIMENSION_TYPE, '' AS DIMENSION,'SELECT' AS STATEMENT_LINE, 0 AS POSITION, '' AS TF_DATATYPE
FROM "SYS"."DUMMY"
UNION
SELECT VIEW_TYPE, DIMENSION_TYPE, DIMENSION, STATEMENT_LINE, POSITION, TF_DATATYPE
FROM cte_projection
UNION
SELECT DISTINCT '' AS VIEW_TYPE, 'KEY' AS DIMENSION_TYPE, '' AS DIMENSION, FROM_CLAUSE AS STATEMENT_LINE, (SELECT MAX(POSITION)+1 AS POSITION FROM cte_projection ) AS POSITION
, '' AS TF_DATATYPE
FROM cte_prep_sql
UNION
SELECT '' AS VIEW_TYPE, 'DQL' AS DIMENSION_TYPE, '' AS DIMENSION, 'GROUP BY' AS STATEMENT_LINE, (SELECT MAX(POSITION)+2 AS POSITION FROM cte_projection ) AS POSITION
, '' AS TF_DATATYPE
FROM "SYS"."DUMMY"
UNION
SELECT VIEW_TYPE, DIMENSION_TYPE, DIMENSION, STATEMENT_LINE, POSITION, TF_DATATYPE
FROM cte_group_by
UNION
SELECT '' AS VIEW_TYPE, 'DQL' AS DIMENSION_TYPE, '' AS DIMENSION, 'ORDER BY TIME;' AS STATEMENT_LINE, (SELECT MAX(POSITION)+1 AS POSITION FROM cte_group_by ) AS POSITION
, '' AS TF_DATATYPE
FROM "SYS"."DUMMY"
)
,
cte_combined as
(
SELECT
VIEW_TYPE,
DIMENSION_TYPE,
DIMENSION,
CASE WHEN ( POSITION = 1 OR POSITION = 1001 ) AND SUBSTRING(STATEMENT_LINE,1,1) = ',' THEN REPLACE(STATEMENT_LINE,',','') ELSE STATEMENT_LINE END AS STATEMENT_LINE, 
POSITION,
TF_DATATYPE,
CASE WHEN TF_DATATYPE = '' THEN '' ELSE DIMENSION||' : '||TF_DATATYPE||';' END AS TF_LINE
FROM cte_statement
)
SELECT *
FROM cte_combined
WHERE ( DIMENSION_TYPE IN ('KEY','DQL') ) OR DIMENSION IN ( 'TIME__BASE_PERIOD', 'TIME__YEAR1', 'OBS__COMP_CODE', 'OBS__CURRENCY')
;

example:
SELECT
"SGA"."$CPMB$ZOD3GBJ_KEY" AS N_ACCOUNT
,"SGA"."$CPMB$ZOD3XXP_KEY" AS PARTNER
,"SGA"."$CPMB$ZOD5XXD_KEY" AS FIGURES
,"SGA"."$CPMB$ZOD5Y2R_KEY" AS PRODUCT
,"SGA"."$CPMB$ZODD2JW_KEY" AS SMART
,"SGA"."$CPMB$ZODI75I_KEY" AS TIME
,"SGA"."$CPMB$ZODI75I__$CPMB$BASPERD_KEY" AS TIME__BASE_PERIOD
,"SGA"."$CPMB$ZODI75I__$CPMB$YEAR_KEY" AS TIME__YEAR1
,"SGA"."$CPMB$ZODP4UT_KEY" AS FUNCTIONAL_AREA
,"SGA"."$CPMB$ZODPS1W_KEY" AS EST_TYPE
,"SGA"."$CPMB$ZODTZZF_KEY" AS OBS
,"SGA"."$CPMB$ZODTZZF__$CPMB$CURR_KEY" AS OBS__CURRENCY
,"SGA"."$CPMB$ZODTZZF__$CPMB$ZOPUX70_KEY" AS OBS__COMP_CODE
,"SGA"."$CPMB$ZODU8PO_KEY" AS WBS
,"SGA"."$CPMB$ZODVVCC_KEY" AS DATASRC
,"SGA"."$CPMB$ZODXJ55_KEY" AS OVH_LINE
,"SGA"."$CPMB$ZODYMR6_KEY" AS VERSION
,"SGA"."$CPMB$ZODYNME_KEY" AS CURRENCY
,SUM("SGA"."$B28$S_SDATA") AS SIGNEDDATA
FROM "SAPHANADB"."0BW:BIA:CPMB_ZOIJ4XC:QO./CPMB/ZOIJ4XC$ADSO" AS "SGA"
GROUP BY
"SGA"."$CPMB$ZOD3GBJ_KEY"
,"SGA"."$CPMB$ZOD3XXP_KEY"
,"SGA"."$CPMB$ZOD5XXD_KEY"
,"SGA"."$CPMB$ZOD5Y2R_KEY"
,"SGA"."$CPMB$ZODD2JW_KEY"
,"SGA"."$CPMB$ZODI75I_KEY"
,"SGA"."$CPMB$ZODI75I__$CPMB$BASPERD_KEY"
,"SGA"."$CPMB$ZODI75I__$CPMB$YEAR_KEY"
,"SGA"."$CPMB$ZODP4UT_KEY"
,"SGA"."$CPMB$ZODPS1W_KEY"
,"SGA"."$CPMB$ZODTZZF_KEY"
,"SGA"."$CPMB$ZODTZZF__$CPMB$CURR_KEY"
,"SGA"."$CPMB$ZODTZZF__$CPMB$ZOPUX70_KEY"
,"SGA"."$CPMB$ZODU8PO_KEY"
,"SGA"."$CPMB$ZODVVCC_KEY"
,"SGA"."$CPMB$ZODXJ55_KEY"
,"SGA"."$CPMB$ZODYMR6_KEY"
,"SGA"."$CPMB$ZODYNME_KEY"
ORDER BY TIME;

-------------------------- BPC Model is Periodic > YTD ---------------------

with cte_base_period as
(
SELECT DISTINCT
RIGHT("SGA"."$CPMB$ZODI75I__$CPMB$BASPERD_KEY",2) AS BASE_PERIOD
FROM "SAPHANADB"."0BW:BIA:CPMB_ZOIJ4XC:QO./CPMB/ZOIJ4XC$ADSO" AS "SGA"
ORDER BY 1
)
,
cte_rates as
(
SELECT
"Rates"."$CPMB$ZODI75I_KEY" AS TIME
,"Rates"."$CPMB$ZODMY52_KEY" AS INPUTCURRENCY
,"Rates"."$CPMB$ZODO9YB_KEY" AS R_ENTITY
,"Rates"."$CPMB$ZODTYEK_KEY" AS R_ACCOUNT
,"Rates"."$CPMB$ZODYMR6_KEY" AS VERSION
,SUM("Rates"."$B28$S_SDATA") AS SIGNEDDATA
FROM "SAPHANADB"."0BW:BIA:CPMB_ZOIY24T:EXTRACTION./CPMB/ZOIY24T$ADSO" AS "Rates"
WHERE "Rates"."$CPMB$ZODI75I_KEY" BETWEEN '2022_01'AND '2022_12' AND
"Rates"."$CPMB$ZODYMR6_KEY" = 'ACTUALS'
GROUP BY
"Rates"."$CPMB$ZODI75I_KEY"
,"Rates"."$CPMB$ZODMY52_KEY"
,"Rates"."$CPMB$ZODO9YB_KEY"
,"Rates"."$CPMB$ZODTYEK_KEY"
,"Rates"."$CPMB$ZODYMR6_KEY"
ORDER BY 1,5
)
,
cte_time as
(
SELECT
"SGA"."$CPMB$ZOD3GBJ_KEY" AS N_ACCOUNT
,"SGA"."$CPMB$ZOD3XXP_KEY" AS PARTNER
,"SGA"."$CPMB$ZOD5XXD_KEY" AS FIGURES
,"SGA"."$CPMB$ZOD5Y2R_KEY" AS PRODUCT
,"SGA"."$CPMB$ZODD2JW_KEY" AS SMART
,"SGA"."$CPMB$ZODI75I_KEY" AS TIME
,"SGA"."$CPMB$ZODI75I__$CPMB$YEAR_KEY" AS TIME_YEAR
,"SGA"."$CPMB$ZODI75I__$CPMB$YEAR_KEY"||'_'||T.BASE_PERIOD AS BASE_PERIOD
,"SGA"."$CPMB$ZODP4UT_KEY" AS FUNCTIONAL_AREA
,"SGA"."$CPMB$ZODPS1W_KEY" AS EST_TYPE
,"SGA"."$CPMB$ZODTZZF_KEY" AS OBS
,"SGA"."$CPMB$ZODTZZF__$CPMB$CURR_KEY" AS OBS__CURRENCY
,"SGA"."$CPMB$ZODTZZF__$CPMB$ZOPUX70_KEY" AS OBS__COMP_CODE
,"SGA"."$CPMB$ZODU8PO_KEY" AS WBS
,"SGA"."$CPMB$ZODVVCC_KEY" AS DATASRC
,"SGA"."$CPMB$ZODXJ55_KEY" AS OVH_LINE
,"SGA"."$CPMB$ZODYMR6_KEY" AS VERSION
,"SGA"."$CPMB$ZODYNME_KEY" AS CURRENCY
,CASE WHEN SUBSTRING("SGA"."$CPMB$ZODI75I_KEY",1,4)||'_'||T.BASE_PERIOD <> "SGA"."$CPMB$ZODI75I_KEY"  
THEN 0 
ELSE SUM("SGA"."$B28$S_SDATA") 
END AS SIGNEDDATA
FROM "SAPHANADB"."0BW:BIA:CPMB_ZOIJ4XC:QO./CPMB/ZOIJ4XC$ADSO" AS "SGA"
CROSS JOIN cte_base_period AS T
WHERE "SGA"."$CPMB$ZODI75I_KEY" BETWEEN '2022_01' AND '2022_12' AND
"SGA"."$CPMB$ZODYMR6_KEY" = 'ACTUALS' AND 
"SGA"."$CPMB$ZODYNME_KEY" = 'LC' AND
"SGA"."$CPMB$ZOD5XXD_KEY" = 'AMOUNT' AND
"SGA"."$CPMB$ZOD3GBJ_KEY" = '60010' AND
"SGA"."$CPMB$ZODPS1W_KEY" = '1.SGA' AND
"SGA"."$CPMB$ZODTZZF_KEY" = '74.W100'
GROUP BY
"SGA"."$CPMB$ZOD3GBJ_KEY"
,"SGA"."$CPMB$ZOD3XXP_KEY"
,"SGA"."$CPMB$ZOD5XXD_KEY"
,"SGA"."$CPMB$ZOD5Y2R_KEY"
,"SGA"."$CPMB$ZODD2JW_KEY"
,"SGA"."$CPMB$ZODI75I_KEY"
,"SGA"."$CPMB$ZODI75I__$CPMB$YEAR_KEY"
,T.BASE_PERIOD
,"SGA"."$CPMB$ZODP4UT_KEY"
,"SGA"."$CPMB$ZODPS1W_KEY"
,"SGA"."$CPMB$ZODTZZF_KEY"
,"SGA"."$CPMB$ZODTZZF__$CPMB$CURR_KEY"
,"SGA"."$CPMB$ZODTZZF__$CPMB$ZOPUX70_KEY"
,"SGA"."$CPMB$ZODU8PO_KEY"
,"SGA"."$CPMB$ZODVVCC_KEY"
,"SGA"."$CPMB$ZODXJ55_KEY"
,"SGA"."$CPMB$ZODYMR6_KEY"
,"SGA"."$CPMB$ZODYNME_KEY"
ORDER BY TIME,OBS
)
, CTE_MTD AS
(
SELECT
N_ACCOUNT
,PARTNER
,FIGURES
,PRODUCT
,SMART
,TIME_YEAR
,BASE_PERIOD AS TIME
,FUNCTIONAL_AREA
,EST_TYPE
,OBS
,OBS__CURRENCY
,OBS__COMP_CODE
,WBS
,DATASRC
,OVH_LINE
,VERSION
,CURRENCY
,SUM(SIGNEDDATA) AS MTD
FROM CTE_TIME
GROUP BY
N_ACCOUNT
,PARTNER
,FIGURES
,PRODUCT
,SMART
,TIME_YEAR
,BASE_PERIOD
,FUNCTIONAL_AREA
,EST_TYPE
,OBS
,OBS__CURRENCY
,OBS__COMP_CODE
,WBS
,DATASRC
,OVH_LINE
,VERSION
,CURRENCY
)
,
CTE_YTD AS
(
SELECT
N_ACCOUNT
,PARTNER
,FIGURES
,PRODUCT
,SMART
,TIME_YEAR
,TIME
,FUNCTIONAL_AREA
,EST_TYPE
,OBS
,OBS__CURRENCY
,OBS__COMP_CODE
,WBS
,DATASRC
,OVH_LINE
,VERSION
,CURRENCY
,SUM(MTD) AS MTD
,sum(sum(MTD)) over (partition by N_ACCOUNT,PARTNER,FIGURES,PRODUCT,SMART,TIME_YEAR,FUNCTIONAL_AREA,EST_TYPE,OBS,OBS__CURRENCY,OBS__COMP_CODE,WBS,DATASRC,OVH_LINE,VERSION,CURRENCY
ORDER BY TIME) AS YTD
FROM CTE_MTD
GROUP BY
N_ACCOUNT
,PARTNER
,FIGURES
,PRODUCT
,SMART
,TIME_YEAR
,TIME
,FUNCTIONAL_AREA
,EST_TYPE
,OBS
,OBS__CURRENCY
,OBS__COMP_CODE
,WBS
,DATASRC
,OVH_LINE
,VERSION
,CURRENCY
/*HAVING SUM(MTD) <> 0*/
ORDER BY TIME
)
SELECT * FROM CTE_YTD;
